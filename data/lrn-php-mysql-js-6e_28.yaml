- en: Chapter 25\. Introduction to HTML5
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第25章。HTML5简介
- en: HTML5 represents a substantial leap forward in web design, layout, and usability.
    It provides a simple way to manipulate graphics in a web browser without resorting
    to plug-ins such as Flash, offers methods to insert audio and video into web pages
    (again without plug-ins), and irons out several annoying inconsistencies that
    crept into HTML during its evolution.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: HTML5代表了网页设计、布局和可用性的重大进步。它提供了一种简单的方法，在网页浏览器中操作图形，而无需依赖Flash等插件，提供了在网页中插入音频和视频的方法（同样无需插件），并消除了HTML演变过程中出现的几个令人讨厌的不一致之处。
- en: In addition, HTML5 includes numerous other enhancements, such as geolocation
    handling, web workers to manage background tasks, improved form handling, and
    access to bundles of local storage (far in excess of the limited capabilities
    of cookies).
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，HTML5还包括许多其他增强功能，如处理地理位置信息、Web Workers管理后台任务、改进的表单处理以及访问本地存储捆绑（远远超出了Cookie的有限功能）。
- en: What’s interesting about HTML5, though, is that it has been an ongoing evolution,
    in which browsers have adopted different features at different times. Fortunately,
    all the biggest and most popular HTML5 additions are now supported by all major
    browsers (those with more than 1% or so of the market, such as Chrome, Internet
    Explorer, Edge, Firefox, Safari, Opera, and the Android and iOS browsers).
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 不过，HTML5的有趣之处在于它是一个持续发展的过程，各个浏览器在不同时间采纳了不同的特性。幸运的是，现在所有主流浏览器（市场份额超过1%的浏览器，如Chrome、Internet
    Explorer、Edge、Firefox、Safari、Opera以及Android和iOS的浏览器）都已支持所有最重要和最受欢迎的HTML5新增功能。
- en: The Canvas
  id: totrans-4
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 画布
- en: Originally introduced by Apple for the WebKit rendering engine (which had itself
    originated in the KDE HTML layout engine) for its Safari browser, the *canvas*
    element enables us to draw graphics in a web page without having to rely on a
    plug-in such as Java or Flash. After being standardized, the canvas was adopted
    by all other browsers and is now a mainstay of modern web development.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 最初由苹果为其Safari浏览器的WebKit渲染引擎引入（该引擎本身起源于KDE的HTML布局引擎），*canvas*元素使我们能够在网页中绘制图形，而无需依赖Java或Flash等插件。在标准化后，所有其他浏览器都采纳了canvas，并且它现在是现代Web开发的重要组成部分。
- en: Like other HTML elements, a canvas is simply an element within a web page with
    defined dimensions and within which you can use JavaScript to insert content—in
    this case, to draw graphics. You create a canvas by using the `<canvas>` tag,
    to which you must assign an ID so that JavaScript will know which canvas it is
    accessing (as you can have more than one canvas on a page).
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 与其他HTML元素一样，canvas只是网页中的一个元素，具有定义的尺寸，在其中可以使用JavaScript插入内容——在本例中，用于绘制图形。您通过使用`<canvas>`标签创建canvas，必须为其分配一个ID，以便JavaScript知道它正在访问哪个canvas（因为页面上可以有多个canvas）。
- en: In [Example 25-1](#using_the_html5_canvas_element), I’ve created a canvas element,
    with the ID `mycanvas`, that contains some text that is displayed only in browsers
    that don’t support the canvas. Beneath this there is a section of JavaScript that
    draws the Japanese flag on the canvas (as shown in [Figure 25-1](#drawing_the_japanese_flag_using_an_html5)).
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 在[示例25-1](#using_the_html5_canvas_element)中，我创建了一个带有ID `mycanvas` 的canvas元素，在不支持canvas的浏览器中仅显示一些文本。在下面的JavaScript部分中，绘制了日本国旗的代码（如[图25-1](#drawing_the_japanese_flag_using_an_html5)所示）。
- en: Example 25-1\. Using the HTML5 canvas element
  id: totrans-8
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
  zh: 示例25-1。使用HTML5 canvas元素
- en: '[PRE0]'
  id: totrans-9
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: At this point, it’s not necessary to detail exactly what is going on—I explain
    that in [Chapter 26](ch26.xhtml#html5_canvas)—but you should already see that
    using the canvas is not hard, although it does require learning a few new JavaScript
    functions. Note that this example draws on the *OSC.js* set of functions from
    [Chapter 21](ch21.xhtml#accessing_css_from_javascript) to help keep the code neat
    and compact.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 到这一点，不必详细说明正在发生的事情——我在[第26章](ch26.xhtml#html5_canvas)中会解释——但你应该已经看到使用画布并不难，尽管它确实需要学习一些新的JavaScript函数。请注意，此示例利用了*OSC.js*函数集来自[第21章](ch21.xhtml#accessing_css_from_javascript)，以帮助保持代码整洁和紧凑。
- en: '![Drawing the Japanese flag using an HTML5 canvas](Images/pmj6_2501.png)'
  id: totrans-11
  prefs: []
  type: TYPE_IMG
  zh: '![使用HTML5 canvas绘制日本国旗](Images/pmj6_2501.png)'
- en: Figure 25-1\. Drawing the Japanese flag using an HTML5 canvas
  id: totrans-12
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图25-1。使用HTML5 canvas绘制日本国旗
- en: Geolocation
  id: totrans-13
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 地理位置
- en: Using *geolocation*, your browser can return information to a web server about
    your location. This information can come from a GPS chip in the computer or mobile
    device you’re using, from your IP address, or from analysis of nearby WiFi hotspots.
    For security purposes, the user is always in control and can refuse to provide
    this information on a one-off basis or can enable settings to either permanently
    block or allow access to this data from one or all websites.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 使用 *地理位置*，你的浏览器可以向服务器返回关于你位置的信息。此信息可以来自你使用的计算机或移动设备中的GPS芯片，也可以来自你的IP地址，或通过分析附近的WiFi热点获得。为了安全起见，用户始终控制这些信息的提供，可以拒绝一次性提供这些信息，或者启用设置以永久性地阻止或允许所有网站或某个网站访问这些数据。
- en: There are numerous uses for this technology, including giving you turn-by-turn
    navigation; providing local maps; notifying you of nearby restaurants, WiFi hotspots,
    or other places; letting you know which friends are near you; directing you to
    the nearest gas station; and more.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 此技术有许多用途，包括提供逐步导航；提供本地地图；通知附近的餐馆、WiFi热点或其他地方；告知你附近的朋友；指引你去最近的加油站；等等。
- en: '[Example 25-2](#displaying_the_map_at_a_userapostrophes) will display a Google
    map of the user’s location, as long as the browser supports geolocation and the
    user grants access to location data (as shown in [Figure 25-2](#new-geoloc)).
    Otherwise, it will display an error.'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: '[示例 25-2](#displaying_the_map_at_a_userapostrophes) 将显示用户位置的谷歌地图，只要浏览器支持地理位置和用户授予位置数据访问权限（如
    [图 25-2](#new-geoloc) 所示）。否则，它将显示一个错误。'
- en: Example 25-2\. Displaying a map of the user’s location
  id: totrans-17
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
  zh: 示例 25-2\. 显示用户位置的地图
- en: '[PRE1]'
  id: totrans-18
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: Again, here is not the place to describe how this all works; I will detail that
    in [Chapter 28](ch28.xhtml#other_html5_features). For now, though, this example
    serves to show you how easy managing geolocation can be.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 再次强调，这里不是描述所有工作原理的地方；我会在 [第28章](ch28.xhtml#other_html5_features) 中详细说明。目前，这个示例展示了管理地理位置信息的简易性。
- en: '![](Images/pmj6_2502.png)'
  id: totrans-20
  prefs: []
  type: TYPE_IMG
  zh: '![](Images/pmj6_2502.png)'
- en: Figure 25-2\. The user’s location has been used to display a map
  id: totrans-21
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 25-2\. 使用用户位置显示地图
- en: Audio and Video
  id: totrans-22
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 音频和视频
- en: Another great addition to HTML5 is support for in-browser audio and video. While
    playing these types of media can be a little complicated due to the variety of
    encoding types and licenses, the `<audio>` and `<video>` elements provide the
    flexibility you need to display the types of media you have available.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: HTML5 的另一个重要新增是对浏览器内音频和视频的支持。尽管由于编码类型和许可证的多样性，播放这些媒体类型可能有些复杂，但 `<audio>` 和 `<video>`
    元素提供了你展示可用媒体类型所需的灵活性。
- en: In [Example 25-3](#playing_a_video_with_html5), the same video file has been
    encoded in different formats to ensure that all major browsers are accounted for.
    Browsers will simply select the first type they recognize and play it, as shown
    in [Figure 25-3](#displaying_video_using_html5).
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 在 [示例 25-3](#playing_a_video_with_html5) 中，同一个视频文件已经被编码成不同格式，以确保所有主流浏览器都能播放。浏览器将简单地选择它们认识的第一个类型并播放，如
    [图 25-3](#displaying_video_using_html5) 所示。
- en: Example 25-3\. Playing a video with HTML5
  id: totrans-25
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
  zh: 示例 25-3\. 使用HTML5播放视频
- en: '[PRE2]'
  id: totrans-26
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: '![](Images/pmj6_2503.png)'
  id: totrans-27
  prefs: []
  type: TYPE_IMG
  zh: '![](Images/pmj6_2503.png)'
- en: Figure 25-3\. Displaying video using HTML5
  id: totrans-28
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 25-3\. 使用HTML5显示视频
- en: Inserting audio into a web page is just as easy, as you will discover in [Chapter 27](ch27.xhtml#html5_audio_and_video).
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 将音频插入到网页中同样简单，你将在 [第27章](ch27.xhtml#html5_audio_and_video) 中了解到。
- en: Forms
  id: totrans-30
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 表单
- en: As you already saw in [Chapter 12](ch12.xhtml#form_handling), HTML5 forms are
    in the process of being enhanced, but support across all browsers remains patchy.
    What you *can* safely use today has been detailed in [Chapter 12](ch12.xhtml#form_handling).
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 正如你在 [第12章](ch12.xhtml#form_handling) 中已经看到的，HTML5表单正在被增强，但跨所有浏览器的支持仍然不完整。今天可以安全使用的部分已经在
    [第12章](ch12.xhtml#form_handling) 中详细说明了。
- en: Local Storage
  id: totrans-32
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 本地存储
- en: With local storage, the amount and complexity of data you can save on a local
    device is substantially increased from the meager space provided by cookies. This
    opens up the possibility of using web apps to work on documents offline and then
    syncing them with the web server only when an internet connection is available.
    It also raises the prospect of storing small databases locally for access with
    WebSQL, perhaps for keeping a copy of your music collection’s details or all your
    personal statistics as part of a diet or weight-loss plan, for example. In [Chapter 28](ch28.xhtml#other_html5_features),
    I show you how to make the most of this new facility in your web projects.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 使用本地存储，你可以在本地设备上保存的数据量和复杂性大大增加，远远超过 cookies 提供的微小空间。这打开了离线使用 Web 应用处理文档并在联网时与
    Web 服务器同步的可能性。它还提升了本地存储小型数据库的前景，比如使用 WebSQL 保存音乐集合的细节或作为饮食或减肥计划的一部分保存所有个人统计数据。在[第28章](ch28.xhtml#other_html5_features)中，我向你展示如何在你的
    Web 项目中充分利用这一新功能。
- en: Web Workers
  id: totrans-34
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Web Workers
- en: It has been possible to run interrupt-driven applications in the background
    using JavaScript for many years, but only through a clumsy and inefficient process.
    It makes much more sense to let the underlying browser technology run background
    tasks on your behalf, which it can do far more quickly than you can by continuously
    interrupting the browser to check how things are going.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 多年来，使用 JavaScript 在后台运行中断驱动应用程序是可能的，但只能通过笨拙且效率低下的过程。更明智的做法是让底层浏览器技术代表你运行后台任务，它可以比你连续中断浏览器检查进展做得更快。
- en: Instead, with *web workers*, you set everything up and pass your code to the
    web browser, which then runs it. When anything significant occurs, your code simply
    has to notify the browser, which then reports back to your main code. In the meantime,
    your web page can be doing nothing or a number of other tasks and can forget about
    the background task until it makes itself known.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 相反，通过*Web Workers*，你设置好一切并将代码传递给网页浏览器，然后由浏览器运行。当发生重要事件时，你的代码只需通知浏览器，然后浏览器回报给主代码。与此同时，你的网页可以什么也不做或者进行多个其他任务，直到后台任务需要它时才知晓。
- en: In [Chapter 28](ch28.xhtml#other_html5_features), I demonstrate how you can
    use web workers to create a simple clock and to calculate prime numbers.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 在[第28章](ch28.xhtml#other_html5_features)中，我展示了如何使用 Web Workers 创建一个简单的时钟并计算质数。
- en: Questions
  id: totrans-38
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 问题
- en: What HTML5 element enables drawing of graphics in web pages?
  id: totrans-39
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 哪个 HTML5 元素允许在网页中绘制图形？
- en: What programming language is required to access many of the advanced HTML5 features?
  id: totrans-40
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 访问许多高级 HTML5 功能需要哪种编程语言？
- en: Which HTML5 tags would you use to incorporate audio and video in a web page?
  id: totrans-41
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在网页中添加音频和视频，你会使用哪些 HTML5 标签？
- en: What feature in HTML5 offers greater capability than cookies?
  id: totrans-42
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: HTML5 中哪个特性比 cookies 提供更强大的功能？
- en: Which HTML5 technology supports running background JavaScript tasks?
  id: totrans-43
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 哪项 HTML5 技术支持运行后台 JavaScript 任务？
- en: See [“Chapter 25 Answers”](app01_split_024.xhtml#chapter_25_answers) in the
    [Appendix A](app01_split_000.xhtml#solutions_to_the_chapter_questions) for the
    answers to these questions.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 查看[“第25章答案”](app01_split_024.xhtml#chapter_25_answers)，在[附录 A](app01_split_000.xhtml#solutions_to_the_chapter_questions)中有这些问题的答案。
