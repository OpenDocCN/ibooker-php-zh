- en: Chapter 1\. Introduction to Dynamic Web Content
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第一章。动态网页内容介绍
- en: The World Wide Web is a constantly evolving network that has already traveled
    far beyond its conception in the early 1990s, when it was created to solve a specific
    problem. State-of-the-art experiments at CERN (the European Laboratory for Particle
    Physics, now best known as the operator of the Large Hadron Collider) were producing
    incredible amounts of data—so much that the data was proving unwieldy to distribute
    to the participating scientists, who were spread out across the world.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 万维网是一个不断发展的网络，早在1990年代初期就已经远远超出了其创立时解决特定问题的概念。在欧洲核子研究中心（现已成为大型强子对撞机的运营者）进行的最先进实验产生了大量数据，这些数据分布在全世界各地的参与科学家之间变得异常棘手。
- en: At this time, the internet was already in place, connecting several hundred
    thousand computers, so Tim Berners-Lee (a CERN fellow) devised a method of navigating
    between them using a hyperlinking framework, which came to be known as Hypertext
    Transfer Protocol, or HTTP. He also created a markup language called Hypertext
    Markup Language, or HTML. To bring these together, he wrote the first web browser
    and web server.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 那个时候，互联网已经建立起来，连接了数十万台计算机，因此蒂姆·伯纳斯-李（一位欧洲核子研究中心的研究员）设计了一种使用超链接框架进行导航的方法，后来被称为超文本传输协议，或者HTTP。他还创建了一种叫做超文本标记语言，或者HTML的标记语言。为了将它们结合起来，他写了第一个网页浏览器和网页服务器。
- en: Today we take these tools for granted, but back then, the concept was revolutionary.
    The most connectivity so far experienced by at-home modem users was dialing up
    and connecting to a bulletin board where you could communicate and swap data only
    with other users of that service. Consequently, you needed to be a member of many
    bulletin board systems in order to effectively communicate electronically with
    your colleagues and friends.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 如今，我们认为这些工具理所当然，但在当时，这个概念是革命性的。迄今为止，家用调制解调器用户所体验到的最大连接性是拨号连接到一个公告板，你只能与该服务的其他用户交流和交换数据。因此，你需要成为许多公告板系统的成员，才能有效地通过电子方式与你的同事和朋友进行沟通。
- en: But Berners-Lee changed all that in one fell swoop, and by the mid-1990s, there
    were three major graphical web browsers competing for the attention of five million
    users. It soon became obvious, though, that something was missing. Yes, pages
    of text and graphics with hyperlinks to take you to other pages was a brilliant
    concept, but the results didn’t reflect the instantaneous potential of computers
    and the internet to meet the particular needs of each user with dynamically changing
    content. Using the web was a very dry and plain experience, even if we did now
    have scrolling text and animated GIFs!
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 但是伯纳斯-李一举改变了这一切，在1990年代中期，已经有三种主要的图形网页浏览器竞争吸引了五百万用户的注意。很快就显而易见，有些东西是缺失的。是的，文本和图片页面与超链接的概念非常出色，但其结果并未反映出计算机和互联网在满足每个用户具体需求方面的即时潜力。使用网络是一种非常枯燥和普通的体验，即使现在我们有了滚动文本和动画GIF！
- en: Shopping carts, search engines, and social networks have clearly altered how
    we use the web. In this chapter, we’ll take a brief look at the various components
    that make up the web, and the software that helps make using it a rich and dynamic
    experience.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 购物车、搜索引擎和社交网络明显改变了我们使用网络的方式。在本章中，我们将简要介绍构成网络的各种组件以及帮助使其使用成为丰富和动态体验的软件。
- en: Note
  id: totrans-6
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 注意
- en: It is necessary to start using some acronyms more or less right away. I have
    tried to clearly explain them before proceeding, but don’t worry too much about
    what they stand for or what these names mean, because the details will become
    clear as you read on.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们需要立即开始使用一些缩写词。在继续之前，我已经试图清楚地解释它们，但不要太担心它们代表什么或者这些名称的含义，因为随着你继续阅读，细节会变得清晰起来。
- en: 'HTTP and HTML: Berners-Lee’s Basics'
  id: totrans-8
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: HTTP和HTML：伯纳斯-李的基础
- en: HTTP is a communication standard governing the requests and responses that are
    sent between the browser running on the end user’s computer and the web server.
    The server’s job is to accept a request from the client and attempt to reply to
    it in a meaningful way, usually by serving up a requested web page—that’s why
    the term *server* is used. The natural counterpart to a server is a *client*,
    so that term is applied both to the web browser and the computer on which it’s
    running.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: HTTP是一种通信标准，它管理在运行在最终用户计算机上的浏览器和Web服务器之间发送的请求和响应。服务器的工作是接受来自客户端的请求并尝试以有意义的方式回复，通常是通过提供请求的Web页面
    —— 这就是为什么使用术语*服务器*。与服务器的自然对应物是*客户端*，因此该术语同时适用于Web浏览器和运行它的计算机。
- en: Between the client and the server there can be several other devices, such as
    routers, proxies, gateways, and so on. They serve different roles in ensuring
    that the requests and responses are correctly transferred between the client and
    server. Typically, they use the internet to send this information. Some of these
    in-between devices can also help speed up the internet by storing pages or information
    locally in what is called a *cache* and then serving this content up to clients
    directly from the cache rather than fetching it all the way from the source server.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 在客户端和服务器之间可能存在多个其他设备，例如路由器、代理、网关等等。它们在确保请求和响应在客户端和服务器之间正确传输方面扮演着不同的角色。通常情况下，它们使用互联网来发送这些信息。这些中间设备中的一些还可以通过在所谓的*缓存*中本地存储页面或信息，然后直接从缓存向客户端提供这些内容来帮助加速互联网。
- en: A web server can usually handle multiple simultaneous connections, and when
    not communicating with a client, it spends its time listening for an incoming
    connection. When one arrives, the server sends back a response to confirm its
    receipt.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: Web服务器通常可以处理多个同时连接，当不与客户端通信时，它会花时间监听传入连接。一旦连接到达，服务器就会发送回复以确认接收到连接。
- en: The Request/Response Procedure
  id: totrans-12
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '**请求/响应过程**'
- en: At its most basic level, the request/response process consists of a web browser
    or other client asking the web server to send it a web page and the server sending
    back the page. The browser then takes care of displaying or rendering the page
    (see [Figure 1-1](#basic_clientsolidusserver_requestsol)).
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 在其最基本的水平上，请求/响应过程包括Web浏览器或其他客户端请求Web服务器发送Web页面，服务器然后发送页面。浏览器然后负责显示或渲染页面（参见[图1-1](#basic_clientsolidusserver_requestsol)）。
- en: Figure 1-1\. The basic client/server request/response sequence
  id: totrans-14
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图1-1\. 基本的客户端/服务器请求/响应序列
- en: 'The steps in the request and response sequence are as follows:'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 请求和响应序列中的步骤如下：
- en: You enter *http://server.com* into your browser’s address bar.
  id: totrans-16
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 您在浏览器的地址栏中输入*http://server.com*。
- en: Your browser looks up the Internet Protocol (IP) address for *server.com*.
  id: totrans-17
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 您的浏览器查找*server.com*的Internet协议（IP）地址。
- en: Your browser issues a request for the home page at *server.com*.
  id: totrans-18
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 您的浏览器发出请求，请求*server.com*的主页。
- en: The request crosses the internet and arrives at the *server.com* web server.
  id: totrans-19
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 请求通过互联网传输并到达*server.com* Web服务器。
- en: The web server, having received the request, looks for the web page on its disk.
  id: totrans-20
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: Web服务器在收到请求后，在其磁盘上查找Web页面。
- en: The web server retrieves the page and returns it to the browser.
  id: totrans-21
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: Web服务器检索页面并将其返回给浏览器。
- en: Your browser displays the web page.
  id: totrans-22
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 您的浏览器显示Web页面。
- en: 'For an average web page, this process also takes place once for each object
    within the page: a graphic, an embedded video or Flash file, and even a CSS template.'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 对于平均网页，该过程还会为页面中的每个对象执行一次：图形、嵌入式视频或Flash文件，甚至CSS模板。
- en: In step 2, notice that the browser looks up the IP address of *server.com*.
    Every machine attached to the internet has an IP address—your computer included—but
    we generally access web servers by name, such as *google.com*. The browser consults
    an additional internet service called the Domain Name System (DNS) to find the
    server’s associated IP address and then uses it to communicate with the computer.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 在第2步中，请注意浏览器查找*server.com*的IP地址。连接到互联网的每台机器都有一个IP地址 —— 包括您的计算机，但我们通常通过名称访问Web服务器，例如*google.com*。浏览器还要查询一个名为域名系统（DNS）的附加互联网服务，以查找服务器关联的IP地址，然后使用它与计算机通信。
- en: For dynamic web pages, the procedure is a little more involved, because it may
    bring both PHP and MySQL into the mix. For instance, you may click a picture of
    a raincoat. Then PHP will put together a request using the standard database language,
    SQL—many of whose commands you will learn in this book—and send the request to
    the MySQL server. The MySQL server will return information about the raincoat
    you selected, and the PHP code will wrap it all up in some HTML, which the server
    will send to your browser (see [Figure 1-2](#dynamic_clientsolidusserver_requestsol)).
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 对于动态网页，过程稍微复杂一些，因为可能会同时涉及 PHP 和 MySQL。例如，您可能会点击一件雨衣的图片。然后 PHP 将使用标准的数据库语言 SQL（本书中您将学习到其许多命令）组装一个请求，并将请求发送到
    MySQL 服务器。MySQL 服务器将返回您选择的雨衣的信息，PHP 代码将其包装在一些 HTML 中，服务器将其发送到您的浏览器（见 [图 1-2](#dynamic_clientsolidusserver_requestsol)）。
- en: '![A dynamic client/server request/response sequence](Images/pmj6_0102.png)'
  id: totrans-26
  prefs: []
  type: TYPE_IMG
  zh: '![动态客户端/服务器请求/响应序列](Images/pmj6_0102.png)'
- en: Figure 1-2\. A dynamic client/server request/response sequence
  id: totrans-27
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 1-2\. 动态客户端/服务器请求/响应序列
- en: 'The steps are as follows:'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 步骤如下：
- en: You enter *http://server.com* into your browser’s address bar.
  id: totrans-29
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 您在浏览器的地址栏中输入 *http://server.com*。
- en: Your browser looks up the IP address for *server.com*.
  id: totrans-30
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 您的浏览器查找 *server.com* 的 IP 地址。
- en: Your browser issues a request to that address for the web server’s home page.
  id: totrans-31
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 您的浏览器向该地址发出请求，请求 Web 服务器的主页。
- en: The request crosses the internet and arrives at the *server.com* web server.
  id: totrans-32
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 请求穿过互联网并到达 *server.com* Web 服务器。
- en: The web server, having received the request, fetches the home page from its
    hard disk.
  id: totrans-33
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: Web 服务器在收到请求后，从硬盘中获取主页文件。
- en: With the home page now in memory, the web server notices that it is a file incorporating
    PHP scripting and passes the page to the PHP interpreter.
  id: totrans-34
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在首页已经加载到内存中，Web 服务器注意到它是一个包含 PHP 脚本的文件，并将页面传递给 PHP 解释器。
- en: The PHP interpreter executes the PHP code.
  id: totrans-35
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: PHP 解释器执行 PHP 代码。
- en: Some of the PHP contains SQL statements, which the PHP interpreter now passes
    to the MySQL database engine.
  id: totrans-36
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 一些 PHP 包含 SQL 语句，这些语句现在由 PHP 解释器传递给 MySQL 数据库引擎。
- en: The MySQL database returns the results of the statements to the PHP interpreter.
  id: totrans-37
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: MySQL 数据库将语句的结果返回给 PHP 解释器。
- en: The PHP interpreter returns the results of the executed PHP code, along with
    the results from the MySQL database, to the web server.
  id: totrans-38
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: PHP 解释器将执行的 PHP 代码的结果与来自 MySQL 数据库的结果一起返回给 Web 服务器。
- en: The web server returns the page to the requesting client, which displays it.
  id: totrans-39
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: Web 服务器将页面返回给请求的客户端，客户端显示该页面。
- en: Although it’s helpful to be aware of this process so that you know how the three
    elements work together, in practice you don’t really need to concern yourself
    with these details, because they all happen automatically.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然了解这个过程对于了解这三个元素如何协同工作是有帮助的，但实际上你不需要关心这些细节，因为它们都会自动发生。
- en: The HTML pages returned to the browser in each example may well contain JavaScript,
    which will be interpreted locally by the client, and which could initiate another
    request—the same way embedded objects such as images would.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 每个示例中返回给浏览器的 HTML 页面可能包含 JavaScript，客户端会本地解释它，可能会发起另一个请求，就像嵌入对象（如图像）一样。
- en: The Benefits of PHP, MySQL, JavaScript, CSS, and HTML5
  id: totrans-42
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: PHP、MySQL、JavaScript、CSS 和 HTML5 的好处
- en: At the start of this chapter, I introduced the world of Web 1.0, but it wasn’t
    long before the rush was on to create Web 1.1, with the development of such browser
    enhancements as Java, JavaScript, JScript (Microsoft’s slight variant of JavaScript),
    and ActiveX. On the server side, progress was being made on the Common Gateway
    Interface (CGI) using scripting languages such as Perl (an alternative to the
    PHP language) and *server-side scripting*—inserting the contents of one file (or
    the output of running a local program) into another one dynamically.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: '在本章开头，我介绍了 Web 1.0 的世界，但很快人们就开始创造 Web 1.1，随着诸如 Java、JavaScript、JScript（微软的
    JavaScript 轻微变体）和 ActiveX 等浏览器增强功能的开发。在服务器端，使用脚本语言如 Perl（PHP 语言的替代方案）和 *服务器端脚本*（动态地将一个文件的内容（或运行本地程序的输出）插入另一个文件中）正在进行进展。 '
- en: Once the dust had settled, three main technologies stood head and shoulders
    above the others. Although Perl was still a popular scripting language with a
    strong following, PHP’s simplicity and built-in links to the MySQL database program
    had earned it more than double the number of users. And JavaScript, which had
    become an essential part of the equation for dynamically manipulating Cascading
    Style Sheets (CSS) and HTML, now took on the even more muscular task of handling
    the client side of asynchronous communication (exchanging data between a client
    and server after a web page has loaded). Using asynchronous communication, web
    pages perform data handling and send requests to web servers in the background—without
    the web user being aware that this is going on.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 风云稍定后，三种主要技术脱颖而出。尽管 Perl 仍然是一种流行的脚本语言并拥有强大的追随者群体，PHP 的简单性和与 MySQL 数据库程序的内置链接使其用户数量超过了两倍。而
    JavaScript 则已成为动态操作层叠样式表（CSS）和 HTML 的必不可少的组成部分，现在更承担了处理客户端异步通信的更强大任务（在网页加载后在客户端和服务器之间交换数据）。使用异步通信，网页在后台执行数据处理并向
    web 服务器发送请求——而用户在浏览网页时并不知道这一切正在进行。
- en: No doubt the symbiotic nature of PHP and MySQL helped propel them both forward,
    but what attracted developers to them in the first place? The simple answer has
    to be the ease with which you can use them to quickly create dynamic elements
    on websites. MySQL is a fast and powerful yet easy-to-use database system that
    offers just about anything a website would need in order to find and serve up
    data to browsers. When PHP allies with MySQL to store and retrieve this data,
    you have the fundamental parts required for the beginnings of Web 2.0.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 毫无疑问，PHP 和 MySQL 的共生特性帮助它们双双前进，但最初是什么吸引开发者呢？简单答案必须是你可以使用它们快速创建网站动态元素的简便性。MySQL
    是一个快速而强大且易于使用的数据库系统，几乎提供了网站在查找和向浏览器提供数据时所需的一切。当 PHP 联合 MySQL 来存储和检索这些数据时，你拥有了构建
    Web 2.0 所需的基本部件。
- en: And when you bring JavaScript and CSS into the mix too, you have a recipe for
    building highly dynamic and interactive websites—especially as there is now a
    wide range of sophisticated frameworks of JavaScript functions you can call on
    to really speed up web development. These include the well-known jQuery, which
    until very recently was one of the most common ways programmers accessed asynchronous
    communication features and the more recent React JavaScript library, which has
    been growing quickly in popularity. It is now one of the most widely downloaded
    and implemented frameworks, so much so that since 2020 the Indeed job site lists
    more than twice as many positions for React developers than for jQuery.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 当你把 JavaScript 和 CSS 也加入进来时，你就有了构建高度动态和交互式网站的配方——尤其是现在有许多复杂的 JavaScript 框架可供调用，以加速网页开发。这些包括广为人知的
    jQuery，直到最近仍是程序员访问异步通信特性的常见方式，以及近年来快速增长的 React JavaScript 库。它现在是下载和实施最广泛的框架之一，以至于自
    2020 年以来，Indeed 网站列出的 React 开发者职位数量超过 jQuery 的两倍以上。
- en: 'MariaDB: The MySQL Clone'
  id: totrans-47
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: MariaDB：MySQL 的克隆品
- en: After Oracle purchased Sun Microsystems (the owners of MySQL), the community
    became wary that MySQL might not remain fully open source, so MariaDB was forked
    from it to keep it free under the GNU GPL. Development of MariaDB is led by some
    of the original developers of MySQL, and it retains exceedingly close compatibility
    with MySQL. Therefore, you may well encounter MariaDB on some servers in place
    of MySQL—but not to worry, everything in this book works equally well on both
    MySQL and MariaDB. For all intents and purposes, you can swap one with the other
    and notice no difference.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 在 Oracle 收购 Sun 微系统（MySQL 的所有者）之后，社区担心 MySQL 可能不会完全保持开源，因此从中分叉出了 MariaDB，以在
    GNU GPL 下保持其自由。MariaDB 的开发由 MySQL 的一些原始开发者领导，它与 MySQL 保持极其密切的兼容性。因此，在一些服务器上，你可能会遇到
    MariaDB 替代 MySQL，但不用担心，本书中的所有内容在 MySQL 和 MariaDB 上同样适用，你可以随意切换而不会有任何区别。
- en: Anyway, as it turns out, many of the initial fears appear to have been allayed
    as MySQL remains open source, with Oracle simply charging for support and for
    editions that provide additional features such as geo-replication and automatic
    scaling. However, unlike MariaDB, MySQL is no longer community driven, so knowing
    that MariaDB will always be there if ever needed will keep many developers sleeping
    at night and probably ensures that MySQL itself will remain open source.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 无论如何，事实证明，许多最初的担忧似乎已经消除，因为MySQL仍然是开源的，Oracle只是为支持和提供附加功能（如地理复制和自动扩展）的版本收费。然而，与MariaDB不同，MySQL不再由社区驱动，因此知道如果需要时MariaDB始终可用将让许多开发者安心，可能也确保了MySQL本身将继续保持开源。
- en: Using PHP
  id: totrans-50
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用PHP
- en: 'With PHP, it’s a simple matter to embed dynamic activity in web pages. When
    you give pages the *.php* extension, they have instant access to the scripting
    language. From a developer’s point of view, all you have to do is write code such
    as the following:'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 使用PHP，将动态活动嵌入网页非常简单。给页面添加*.php*扩展名后，即可立即使用脚本语言。从开发者的角度来看，你只需编写如下的代码：
- en: '[PRE0]'
  id: totrans-52
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: The opening `<?php` tells the web server to allow the PHP program to interpret
    all the following code up to the `?>` tag. Outside of this construct, everything
    is sent to the client as direct HTML. So, the text `Here's the latest news.` is
    simply output to the browser; within the PHP tags, the built-in `date` function
    displays the current day of the week according to the server’s system time.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 开头的`<?php`告诉Web服务器允许PHP程序解释直到`?>`标签之间的所有代码。在这个结构之外，所有内容都将直接发送给客户端作为HTML。因此，文本`Here's
    the latest news.`将简单地输出到浏览器；在PHP标记内，内置的`date`函数根据服务器系统时间显示当前星期几。
- en: 'The final output of the two parts looks like this:'
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 两部分的最终输出如下：
- en: '[PRE1]'
  id: totrans-55
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'PHP is a flexible language, and some people prefer to place the PHP construct
    directly next to PHP code, like this:'
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: PHP是一种灵活的语言，有些人更喜欢将PHP结构直接放在PHP代码旁边，如下所示：
- en: '[PRE2]'
  id: totrans-57
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: There are even more ways of formatting and outputting information, which I’ll
    explain in the chapters on PHP. The point is that with PHP, web developers have
    a scripting language that, although not as fast as compiling your code in C or
    a similar language, is incredibly speedy and also integrates seamlessly with HTML
    markup.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 还有更多格式化和输出信息的方式，我将在有关PHP的章节中进行解释。关键是，使用PHP，Web开发人员拥有一种脚本语言，虽然不像在C或类似语言中编译代码那样快速，但速度非常快，并且与HTML标记完美集成。
- en: Note
  id: totrans-59
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 注意
- en: If you intend to enter the PHP examples in this book into a program editor to
    work along with me, you must remember to add `<?php` in front and `?>` after them
    to ensure that the PHP interpreter processes them. To facilitate this, you may
    wish to prepare a file called *example.php* with those tags in place.
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你打算将本书中的PHP示例输入到程序编辑器中与我一起工作，你必须记住在它们前面加上`<?php`，并在后面加上`?>`，以确保PHP解释器可以处理它们。为了方便起见，你可能希望准备一个名为*example.php*的文件，并在适当位置添加这些标记。
- en: Using PHP, you have unlimited control over your web server. Whether you need
    to modify HTML on the fly, process a credit card, add user details to a database,
    or fetch information from a third-party website, you can do it all from within
    the same PHP files in which the HTML itself resides.
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 使用PHP，你可以对你的Web服务器进行无限制的控制。无论你需要在页面中动态修改HTML、处理信用卡、将用户详细信息添加到数据库，还是从第三方网站获取信息，你都可以在同一个PHP文件中完成。
- en: Using MySQL
  id: totrans-62
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用MySQL
- en: Of course, there’s not a lot of point to being able to change HTML output dynamically
    unless you also have a means to track the information users provide to your website
    as they use it. In the early days of the web, many sites used “flat” text files
    to store data such as usernames and passwords. But this approach could cause problems
    if the file wasn’t correctly locked against corruption from multiple simultaneous
    accesses. Also, a flat file can get only so big before it becomes unwieldy to
    manage—not to mention the difficulty of trying to merge files and perform complex
    searches in any kind of reasonable time.
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 当然，能够动态更改HTML输出的能力没有太大意义，除非你还有一种方法跟踪用户在使用网站时提供的信息。在互联网早期，许多网站使用“平面”文本文件存储用户名和密码等数据。但是，如果文件没有正确锁定以防止多个同时访问导致的损坏，这种方法可能会导致问题。此外，平面文件在变得过大之前就变得难以管理，更不用说尝试合并文件和在合理时间内执行复杂搜索的困难了。
- en: That’s where relational databases with structured querying become essential.
    And MySQL, being free to use and installed on vast numbers of internet web servers,
    rises superbly to the occasion. It is a robust and exceptionally fast database
    management system that uses English-like commands.
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 这就是关系型数据库与结构化查询变得至关重要的地方。而MySQL作为免费使用并安装在大量互联网服务器上的数据库管理系统，则非常出色地胜任了这一角色。它是一个强大且异常快速的数据库管理系统，使用类似英语的命令。
- en: 'The highest level of MySQL structure is a database, within which you can have
    one or more tables that contain your data. For example, let’s suppose you are
    working on a table called *users*, within which you have created columns for *surname*,
    *firstname*, and *email*, and you now wish to add another user. One command that
    you might use to do this is as follows:'
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: MySQL结构的最高级别是数据库，您可以在其中拥有一个或多个包含您数据的表。例如，假设您正在处理一个名为*users*的表，在其中创建了*surname*、*firstname*和*email*列，现在希望添加另一个用户。您可能使用的一条命令如下：
- en: '[PRE3]'
  id: totrans-66
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: You will previously have issued other commands to create the database and table
    and to set up all the correct fields, but the SQL `INSERT` command here shows
    how simple it can be to add new data to a database. SQL is a language designed
    in the early 1970s that is reminiscent of one of the oldest programming languages,
    COBOL. It is well suited, however, to database queries, which is why it is still
    in use after all this time.
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 之前您已经发出了其他命令来创建数据库和表，并设置了所有正确的字段，但此处的SQL `INSERT`命令显示了向数据库添加新数据可以多么简单。SQL是上世纪70年代设计的一种语言，它让人联想起最古老的编程语言之一，COBOL。然而，它非常适合数据库查询，这就是为什么在这么长时间后它仍然在使用中的原因。
- en: 'It’s equally easy to look up data. Let’s assume that you have an email address
    for a user and need to look up that person’s name. To do this, you could issue
    a MySQL query such as the following:'
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 查找数据同样简单。假设您有一个用户的电子邮件地址并需要查找该人的姓名。为此，您可以发出如下所示的MySQL查询：
- en: '[PRE4]'
  id: totrans-69
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: MySQL will then return `Smith, John` and any other pairs of names that may be
    associated with that email address in the database.
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: MySQL然后将返回`Smith, John`及数据库中与该电子邮件地址可能关联的任何其他姓名对。
- en: As you’d expect, there’s quite a bit more that you can do with MySQL than just
    simple `INSERT` and `SELECT` commands. For example, you can combine related data
    sets to bring related pieces of information together, ask for results in a variety
    of orders, make partial matches when you know only part of the string that you
    are searching for, return only the *n*th result, and a lot more.
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 正如您所期望的那样，您可以在MySQL中做的远不止简单的`INSERT`和`SELECT`命令。例如，您可以组合相关数据集以将相关信息片段汇集在一起，请求以各种顺序返回结果，在您仅知道要搜索的字符串的一部分时进行部分匹配，仅返回第*n*个结果等等。
- en: Using PHP, you can make all these calls directly to MySQL without having to
    directly access the MySQL command-line interface yourself. This means you can
    save the results in arrays for processing and perform multiple lookups, each dependent
    on the results returned from earlier ones, to drill down to the item of data you
    need.
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 使用PHP，您可以直接调用MySQL而无需自己直接访问MySQL命令行界面。这意味着您可以将结果保存在数组中进行处理，并执行多次查找，每次查找都依赖于从前面的查找返回的结果，以便深入到您需要的数据项。
- en: For even more power, as you’ll see later, there are additional functions built
    right into MySQL that you can call up to efficiently run common operations within
    MySQL, rather than creating them out of multiple PHP calls to MySQL.
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 更有力的是，正如稍后将看到的，MySQL内置了额外的功能，可以高效地运行MySQL内部的常见操作，而不是通过多个PHP调用MySQL创建它们。
- en: Using JavaScript
  id: totrans-74
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用JavaScript
- en: JavaScript was created to enable scripting access to all the elements of an
    HTML document. In other words, it provides a means for dynamic user interaction
    such as checking email address validity in input forms and displaying prompts
    such as “Did you really mean that?” (although it cannot be relied upon for security,
    which should always be performed on the web server).
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: JavaScript的创建是为了使脚本能够访问HTML文档的所有元素。换句话说，它提供了一种动态用户交互的手段，例如在输入表单中检查电子邮件地址的有效性，并显示诸如“您是认真的吗？”之类的提示（尽管不能依赖其用于安全性，这应始终在Web服务器上执行）。
- en: Combined with CSS (see the following section), JavaScript is the power behind
    dynamic web pages that change in front of your eyes rather than when a new page
    is returned by the server.
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 结合CSS（请参阅下一节），JavaScript是动态网页背后的动力，使页面能够在您眼前变化，而不是在服务器返回新页面时变化。
- en: However, JavaScript used to be tricky to use, due to some major differences
    in the ways different browser designers have chosen to implement it. This mainly
    came about when some manufacturers tried to put additional functionality into
    their browsers at the expense of compatibility with their rivals.
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，JavaScript 以前使用起来很棘手，因为不同浏览器设计者选择实现方式存在显著差异。这主要是在一些制造商试图在其浏览器中添加额外功能，却牺牲了与竞争对手的兼容性时出现的问题。
- en: Thankfully, the developers have mostly come to their senses and have realized
    the need for full compatibility with one another, so it is less necessary these
    days to have to optimize your code for different browsers. However, there remain
    millions of users using legacy browsers, and this will likely be the case for
    a good many years to come. Luckily, there are solutions for the incompatibility
    problems, and later in this book we’ll look at libraries and techniques that enable
    you to safely ignore these differences.
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 幸运的是，开发者们大多已经理智过来，意识到彼此兼容的必要性，因此在如今不太需要为不同浏览器优化代码。然而，仍然有数百万用户在使用传统浏览器，而且这种情况可能在未来很多年内仍会存在。幸运的是，有解决不兼容性问题的解决方案，本书后面我们会看到一些库和技术，使您能够安全地忽略这些差异。
- en: 'For now, let’s take a look at how to use basic JavaScript, accepted by all
    browsers:'
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们看看如何使用基本的 JavaScript，所有浏览器都支持：
- en: '[PRE5]'
  id: totrans-80
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'This code snippet tells the web browser to interpret everything within the
    `<script>` tags as JavaScript, which the browser does by writing the text `Today
    is` to the current document, along with the date, using the JavaScript function
    `Date`. The result will look something like this:'
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 此代码片段告诉 Web 浏览器解析 `<script>` 标签中的所有内容为 JavaScript，浏览器通过使用 JavaScript 函数 `Date`
    将文本 `Today is` 与当前日期一起写入当前文档。结果将看起来像这样：
- en: '[PRE6]'
  id: totrans-82
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: Note
  id: totrans-83
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 注意
- en: Unless you need to specify an exact version of JavaScript, you can normally
    omit the `type="text/javascript"` and just use `<script>` to start the interpretation
    of the JavaScript.
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 除非您需要指定确切的 JavaScript 版本，通常可以省略 `type="text/javascript"`，直接使用 `<script>` 开始
    JavaScript 的解析。
- en: As previously mentioned, JavaScript was originally developed to offer dynamic
    control over the various elements within an HTML document, and that is still its
    main use. But more and more, JavaScript is being used for *Ajax*, the process
    of accessing the web server in the background.
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 如前所述，JavaScript 最初是为了在 HTML 文档中动态控制各种元素而开发的，这仍然是它的主要用途。但是越来越多地，JavaScript 被用于*Ajax*，即在后台访问
    Web 服务器的过程。
- en: Asynchronous communication is what allows web pages to begin to resemble standalone
    programs, because they don’t have to be reloaded in their entirety to display
    new content. Instead, an asynchronous call can pull in and update a single element
    on a web page, such as changing your photograph on a social networking site or
    replacing a button that you click with the answer to a question. This subject
    is fully covered in [Chapter 18](ch18.xhtml#using_ajax).
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 异步通信使得网页开始类似独立程序，因为它们不需要完全重新加载以显示新内容。相反，异步调用可以拉取和更新网页上的单个元素，例如在社交网络网站上更改您的照片或替换您点击的按钮与问题答案。这个主题在[第18章](ch18.xhtml#using_ajax)中有详尽的介绍。
- en: Then, in [#introduction_to_jquery](ch22.xhtml#introduction_to_jquery), we take
    a good look at the jQuery framework, which you can use to save reinventing the
    wheel when you need fast, cross-browser code to manipulate your web pages. Of
    course, there are other frameworks available too, so we also take a look at React,
    one of the most popular choices of today, in [Chapter 24](ch24.xhtml#introduction_to_react).
    Both are extremely reliable and are major tools in the utility kits of many seasoned
    web developers.
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，在[第22章](ch22.xhtml#introduction_to_jquery)中，我们仔细研究了 jQuery 框架，您可以在需要快速、跨浏览器的代码来操作网页时使用它，以免重复发明轮子。当然，还有其他可用的框架，因此我们还会看一下
    React，在[第24章](ch24.xhtml#introduction_to_react)中是当今最受欢迎的选择之一。它们都非常可靠，是许多经验丰富的网页开发者工具包中的主要工具。
- en: Using CSS
  id: totrans-88
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用 CSS
- en: CSS is the crucial companion to HTML, ensuring that the HTML text and embedded
    images are laid out consistently and in a manner appropriate for the user’s screen.
    With the emergence of the CSS3 standard in recent years, CSS now offers a level
    of dynamic interactivity previously supported only by JavaScript. For example,
    not only can you style any HTML element to change its dimensions, colors, borders,
    spacing, and so on, but now you can also add animated transitions and transformations
    to your web pages, using only a few lines of CSS.
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: CSS是HTML的重要伴侣，确保HTML文本和嵌入的图像在用户屏幕上一致且合适地排列。随着近年来CSS3标准的出现，CSS现在提供了以前仅由JavaScript支持的动态交互水平。例如，不仅可以为任何HTML元素设置样式以更改其尺寸、颜色、边框、间距等，而且现在还可以仅使用几行CSS为网页添加动画过渡和转换效果。
- en: 'Using CSS can be as simple as inserting a few rules between `<style>` and `</style>`
    tags in the head of a web page, like this:'
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 使用CSS可能就像在网页头部的`<style>`和`</style>`标签之间插入几条规则一样简单，就像这样：
- en: '[PRE7]'
  id: totrans-91
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: These rules change the default text alignment of the `<p>` tag so that paragraphs
    contained in it are fully justified and use the Helvetica font.
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 这些规则改变了`<p>`标签的默认文本对齐方式，使其中包含的段落完全对齐并使用Helvetica字体。
- en: As you’ll learn in [Chapter 19](ch19.xhtml#introduction_to_css), there are many
    different ways you can lay out CSS rules, and you can also include them directly
    within tags or save a set of rules to an external file to be loaded in separately.
    This flexibility not only lets you style your HTML precisely but can also (for
    example) provide built-in hover functionality to animate objects as the mouse
    passes over them. You will also learn how to access all of an element’s CSS properties
    from JavaScript as well as HTML.
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 正如你将在[第19章](ch19.xhtml#introduction_to_css)中了解的那样，有许多不同的方式可以布置CSS规则，你还可以直接将它们包含在标签内部或保存为一个外部文件单独加载。这种灵活性不仅可以让你精确地为你的HTML设置样式，还可以（例如）提供内置的悬停功能来在鼠标悬停时为对象添加动画效果。你还将学习如何从JavaScript以及HTML中访问元素的所有CSS属性。
- en: And Then There’s HTML5
  id: totrans-94
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 还有HTML5
- en: As useful as all these additions to the web standards became, they were not
    enough for ever-more ambitious developers. For example, there was still no simple
    way to manipulate graphics in a web browser without resorting to plug-ins such
    as Flash. And the same went for inserting audio and video into web pages. Plus,
    several annoying inconsistencies had crept into HTML during its evolution.
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管所有这些对Web标准的增加都非常有用，但对于越来越雄心勃勃的开发者来说还不够。例如，在没有像Flash这样的插件的情况下，仍然没有简单的方法在Web浏览器中操作图形。同样，插入音频和视频到网页中也是如此。而且，在HTML的发展过程中还出现了一些令人讨厌的不一致性。
- en: 'So, to clear all this up and take the internet beyond Web 2.0 and into its
    next iteration, a new standard for HTML was created to address all these shortcomings:
    *HTML5*. Its development began as long ago as 2004, when the first draft was drawn
    up by the Mozilla Foundation and Opera Software (developers of two popular web
    browsers), but it wasn’t until the start of 2013 that the final draft was submitted
    to the World Wide Web Consortium (W3C), the international governing body for web
    standards.'
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，为了澄清所有这些并将互联网推向Web 2.0之外，进入其下一个迭代，创建了一个新的HTML标准来解决所有这些缺陷：*HTML5*。其开发始于2004年，当时Mozilla基金会和Opera
    Software（两个流行的Web浏览器开发者）起草了第一个草案，但直到2013年初，最终草案才被提交给了万维网联盟（W3C），这是国际上的Web标准管理机构。
- en: It has taken a few years for HTML5 to develop, but now we are at a very solid
    and stable version 5.1 (since 2016). It’s a never-ending cycle of development,
    though, and more functionality is sure to be built into it over time, with version
    5.2 (planned to make the plug-in system obsolete) released as a W3C recommendation
    in 2017, HTML 5.3  (with proposed features such as auto-capitalization) still
    in planning as of 2020, and so on. Some of the best features in HTML5 for handling
    and displaying media include the `<audio>`, `<video>`, and `<canvas>` elements,
    which add sound, video, and advanced graphics. Everything you need to know about
    these and all other aspects of HTML5 is covered in detail starting in [Chapter 25](ch25.xhtml#introduction_to_html5).
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: HTML5发展了几年，但现在我们有了一个非常稳定和稳健的版本5.1（自2016年以来）。然而，这是一个永无止境的发展循环，随着时间的推移，肯定会向其中添加更多功能，例如计划在2017年作为W3C推荐发布的5.2版（计划使插件系统过时），以及截至2020年仍在计划中的HTML
    5.3（具有自动大写功能等提议功能）。HTML5中用于处理和显示媒体的一些最佳功能包括`<audio>`、`<video>`和`<canvas>`元素，它们添加了声音、视频和高级图形。关于HTML5的所有这些以及其他方面的详细信息都在[第25章](ch25.xhtml#introduction_to_html5)中详细介绍。
- en: Note
  id: totrans-98
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 注意
- en: One of the little things I like about the HTML5 specification is that XHTML
    syntax is no longer required for self-closing elements. In the past, you could
    display a line break using the `<br>` element. Then, to ensure future compatibility
    with XHTML (the planned replacement for HTML that never happened), this was changed
    to `<br />`, in which a closing `/` character was added (since all elements were
    expected to include a closing tag featuring this character). But now things have
    gone full circle, and you can use either version of these types of elements. So,
    for the sake of brevity and fewer keystrokes, in this book I have reverted to
    the former style of `<br>`, `<hr>`, and so on.
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 我喜欢HTML5规范的一点是不再需要XHTML语法来自动关闭元素。过去，你可以使用`<br>`元素显示一个换行。然后，为了确保与XHTML（计划中用于替换HTML但从未实现的）的未来兼容性，这被改为`<br
    />`，其中添加了一个关闭`/`字符（因为预期所有元素都应包含带有此字符的关闭标记）。但现在情况已经完全变了，你可以使用这些类型元素的任一版本。因此，出于简洁和减少击键次数的考虑，在这本书中，我已经恢复r>`
    等样式。
- en: The Apache Web Server
  id: totrans-100
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Apache网络服务器
- en: 'In addition to PHP, MySQL, JavaScript, CSS, and HTML5, there’s a sixth hero
    in the dynamic web: the web server. In the case of this book, that means the Apache
    web server. We’ve discussed a little of what a web server does during the HTTP
    server/client exchange, but it does much more behind the scenes.'
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 除了PHP、MySQL、JavaScript、CSS和HTML5，动态网站还有第六位英雄：网络服务器。在这本书中，这意味着Apache网络服务器。我们已经讨论过网络服务器在HTTP服务器/客户端交换过程中做了一些什么，但它在幕后做了更多的事情。
- en: 'For example, Apache doesn’t serve up just HTML files—it handles a wide range
    of files, from images and Flash files to MP3 audio files, RSS (Really Simple Syndication)
    feeds, and so on. And these objects don’t have to be static files such as GIF
    images. They can all be generated by programs such as PHP scripts. That’s right:
    PHP can even create images and other files for you, either on the fly or in advance
    to serve up later.'
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，Apache不仅提供HTML文件，它还处理各种文件，从图像和Flash文件到MP3音频文件，RSS（真正简单联合）源等等。这些对象不必是静态文件，比如GIF图像。它们都可以由诸如PHP脚本之类的程序生成。没错：PHP甚至可以为您创建图像和其他文件，无论是即时生成还是提前生成以供以后使用。
- en: To do this, you normally have modules either precompiled into Apache or PHP
    or called up at runtime. One such module is the GD (Graphics Draw) library, which
    PHP uses to create and handle graphics.
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 要做到这一点，通常你要么在Apache或PHP中预编译模块，要么在运行时调用模块。其中一个这样的模块是GD（图形绘制）库，PHP用它来创建和处理图形。
- en: Apache also supports a huge range of modules of its own. In addition to the
    PHP module, the most important for your purposes as a web programmer are the modules
    that handle security. Other examples are the Rewrite module, which enables the
    web server to handle a range of URL types and rewrite them to its own internal
    requirements, and the Proxy module, which you can use to serve up often-requested
    pages from a cache to ease the load on the server.
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: Apache也支持各种各样的自己的模块。除了PHP模块外，作为网络程序员最重要的模块是处理安全性的模块。其他例子包括Rewrite模块，它使网络服务器能够处理各种URL类型并将它们重写为自己的内部要求，以及Proxy模块，你可以用它来从缓存中提供经常请求的页面，以减轻服务器的负载。
- en: Later in the book, you’ll see how to use some of these modules to enhance the
    features provided by the three core technologies.
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 本书的后面，你将看到如何使用这些模块来增强三个核心技术提供的功能。
- en: Handling Mobile Devices
  id: totrans-106
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 处理移动设备
- en: We are now firmly in a world of interconnected mobile computing devices, and
    the concept of developing websites solely for desktop computers has become rather
    dated. Instead, developers now aim to develop responsive websites and web apps
    that tailor themselves to the environment in which they find themselves running.
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 我们现在完全进入了互联的移动计算设备世界，仅为桌面计算机开发网站的概念已经相当过时。相反，开发人员现在旨在开发响应式网站和Web应用程序，以适应它们运行的环境。
- en: So, new in this edition, I show how you can easily create these types of products
    using just the technologies detailed in this book, along with the powerful jQuery
    Mobile library of responsive JavaScript functions. With it, you’ll be able to
    focus on the content and usability of your websites and web apps, knowing that
    how they display will be automatically optimized for a range of different computing
    devices—one less thing for you to worry about.
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，在本版本中新加入的内容是，我展示了如何仅使用本书详细介绍的技术以及强大的jQuery Mobile库，轻松创建这些类型的产品。借助它，你将能够专注于网站和Web应用程序的内容和可用性，知道它们的显示方式将自动优化以适应各种不同的计算设备——这样你就少了一件需要担心的事情。
- en: To demonstrate how to make full use of its power, the final chapter of this
    book creates a simple social networking example website, using jQuery to make
    it fully responsive and ensure it displays well on anything from a small mobile
    phone screen to a tablet or a desktop computer. We could equally have used React
    (or other JavaScript libraries or frameworks), but perhaps that’s an exercise
    you’ll like to set yourself once you’ve completed this book.
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 为了展示如何充分利用它的力量，本书的最后一章创建了一个简单的社交网络示例网站，使用jQuery使其完全响应，并确保它在从小型手机屏幕到平板电脑或台式电脑的任何设备上显示良好。我们同样可以使用React（或其他JavaScript库或框架），但也许这是你在完成本书后想要自己尝试的一个练习。
- en: About Open Source
  id: totrans-110
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 关于开源
- en: 'The technologies in this book are open source: anyone is allowed to read and
    change the code. Whether or not this status is the reason these technologies are
    so popular has often been debated, but PHP, MySQL, and Apache *are* the three
    most commonly used tools in their categories. What can be said definitively, though,
    is that their being open source means that they have been developed in the community
    by teams of programmers writing the features they themselves want and need, with
    the original code available for all to see and change. Bugs can be found quickly,
    and security breaches can be prevented before they happen.'
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 这本书中涉及的技术都是开源的：任何人都可以阅读和修改代码。关于这些技术之所以如此流行的原因，常常被争论，但PHP、MySQL和Apache *确实* 是它们类别中使用最广泛的三种工具。可以肯定的是，它们的开源性意味着它们是由社区中的团队开发的，这些团队编写了他们自己想要和需要的功能，原始代码对所有人都是开放的，可以随时查看和修改。可以迅速发现错误，并在它们发生之前预防安全漏洞。
- en: 'There’s another benefit: all of these programs are free to use. There’s no
    worrying about having to purchase additional licenses if you have to scale up
    your website and add more servers, and you don’t need to check the budget before
    deciding whether to upgrade to the latest versions of these products.'
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 还有另一个好处：所有这些程序都可以免费使用。不用担心如果要扩展你的网站并增加更多服务器就必须购买额外的许可证，也无需在决定是否升级到这些产品的最新版本之前检查预算。
- en: Bringing It All Together
  id: totrans-113
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 将所有内容整合在一起
- en: 'The real beauty of PHP, MySQL, JavaScript (sometimes aided by React or other
    frameworks), CSS, and HTML5 is the wonderful way in which they all work together
    to produce dynamic web content: PHP handles all the main work on the web server,
    MySQL manages all the data, and the combination of CSS and JavaScript looks after
    web page presentation. JavaScript can also talk with your PHP code on the web
    server whenever it needs to update something (either on the server or on the web
    page). And with the powerful features in HTML5, such as the canvas, audio and
    video, and geolocation, you can make your web pages highly dynamic, interactive,
    and multimedia-packed.'
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: PHP、MySQL、JavaScript（有时候辅助React或其他框架）、CSS和HTML5的真正美妙之处在于它们如何协同工作来生成动态的Web内容：PHP在Web服务器上处理所有主要工作，MySQL管理所有数据，而CSS和JavaScript的组合则负责网页的呈现。JavaScript还可以在需要更新某些内容（无论是在服务器上还是在网页上）时与你的PHP代码进行通信。借助HTML5中强大的功能，如画布、音频和视频以及地理位置，你可以使你的网页高度动态、互动且多媒体丰富。
- en: 'Without using program code, let’s summarize the contents of this chapter by
    looking at the process of combining some of these technologies into an everyday
    asynchronous communication feature that many websites use: checking whether a
    desired username already exists on the site when a user is signing up for a new
    account. A good example of this can be seen with Gmail (see [Figure 1-3](#gmail-signup)).'
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 在不使用程序代码的情况下，让我们通过查看将一些技术组合到每日异步通信功能中的过程来总结本章的内容，这是许多网站在用户注册新帐户时使用的功能的示例：检查所需的用户名是否已存在于站点上。这在
    Gmail 中有一个很好的例子（见[图 1-3](#gmail-signup)）。
- en: '![](Images/pmj6_0103.png)'
  id: totrans-116
  prefs: []
  type: TYPE_IMG
  zh: '![](Images/pmj6_0103.png)'
- en: Figure 1-3\. Gmail uses asynchronous communication to check the availability
    of usernames
  id: totrans-117
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 1-3\. Gmail 使用异步通信来检查用户名的可用性
- en: 'The steps involved in this asynchronous process will be similar to the following:'
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 这个异步过程涉及的步骤将类似于以下内容：
- en: The server outputs the HTML to create the web form, which asks for the necessary
    details, such as username, first name, last name, and email address.
  id: totrans-119
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 服务器输出 HTML 创建网页表单，要求输入必要的详细信息，如用户名、名字、姓氏和电子邮件地址。
- en: 'At the same time, the server attaches some JavaScript to the HTML to monitor
    the username input box and check for two things: whether some text has been typed
    into it, and whether the input has been deselected because the user has clicked
    another input box.'
  id: totrans-120
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 同时，服务器将一些 JavaScript 附加到 HTML 上，以监视用户名输入框并检查两件事情：是否已输入了一些文本，以及是否取消了输入选择，因为用户已点击了另一个输入框。
- en: Once the text has been entered and the field deselected, in the background the
    JavaScript code passes the username that was entered back to a PHP script on the
    web server and awaits a response.
  id: totrans-121
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 一旦文本被输入并取消选定该字段，JavaScript 代码会将输入的用户名传回到 Web 服务器上的 PHP 脚本，并等待响应。
- en: The web server looks up the username and replies back to the JavaScript regarding
    whether that name has already been taken.
  id: totrans-122
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: Web 服务器查找用户名并回复 JavaScript，告知该名称是否已被占用。
- en: The JavaScript then places an indication next to the username input box to show
    whether the name is available to the user—perhaps a green checkmark or a red cross
    graphic, along with some text.
  id: totrans-123
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 然后，JavaScript 在用户名输入框旁边放置一个指示，显示用户名对用户是否可用的状态——可能是一个绿色的勾或一个红色的叉，以及一些文本。
- en: If the username is not available and the user still submits the form, the JavaScript
    interrupts the submission and reemphasizes (perhaps with a larger graphic and/or
    an alert box) that the user needs to choose another username.
  id: totrans-124
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果用户名不可用，并且用户仍然提交表单，JavaScript 将中断提交并重新强调（可能通过更大的图形和/或警报框）用户需要选择另一个用户名。
- en: Optionally, an improved version of this process could even look at the username
    requested by the user and suggest an alternative that is currently available.
  id: totrans-125
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 可选地，这个过程的改进版本甚至可以查看用户请求的用户名，并建议当前可用的替代用户名。
- en: All of this takes place quietly in the background and makes for a comfortable
    and seamless user experience. Without asynchronous communication, the entire form
    would have to be submitted to the server, which would then send back HTML, highlighting
    any mistakes. It would be a workable solution but nowhere near as tidy or pleasurable
    as on-the-fly form field processing.
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: 所有这些都在后台静静地进行，为用户提供了舒适且无缝的使用体验。没有异步通信，整个表单都必须提交到服务器，然后服务器会返回 HTML，并突出显示任何错误。这也算是一个可行的解决方案，但远不及即时处理表单字段那样整洁和令人愉悦。
- en: Asynchronous communication can be used for a lot more than simple input verification
    and processing, though; we’ll explore many additional things that you can do with
    it later in this book.
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，异步通信不仅仅可以用于简单的输入验证和处理，我们将在本书的后续部分探讨许多其他可以使用它来实现的功能。
- en: In this chapter, you have read a good introduction to the core technologies
    of PHP, MySQL, JavaScript, CSS, and HTML5 (as well as Apache) and have learned
    how they work together. In [Chapter 2](ch02.xhtml#setting_up_a_development_server),
    we’ll look at how you can install your own web development server on which to
    practice everything that you will be learning.
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，您已经读到了 PHP、MySQL、JavaScript、CSS 和 HTML5（以及 Apache）的核心技术的很好介绍，并学习了它们如何共同工作。在[第二章](ch02.xhtml#setting_up_a_development_server)中，我们将讨论如何在自己的
    Web 开发服务器上安装和练习您将要学习的所有内容。
- en: Questions
  id: totrans-129
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 问题
- en: What four components (at the minimum) are needed to create a fully dynamic web
    page?
  id: totrans-130
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 至少需要哪四个组件才能创建一个完全动态的网页？
- en: What does *HTML* stand for?
  id: totrans-131
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '*HTML* 是什么意思？'
- en: Why does the name *MySQL* contain the letters *SQL*?
  id: totrans-132
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 为什么 *MySQL* 的名称包含字母 *SQL*？
- en: '*PHP* and *JavaScript* are both programming languages that generate dynamic
    results for web pages. What is their main difference, and why would you use both
    of them?'
  id: totrans-133
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '*PHP* 和 *JavaScript* 都是能够为网页生成动态结果的编程语言。它们的主要区别是什么，为什么你会同时使用它们呢？'
- en: What does *CSS* stand for?
  id: totrans-134
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '*CSS* 代表什么？'
- en: List three major new elements introduced in HTML5.
  id: totrans-135
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 列出 HTML5 中引入的三个主要新元素。
- en: If you encounter a bug (which is rare) in one of the open source tools, how
    do you think you could get it fixed?
  id: totrans-136
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果你在一个开源工具中遇到一个（很少见的）Bug，你认为你能如何修复它？
- en: Why is a framework such as jQuery or React so important for developing modern
    websites and web apps?
  id: totrans-137
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 为什么像 jQuery 或 React 这样的框架对于开发现代网站和 Web 应用程序如此重要？
- en: See [“Chapter 1 Answers”](app01_split_000.xhtml#chapter_1_answers) in the [Appendix A](app01_split_000.xhtml#solutions_to_the_chapter_questions)
    for the answers to these questions.
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: 查看 [“第一章答案”](app01_split_000.xhtml#chapter_1_answers) 在 [附录 A](app01_split_000.xhtml#solutions_to_the_chapter_questions)
    中，获取这些问题的答案。
