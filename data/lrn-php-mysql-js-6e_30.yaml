- en: Chapter 27\. HTML5 Audio and Video
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第27章 HTML5音频与视频
- en: One of the biggest driving forces behind the growth of the internet has been
    the insatiable demand from users for ever more multimedia in the form of audio
    and video. Initially, bandwidth was so precious that there was no such thing as
    live streaming, and it could take minutes or even hours to download an audio track,
    let alone a video.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 互联网增长的最大驱动力之一是用户对音频和视频形式的多媒体需求无止境的追求。最初，带宽非常宝贵，几乎没有实时流媒体的概念，下载音频轨道甚至视频可能需要几分钟甚至几小时。
- en: The high cost of bandwidth and limited availability of fast modems drove the
    development of faster and more efficient compression algorithms, such as MP3 audio
    and MPEG video, but even then the only way to download files in any reasonable
    length of time was to drastically reduce their quality.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 带宽的高昂成本和快速调制解调器的有限可用性推动了更快速、更有效率的压缩算法的发展，例如MP3音频和MPEG视频，但即使是那时，以合理的时间下载文件的唯一方法也是大幅降低它们的质量。
- en: One of my earlier internet projects, back in 1997, was the UK’s first online
    radio station licensed by the music authorities. Actually, it was more of a podcast
    (before the term was coined) because we made a daily half-hour show and then compressed
    it down to 8-bit, 11 KHz mono using an algorithm originally developed for telephony,
    and it sounded like phone quality, or worse. Still, we quickly gained thousands
    of listeners who would download the show and then listen to it as they surfed
    to the sites discussed in it by means of a pop-up browser window containing a
    plug-in.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 我早期的一个互联网项目是1997年英国的第一个由音乐管理机构授权的在线广播电台。实际上，它更像是一个播客（在这个术语被创造出来之前），因为我们每天制作一个半小时的节目，然后使用最初为电话系统开发的算法将其压缩到8位、11千赫单声道，听起来像电话质量，甚至更差。尽管如此，我们迅速获得了成千上万的听众，他们会下载节目，并在弹出的浏览器窗口中使用插件的方式收听其中讨论的网站。
- en: Thankfully for us, and everyone publishing multimedia, it soon became possible
    to offer greater audio and video quality, but still only by asking the user to
    download and install a plug-in player. Flash became the most popular of these
    players, after beating rivals such as RealAudio, but it gained a bad reputation
    as the cause of many a browser crash and constantly required upgrading when new
    versions were released.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 幸运的是，对于我们和所有发布多媒体内容的人来说，很快就能提供更高的音频和视频质量，但仍需用户下载并安装插件播放器。Flash成为这些播放器中最受欢迎的，击败了竞争对手如RealAudio，但由于经常导致浏览器崩溃并要求用户不断升级新版本，它声名狼藉。
- en: So, it was generally agreed that the way ahead was to come up with some web
    standards for supporting multimedia directly within the browser. Of course, browser
    developers such as Microsoft and Google had differing visions of what these standards
    should look like, but when the dust settled, they had agreed on a subset of file
    types that all browsers should play natively, and these were introduced into the
    HTML5 specification.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，普遍认为前进的道路是制定一些支持在浏览器中直接处理多媒体的web标准。当然，像微软和谷歌这样的浏览器开发者对这些标准的看法不同，但是当风尘定息时，他们已经同意了所有浏览器应该原生播放的文件类型的一个子集，并将其引入了HTML5规范。
- en: Finally, it is possible (as long as you encode your audio and video in a few
    different formats) to upload multimedia to a web server, place a couple of HTML
    tags in a web page, and play the media on any major desktop browser, smartphone,
    or tablet device, without the user having to download a plug-in or make any other
    changes.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，只要你把音频和视频编码成几种不同格式，就可以将多媒体上传到web服务器，在网页中加入一些HTML标签，然后在任何主流桌面浏览器、智能手机或平板设备上播放媒体，用户无需下载插件或做任何其他更改。
- en: About Codecs
  id: totrans-7
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 关于编解码器
- en: The term *codec* stands for en*co*der/*dec*oder. It describes the functionality
    provided by software that encodes and decodes media such as audio and video. In
    HTML5 there are a number of different sets of codecs available, depending on the
    browser used.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 术语*编解码器*代表编码器/*解码器*。它描述了软件提供的编解码音频和视频等媒体的功能。在HTML5中，根据所使用的浏览器，有多组不同的编解码器可用。
- en: One complication around audio and video, which rarely applies to graphics and
    other traditional web content, is the licensing carried by the formats and codecs.
    Many formats and codecs are provided for a fee, because they were developed by
    a single company or consortium of companies that chose a proprietary license.
    Some free and open source browsers don’t support the most popular formats and
    codecs because it is unfeasible to pay for them, or because the developers oppose
    proprietary licenses in principle. Because copyright laws vary from country to
    country and because licenses are hard to enforce, the codecs can usually be found
    on the web for no cost, but they might technically be illegal to use where you
    live.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 与图形和其他传统网页内容不太相关的音频和视频方面的一个复杂情况是格式和编解码器的许可问题。许多格式和编解码器需付费使用，因为它们是由单个公司或公司联盟开发并选择了专有许可证。一些免费和开源的浏览器由于难以支付费用或者开发者基于原则反对专有许可证，因此不支持最流行的格式和编解码器。由于版权法在不同国家有所不同，并且许可证的执行较难，这些编解码器通常可以在网络上免费获取，但在您所在地可能在技术上是非法使用的。
- en: 'Following are the codecs supported by the HTML5 `<audio>` tag (and also when
    audio is attached to HTML5 video):'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是HTML5 `<audio>`标签支持的编解码器（也适用于附加到HTML5视频的音频）：
- en: <dfn class="keep-together">AAC</dfn>
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: <dfn class="keep-together">AAC</dfn>
- en: This audio codec, which stands for Advanced Audio Encoding, is a proprietary
    patented technology that generally uses the *.aac* file extension. Its MIME type
    is `audio/aac`.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 这种音频编解码器是专有的专利技术，通常使用*.aac*文件扩展名，称为高级音频编码。其MIME类型为`audio/aac`。
- en: <dfn class="keep-together">FLAC</dfn>
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: <dfn class="keep-together">FLAC</dfn>
- en: This audio codec, which stands for Free Lossless Audio Codec, was developed
    by the Xiph.Org Foundation. It uses the *.flac* extension, and its Mime type is
    `audio/flac`.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 这种音频编解码器是由Xiph.Org基金会开发的自由无损音频编解码器，使用*.flac*扩展名，其MIME类型为`audio/flac`。
- en: <dfn class="keep-together">MP3</dfn>
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: <dfn class="keep-together">MP3</dfn>
- en: This audio codec, which stands for MPEG Audio Layer 3, has been available for
    many years. Although the term is often (incorrectly) used to refer to any type
    of digital audio, it is a proprietary patented technology that uses the *.mp3* extension.
    Its Mime type is `audio/mpeg`.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 这种音频编解码器称为MPEG音频层3，已经存在多年。尽管这个术语经常（错误地）用来指代任何类型的数字音频，但它是一种专有的专利技术，使用*.mp3*扩展名。其MIME类型为`audio/mpeg`。
- en: <dfn class="keep-together">PCM</dfn>
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: <dfn class="keep-together">PCM</dfn>
- en: This audio codec, which stands for Pulse Coded Modulation, stores the full data
    as encoded by an analog-to-digital converter and is the format used for storing
    data on audio CDs. Because it does not use compression, it is called a *lossless*
    codec, and its files are generally many times larger than AAC or MP3 files. It
    usually has the extension *.wav*. Its MIME type is `audio/wav`, but you may also
    see `audio/wave`.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 这种音频编解码器称为脉冲编码调制，存储由模拟到数字转换器编码的完整数据，是音频CD上数据存储的格式。因为它不使用压缩，被称为*无损*编解码器，其文件通常比AAC或MP3文件大得多。通常使用*.wav*扩展名。其MIME类型为`audio/wav`，但也可能看到`audio/wave`。
- en: <dfn class="keep-together">Vorbis</dfn>
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: <dfn class="keep-together">Vorbis</dfn>
- en: Sometimes referred to as Ogg Vorbis—because it generally uses the *.ogg* file
    extension—this audio codec is unencumbered by patents and free of royalty payments.
    Its MIME type is `audio/ogg`, or the WebM container uses `audio/webm`.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 有时被称为Ogg Vorbis，因为通常使用*.ogg*文件扩展名，这种音频编解码器没有专利限制，无需版税。其MIME类型为`audio/ogg`，或者WebM容器使用`audio/webm`。
- en: 'As of mid 2021, all of AAC, MP3, PCM, and Vorbis are generally supported by
    most operating systems and browsers (not including Microsoft’s discontinued Internet
    Explorer), with the following Safari-related exceptions:'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 截至2021年中期，AAC、MP3、PCM和Vorbis通常受到大多数操作系统和浏览器的支持（不包括微软已停止支持的Internet Explorer），除了以下与Safari相关的异常情况：
- en: Vorbis `audio/ogg`
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: Vorbis `audio/ogg`
- en: MacOS 10.11 and earlier Safari requires Xiph Quicktime
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: MacOS 10.11及更早版本的Safari需要Xiph Quicktime。
- en: Vorbis `audio/webm`
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: Vorbis `audio/webm`
- en: Not supported on Safari
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 不支持Safari。
- en: FLAC `audio/ogg`
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: FLAC `audio/ogg`
- en: Not supported on Safari (although `audio/flac` is)
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 不支持Safari（尽管`audio/flac`支持）。
- en: Consequently, unless you really have a reason to use Vorbis, it is nowadays
    safe to just stick with either AAC or MP3 for compressed lossy audio, FLAC for
    compressed lossless, or PCM for uncompressed audio.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，除非您真的有理由使用Vorbis，否则现在通常安全地仅使用AAC或MP3进行压缩有损音频，FLAC进行压缩无损音频，或PCM进行未压缩音频。
- en: The <audio> Element
  id: totrans-29
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: <audio>元素
- en: To cater for various platforms, you can record or convert your content using
    multiple codecs and then list them all within `<audio>` and `</audio>` tags, as
    in [Example 27-1](#embedding_three_different_types_of_audio). The nested `<source>`
    tags then contain the various media you wish to offer to a browser. Because the
    `controls` attribute is supplied, the result looks like [Figure 27-1](#playing_an_audio_file).
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 为了适应各种平台，您可以使用多种编解码器记录或转换内容，然后在 `<audio>` 和 `</audio>` 标签内列出它们，例如 [示例 27-1](#embedding_three_different_types_of_audio)。嵌套的
    `<source>` 标签包含您希望向浏览器提供的各种媒体。由于提供了 `controls` 属性，结果看起来像 [图 27-1](#playing_an_audio_file)。
- en: Example 27-1\. Embedding three different types of audio files
  id: totrans-31
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
  zh: 示例 27-1\. 嵌入三种不同类型的音频文件
- en: '[PRE0]'
  id: totrans-32
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: '![Playing an audio file](Images/pmj6_2701.png)'
  id: totrans-33
  prefs: []
  type: TYPE_IMG
  zh: '![播放音频文件](Images/pmj6_2701.png)'
- en: Figure 27-1\. Playing an audio file
  id: totrans-34
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图27-1\. 播放音频文件
- en: In this example I included three different audio types, because that’s perfectly
    acceptable and can be a good idea if you wish to ensure that each browser can
    locate its preferred format rather than just one it knows how to handle. However,
    you can drop either (but not both) of the MP3 or the AAC files and still be confident
    that the example will play on all platforms.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 在此示例中，我包含了三种不同的音频类型，因为这是完全可以接受的，如果您希望确保每个浏览器都能找到其首选格式而不仅仅是了解如何处理的一个格式。但是，您可以放弃
    MP3 或 AAC 文件中的任何一个（但不能同时放弃），仍然可以确保示例在所有平台上播放。
- en: 'The `<audio>` element and its partner `<source>` tag support several attributes:'
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: '`<audio>` 元素及其伴侣 `<source>` 标签支持多个属性：'
- en: <dfn class="keep-together">`autoplay`</dfn>
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: <dfn class="keep-together">`autoplay`</dfn>
- en: Causes the audio to start playing as soon as it is ready
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 导致音频在准备就绪后立即开始播放
- en: <dfn class="keep-together">`controls`</dfn>
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: <dfn class="keep-together">`controls`</dfn>
- en: Causes the control panel to be displayed
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 导致显示控制面板
- en: <dfn class="keep-together">`loop`</dfn>
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: <dfn class="keep-together">`loop`</dfn>
- en: Sets the audio to play over and over
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 设置音频循环播放
- en: <dfn class="keep-together">`preload`</dfn>
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: <dfn class="keep-together">`preload`</dfn>
- en: Causes the audio to begin loading even before the user selects Play
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 导致音频在用户选择播放前即开始加载
- en: <dfn class="keep-together">`src`</dfn>
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: <dfn class="keep-together">`src`</dfn>
- en: Specifies the source location of an audio file
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 指定音频文件的源位置
- en: <dfn class="keep-together">`type`</dfn>
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: <dfn class="keep-together">`type`</dfn>
- en: Specifies the codec used in creating the audio
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 指定创建音频时使用的编解码器
- en: If you don’t supply the `controls` attribute to the `<audio>` tag, and don’t
    use the `autoplay` attribute either, the sound will not play, and there won’t
    be a Play button for the user to click to start playback. This would leave you
    no option other than to offer this functionality in JavaScript, as in [Example 27-2](#playing_audio_using_javascript)
    (with the additional code required highlighted in bold), which provides the ability
    to play and pause the audio, as shown in [Figure 27-2](#html5_audio_can_be_controlled_with_javas).
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您不向 `<audio>` 标签提供 `controls` 属性，并且也不使用 `autoplay` 属性，声音将不会播放，用户也无法点击播放按钮开始播放。这将使您不得不像
    [示例 27-2](#playing_audio_using_javascript) 中所示的那样，在 JavaScript 中提供此功能（需要额外的加粗显示的代码），以提供播放和暂停音频的功能，如
    [图 27-2](#html5_audio_can_be_controlled_with_javas) 所示。
- en: Example 27-2\. Playing audio using JavaScript
  id: totrans-50
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
  zh: 示例 27-2\. 使用 JavaScript 播放音频
- en: '[PRE1]'
  id: totrans-51
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: '![HTML5 audio can be controlled with JavaScript](Images/pmj6_2702.png)'
  id: totrans-52
  prefs: []
  type: TYPE_IMG
  zh: '![HTML5 音频可以通过 JavaScript 进行控制](Images/pmj6_2702.png)'
- en: Figure 27-2\. HTML5 audio can be controlled with JavaScript
  id: totrans-53
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图27-2\. HTML5 音频可以通过 JavaScript 进行控制
- en: This works by calling the `play` or `pause` methods of the `myaudio` element
    when the buttons are clicked.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 当用户点击按钮时，通过调用 `myaudio` 元素的 `play` 或 `pause` 方法来实现。
- en: The <video> Element
  id: totrans-55
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '`<video>` 元素'
- en: Playing video in HTML5 is quite similar to audio; you just use the `<video>`
    tag and provide `<source>` elements for the media you are offering. [Example 27-3](#playing_html5_video)
    shows how to do this with three different video codec types, as displayed in [Figure 27-3](#playing-html5-video-2).
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 在 HTML5 中播放视频与音频非常类似；您只需使用 `<video>` 标签并为您提供的媒体提供 `<source>` 元素即可。 [示例 27-3](#playing_html5_video)
    展示了如何使用三种不同的视频编解码器类型执行此操作，如 [图 27-3](#playing-html5-video-2) 所示。
- en: Example 27-3\. Playing HTML5 video
  id: totrans-57
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
  zh: 示例 27-3\. 播放 HTML5 视频
- en: '[PRE2]'
  id: totrans-58
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: '![](Images/pmj6_2703.png)'
  id: totrans-59
  prefs: []
  type: TYPE_IMG
  zh: '![](Images/pmj6_2703.png)'
- en: Figure 27-3\. Playing HTML5 video
  id: totrans-60
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图27-3\. 播放 HTML5 视频
- en: The Video Codecs
  id: totrans-61
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 视频编解码器
- en: 'As with audio, there are a number of video codecs available, with differing
    support across multiple browsers. These codecs come in different containers, as
    follows:'
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 与音频类似，多种视频编解码器可供选择，但不同浏览器的支持程度不同。这些编解码器有不同的容器格式，如下所示：
- en: <dfn class="keep-together">MP4</dfn>
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: <dfn class="keep-together">MP4</dfn>
- en: A license-encumbered, multimedia container format standard specified as a part
    of MPEG-4\. Its MIME type is `video/mp4`.
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 作为 MPEG-4 标准的一部分指定的许可受限、多媒体容器格式。其 MIME 类型为 `video/mp4`。
- en: <dfn class="keep-together">Ogg</dfn>
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: <dfn class="keep-together">Ogg</dfn>
- en: A free, open container format maintained by the Xiph.Org Foundation. The creators
    of the Ogg format state that it is unrestricted by software patents. Its MIME
    type is `video/ogg`.
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 由 Xiph.Org Foundation 维护的免费开放容器格式。Ogg 格式的创建者表示其不受软件专利的限制。其 MIME 类型为 `video/ogg`。
- en: <dfn class="keep-together">WebM</dfn>
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: <dfn class="keep-together">WebM</dfn>
- en: An audio-video format designed to provide a royalty-free, open video compression
    format for use with HTML5 video. Its MIME type is `video/webm`.
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 一种为 HTML5 视频设计的免版税、开放视频压缩格式。其 MIME 类型为 `video/webm`。
- en: 'These may then contain one of the following video codecs:'
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 这些可能包含以下视频编解码器之一：
- en: <dfn class="keep-together">H.264 & H.265</dfn>
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: <dfn class="keep-together">H.264 & H.265</dfn>
- en: Patented, proprietary video codecs that can be played back for free by the end
    user but that may incur royalty fees for all parts of the encoding and transmission
    process. H.265 supports almost double the compression of H.264 for the same quality
    output.
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 对最终用户免费播放专利、专有视频编解码器，但对编码和传输过程的所有部分可能会产生版税费用。H.265 在相同质量输出下支持几乎双倍的压缩比 H.264。
- en: <dfn class="keep-together">Theora</dfn>
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: <dfn class="keep-together">Theora</dfn>
- en: A video codec that is unencumbered by patents and free of royalty payments at
    all levels of encoding, transmission, and playback.
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 一种视频编解码器，不受专利的限制且在编码、传输和播放各个层面都不需要版税支付。
- en: <dfn class="keep-together">VP8</dfn>
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: <dfn class="keep-together">VP8</dfn>
- en: A video codec that is similar to Theora but is owned by Google, which has published
    it as open source, making it royalty-free.
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 类似于 Theora 的视频编解码器，由谷歌拥有，并作为开源发布，因此免费使用。
- en: <dfn class="keep-together">VP9</dfn>
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: <dfn class="keep-together">VP9</dfn>
- en: The same as VP8 but more powerful, using half the bitrate.
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 与 VP8 类似但更强大，使用一半的比特率。
- en: Nowadays you can be sure that pretty much all modern browsers support all of
    these, with the exceptions that Theora `video/ogg` is not supported on iOS, and
    macOS earlier than 10.11 requires Xiph QuickTime.
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 现在你可以确信几乎所有的现代浏览器都支持这些，但有例外，Theora `video/ogg` 不支持 iOS，而 macOS 早期版本需要 Xiph QuickTime。
- en: Therefore you may wish to steer clear of Ogg if iOS is one of your target platforms (which
    will usually be the case), as you can safely rely on either MP4 or WebM on all
    platforms and forget about other formats for the time being. However, in [Example 27-3](#playing_html5_video)
    I have shown how you can add all the three main video types if you like, as the
    browser will then choose the format it prefers.
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，如果 iOS 是你的目标平台之一（通常是这样），你可能希望避开使用 Ogg，而可以在所有平台上安全地依赖 MP4 或 WebM，并暂时忘记其他格式。然而，在
    [Example 27-3](#playing_html5_video) 中，我展示了如果你愿意，可以添加所有三种主要视频类型，因为浏览器将选择它偏爱的格式。
- en: 'The `<video>` element and accompanying `<source>` tag support the following
    attributes:'
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: '`<video>` 元素和相应的 `<source>` 标签支持以下属性：'
- en: <dfn class="keep-together">`autoplay`</dfn>
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: <dfn class="keep-together">`autoplay`</dfn>
- en: Causes the video to start playing as soon as it is ready
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 导致视频在准备就绪后立即开始播放
- en: <dfn class="keep-together">`controls`</dfn>
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: <dfn class="keep-together">`controls`</dfn>
- en: Causes the control panel to be displayed
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 导致显示控制面板
- en: <dfn class="keep-together">`height`</dfn>
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: <dfn class="keep-together">`height`</dfn>
- en: Specifies the height at which to display the video
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 指定视频显示的高度
- en: <dfn class="keep-together">`loop`</dfn>
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: <dfn class="keep-together">`loop`</dfn>
- en: Sets the video to play over and over
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 设置视频循环播放
- en: <dfn class="keep-together">`muted`</dfn>
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: <dfn class="keep-together">`muted`</dfn>
- en: Mutes the audio output
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 静音音频输出
- en: <dfn class="keep-together">`poster`</dfn>
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: <dfn class="keep-together">`poster`</dfn>
- en: Lets you choose an image to display where the video will play
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 允许您选择一个图像，在视频播放时显示
- en: <dfn class="keep-together">`preload`</dfn>
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: <dfn class="keep-together">`preload`</dfn>
- en: Causes the video to begin loading before the user selects Play
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 导致视频在用户选择播放之前开始加载
- en: <dfn class="keep-together">`src`</dfn>
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: <dfn class="keep-together">`src`</dfn>
- en: Specifies the source location of a video file
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 指定视频文件的源位置
- en: <dfn class="keep-together">`type`</dfn>
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: <dfn class="keep-together">`type`</dfn>
- en: Specifies the codec used in creating the video
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 指定创建视频时使用的编解码器
- en: <dfn class="keep-together">`width`</dfn>
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: <dfn class="keep-together">`width`</dfn>
- en: Specifies the width at which to display the video
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 指定视频显示的宽度
- en: If you wish to control video playback from JavaScript, you can do so using code
    such as that in [Example 27-4](#controlling_video_playback_from_javascri) (with
    the additional code required highlighted in bold), with the results shown in [Figure 27-4](#video-with-buttons).
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您希望从 JavaScript 控制视频播放，可以使用如 [示例 27-4](#controlling_video_playback_from_javascri)
    中所示的代码（需要额外的代码部分用粗体标出），其结果显示在 [图 27-4](#video-with-buttons) 中。
- en: Example 27-4\. Controlling video playback from JavaScript
  id: totrans-102
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
  zh: 示例 27-4\. 从 JavaScript 控制视频播放
- en: '[PRE3]'
  id: totrans-103
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: This code is just like that for controlling audio from JavaScript. Simply call
    the `play` and/or `pause` methods of the `myvideo` object to play and pause the
    video.
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 此代码与从 JavaScript 控制音频的方式非常相似。只需调用 `myvideo` 对象的 `play` 和/或 `pause` 方法即可播放和暂停视频。
- en: '![](Images/pmj6_2704.png)'
  id: totrans-105
  prefs: []
  type: TYPE_IMG
  zh: '![](Images/pmj6_2704.png)'
- en: Figure 27-4\. JavaScript is being used to control the video
  id: totrans-106
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 27-4\. JavaScript 正在用于控制视频
- en: Using the information in this chapter, you will be able to embed any audio and
    video you like on almost all browsers and platforms without worrying about whether
    users may or may not be able to play it.
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 使用本章中的信息，您将能够在几乎所有浏览器和平台上嵌入任何您喜欢的音频和视频，而不用担心用户是否能够播放。
- en: In the following chapter, I’ll demonstrate the use of a number of other HTML5
    features, including geolocation and local storage.
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 在接下来的章节中，我将演示许多其他 HTML5 功能的使用，包括地理位置和本地存储。
- en: Questions
  id: totrans-109
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 问题
- en: Which two HTML element tags are used to insert audio and video into an HTML5
    document?
  id: totrans-110
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 用于将音频和视频插入到 HTML5 文档中的两个 HTML 元素标签是哪两个？
- en: Which two compressed, lossy audio codecs should you offer (or choose between)
    to guarantee playability on all major platforms?
  id: totrans-111
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 为了确保在所有主要平台上能够播放，您应该提供哪两种压缩的有损音频编解码器（或在其中选择）？
- en: Which methods can you call to play and pause HTML5 media playback?
  id: totrans-112
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 要调用哪些方法来播放和暂停 HTML5 媒体播放？
- en: What type of format is FLAC?
  id: totrans-113
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: FLAC 是哪种格式类型？
- en: Which two video codecs should you choose between (or offer) to guarantee playability
    on all major platforms?
  id: totrans-114
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 为了确保在所有主要平台上能够播放，您应该选择哪两种视频编解码器（或在其中选择）？
- en: See [“Chapter 27 Answers”](app01_split_026.xhtml#chapter_27_answers) in the
    [Appendix A](app01_split_000.xhtml#solutions_to_the_chapter_questions) for the
    answers to these questions.
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 查看 [“第27章答案”](app01_split_026.xhtml#chapter_27_answers) 中有关这些问题的答案。
