- en: Chapter 1\. Introduction to PHP
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第 1 章。PHP 简介
- en: PHP is a simple yet powerful language designed for creating HTML content. This
    chapter covers essential background on the PHP language. It describes the nature
    and history of PHP, which platforms it runs on, and how to configure it. This
    chapter ends by showing you PHP in action, with a quick walkthrough of several
    PHP programs that illustrate common tasks, such as processing form data, interacting
    with a database, and creating graphics.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: PHP 是一种简单但功能强大的语言，专为创建 HTML 内容而设计。本章介绍了 PHP 语言的基本背景，描述了 PHP 的性质和历史，它可以运行在哪些平台上，以及如何配置它。本章最后展示了
    PHP 的实际应用，通过快速演示几个 PHP 程序，展示常见任务的处理，例如处理表单数据、与数据库交互和创建图形等。
- en: What Does PHP Do?
  id: totrans-2
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: PHP 能做什么？
- en: 'PHP can be used in two primary ways:'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: PHP 可以以两种主要方式使用：
- en: Server-side scripting
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 服务器端脚本
- en: PHP was originally designed to create dynamic web content, and it is still best
    suited for that task. To generate HTML, you need the PHP parser and a web server
    through which to send the coded document files. PHP has also become popular for
    generating dynamic content via database connections, XML documents, graphics,
    PDF files, and so much more.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: PHP 最初是为创建动态 Web 内容而设计的，至今仍然非常适合这项任务。要生成 HTML，您需要 PHP 解析器和一个 Web 服务器来发送编码的文档文件。PHP
    也因其通过数据库连接生成动态内容而变得流行，还支持 XML 文档、图形、PDF 文件等更多内容。
- en: Command-line scripting
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 命令行脚本
- en: PHP can run scripts from the command line, much like Perl, awk, or the Unix
    shell. You might use the command-line scripts for system administration tasks,
    such as backup and log parsing; even some CRON job–type scripts can be done this
    way (as nonvisual PHP tasks).
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: PHP 可以像 Perl、awk 或 Unix shell 一样从命令行运行脚本。您可以使用命令行脚本执行系统管理任务，例如备份和日志解析；甚至某些 CRON
    作业类型的脚本也可以用这种方式完成（作为非可视化 PHP 任务）。
- en: 'In this book, however, we concentrate on the first item: using PHP to develop
    dynamic web content.'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，在本书中，我们集中讨论第一项内容：使用 PHP 开发动态 Web 内容。
- en: PHP runs on all major operating systems, from Unix variants (including Linux,
    FreeBSD, Ubuntu, Debian, and Solaris) to Windows and macOS. It can be used with
    all leading web servers, including the Apache, Nginx, and OpenBSD servers, to
    name a few; even cloud environments like Azure and Amazon are on the rise.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: PHP 可在所有主要操作系统上运行，包括 Unix 变种（包括 Linux、FreeBSD、Ubuntu、Debian 和 Solaris）、Windows
    和 macOS。它可以与所有主流的 Web 服务器一起使用，包括 Apache、Nginx 和 OpenBSD 等服务器；甚至像 Azure 和 Amazon
    这样的云环境也在不断增长。
- en: The language itself is extremely flexible. For example, you aren’t limited to
    outputting just HTML or other text files—any document format can be generated.
    PHP has built-in support for generating PDF files and GIF, JPEG, and PNG images.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: PHP 语言本身非常灵活。例如，您不仅限于输出 HTML 或其他文本文件 - 任何文档格式都可以生成。PHP 内置支持生成 PDF 文件以及 GIF、JPEG
    和 PNG 图像。
- en: One of PHP’s most significant features is its wide-ranging support for databases.
    PHP supports all major databases (including MySQL, PostgreSQL, Oracle, Sybase,
    MS-SQL, DB2, and ODBC-compliant databases), and even many obscure ones. Even the
    more recent NoSQL-style databases like CouchDB and MongoDB are also supported.
    With PHP, creating web pages with dynamic content from a database is remarkably
    simple.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: PHP 最显著的特性之一是其广泛支持的数据库。PHP 支持所有主要的数据库（包括 MySQL、PostgreSQL、Oracle、Sybase、MS-SQL、DB2
    和符合 ODBC 标准的数据库），甚至支持许多不太常见的数据库。甚至像 CouchDB 和 MongoDB 这样的新型 NoSQL 风格的数据库也得到了支持。通过
    PHP，从数据库创建具有动态内容的网页非常简单。
- en: Finally, PHP provides a library of PHP code to perform common tasks, such as
    database abstraction, error handling, and so on, with the PHP Extension and Application
    Repository (PEAR). [PEAR](http://pear.php.net) is a framework and distribution
    system for reusable PHP components.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，PHP 提供了一个 PHP 代码库，用于执行常见任务，如数据库抽象、错误处理等，通过 PHP 扩展和应用程序库（PEAR）。[PEAR](http://pear.php.net)
    是一个用于可重用 PHP 组件的框架和分发系统。
- en: A Brief History of PHP
  id: totrans-13
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: PHP 的简要历史
- en: Rasmus Lerdorf first conceived of PHP in 1994, but the PHP that people use today
    is quite different from the initial version. To understand how PHP got where it
    is now, it is useful to know the historical evolution of the language. Here’s
    that story, with ample comments and emails from Rasmus himself.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: Rasmus Lerdorf 最初在 1994 年构思了 PHP，但今天人们使用的 PHP 与最初版本大不相同。要理解 PHP 是如何发展到现在的，了解语言的历史演变是很有用的。这里有详细的评论和来自
    Rasmus 自己的电子邮件。
- en: The Evolution of PHP
  id: totrans-15
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: PHP 的演变
- en: 'Here is the PHP 1.0 announcement that was posted to the Usenet newsgroup (*comp.infosystems.www.authoring.cgi*)
    in June 1995:'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 这是 PHP 1.0 的公告，发布于 1995 年 6 月的 Usenet 新闻组（*comp.infosystems.www.authoring.cgi*）：
- en: '[PRE0]'
  id: totrans-17
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Note that the URL and email address shown in this message are long gone. The
    language of this announcement reflects the concerns that people had at the time,
    such as password-protecting pages, easily creating forms, and accessing form data
    on subsequent pages. The announcement also illustrates PHP’s initial positioning
    as a framework for a number of useful tools.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，此消息中显示的 URL 和电子邮件地址早已消失。这份公告的语言反映了当时人们关注的问题，比如密码保护页面、轻松创建表单以及在后续页面访问表单数据。此外，该公告还说明了
    PHP 最初作为一系列有用工具的框架的定位。
- en: The announcement talks only about the tools that came with PHP, but behind the
    scenes the goal was to create a framework to make it easy to extend PHP and add
    more tools. The business logic for these add-ons was written in C; a simple parser
    picked tags out of the HTML and called the various C functions. It was never really
    part of the plan to create a scripting language.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 公告只谈到了随 PHP 一起提供的工具，但在幕后的目标是创建一个框架，使得扩展 PHP 并添加更多工具变得容易。这些插件的业务逻辑是用 C 编写的；一个简单的解析器从
    HTML 中提取标签并调用各种 C 函数。真正的计划从来不是创建一个脚本语言。
- en: So what happened?
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 那么发生了什么呢？
- en: Rasmus started working on a rather large project for the University of Toronto
    that needed a tool to pull together data from various places and present a nice
    web-based administration interface. Of course, he used PHP for the task, but for
    performance reasons, the various small tools of PHP 1.0 had to be brought together
    better and integrated into the web server.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: Rasmus 开始为多伦多大学进行一个相当大的项目，需要一个工具来整合来自各处的数据并呈现一个漂亮的基于 Web 的管理界面。当然，他使用了 PHP 来完成这项任务，但出于性能原因，需要更好地将
    PHP 1.0 的各种小工具整合到一起，并集成到 Web 服务器中。
- en: Initially, some hacks to the NCSA web server were made, to patch it to support
    the core PHP functionality. The problem with this approach was that as a user,
    you had to replace your web server software with this special, hacked-up version.
    Fortunately, Apache was also starting to gain momentum around this time, and the
    Apache API made it easier to add functionality like PHP to the server.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 最初，对 NCSA Web 服务器进行了一些修改，以补丁形式支持 PHP 核心功能。这种方法的问题在于，作为用户，你必须用这种特殊的、经过修改的版本替换你的
    Web 服务器软件。幸运的是，此时 Apache 也开始获得势头，Apache API 使得像 PHP 这样向服务器添加功能变得更加容易。
- en: 'Over the next year or so, a lot was done and the focus changed quite a bit.
    Here’s the PHP 2.0 (PHP/FI) announcement that was sent out in April 1996:'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 在接下来的一年左右，完成了大量工作，关注重点也有了相当大的变化。以下是 PHP 2.0（PHP/FI）的公告，发布于 1996 年 4 月：
- en: '[PRE1]'
  id: totrans-24
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: This was the first time the term *scripting language* was used. PHP 1.0’s simplistic
    tag-replacement code was replaced with a parser that could handle a more sophisticated
    embedded tag language. By today’s standards, the tag language wasn’t particularly
    sophisticated, but compared to PHP 1.0 it certainly was.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 这是第一次使用术语*脚本语言*。PHP 1.0 的简单标签替换代码被一个可以处理更复杂的嵌入式标签语言的解析器替换。按照今天的标准来看，这种标签语言并不特别复杂，但与
    PHP 1.0 相比，它确实是。
- en: The main reason for this change was that few people who used PHP 1.0 were actually
    interested in using the C-based framework for creating add-ons. Most users were
    much more interested in being able to embed logic directly in their web pages
    for creating conditional HTML, custom tags, and other such features. PHP 1.0 users
    were constantly requesting the ability to add the hit-tracking footer or send
    different HTML blocks conditionally. This led to the creation of an `if` tag.
    Once you have `if`, you need `else` as well, and from there it’s a slippery slope
    to the point where, whether you want to or not, you end up writing an entire scripting
    language.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 这种变化的主要原因是，实际上使用 PHP 1.0 的人中很少有人真正有兴趣使用基于 C 的框架来创建插件。大多数用户更感兴趣的是能够直接在他们的网页中嵌入逻辑，以创建条件
    HTML、自定义标签和其他类似功能。PHP 1.0 的用户不断要求能够添加点击跟踪页脚或有条件地发送不同的 HTML 块的功能。这导致了 `if` 标签的创建。一旦有了
    `if`，你也需要 `else`，从那时起，你不管是否愿意，最终会编写出一个完整的脚本语言。
- en: By mid-1997, PHP version 2.0 had grown quite a bit and had attracted a lot of
    users, but there were still some stability problems with the underlying parsing
    engine. The project was also still mostly a one-man effort, with a few contributions
    here and there. At this point, Zeev Suraski and Andi Gutmans in Tel Aviv, Israel,
    volunteered to rewrite the underlying parsing engine, and we agreed to make their
    rewrite the base for PHP version 3.0\. Other people also volunteered to work on
    other parts of PHP, and the project changed from a one-person effort with a few
    contributors to a true open source project with many developers around the world.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 到 1997 年中期，PHP 2.0 已经有了很大的发展，并吸引了许多用户，但底层解析引擎仍然存在一些稳定性问题。该项目当时仍然主要是一个人的努力，偶尔会有一些贡献。在这一点上，以色列特拉维夫的
    Zeev Suraski 和 Andi Gutmans 自愿重写了底层解析引擎，并且我们同意将他们的重写作为 PHP 版本 3.0 的基础。其他人也自愿参与
    PHP 的其他部分的工作，这个项目从一个主要由少数贡献者组成的个人努力转变为一个真正的开源项目，在世界各地拥有许多开发人员。
- en: 'Here is the PHP 3.0 announcement from June 1998:'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 这里是 PHP 3.0 的 1998 年 6 月公告：
- en: '[PRE2]'
  id: totrans-29
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: After the release of PHP 3.0, usage really started to take off. Version 4.0
    was prompted by a number of developers who were interested in making some fundamental
    changes to the architecture of PHP. These changes included abstracting the layer
    between the language and the web server, adding a thread-safety mechanism, and
    adding a more advanced, two-stage parse/execute tag-parsing system. This new parser,
    primarily written by Zeev and Andi, was named the Zend engine. After a lot of
    work by a lot of developers, PHP 4.0 was released on May 22, 2000.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 在发布 PHP 3.0 后，其使用量真正开始增长。版本 4.0 是由一些开发人员推动的，他们有兴趣对 PHP 的架构进行一些基本的更改。这些变化包括将语言与
    Web 服务器之间的层抽象化，添加线程安全机制，以及添加更高级的两阶段解析/执行标记解析系统。这个由 Zeev 和 Andi 主要编写的新解析器被命名为 Zend
    引擎。在许多开发人员的共同努力下，PHP 4.0 于 2000 年 5 月 22 日发布。
- en: As this book goes to press, PHP version 7.3 has been released for some time.
    There have already been a few minor “dot” releases, and the stability of this
    current version is quite high. As you will see in this book, there have been some
    major advances made in this version of PHP, primarily in code processing on the
    server side. Many other minor changes, function additions, and feature enhancements
    have also been incorporated.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 本书出版时，PHP 版本 7.3 已经发布了一段时间。已经发布了几个小的“点”版本，并且当前版本的稳定性非常高。正如您将在本书中看到的那样，这个 PHP
    版本在服务器端的代码处理方面已经取得了一些重大进展。还包括许多其他小的更改、函数添加和功能增强。
- en: The Widespread Use of PHP
  id: totrans-32
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: PHP 的广泛使用
- en: '[Figure 1-1](#php_usage_as_of_march_twozeroonenine) shows the [usage of PHP
    as compiled by W3Techs](http://bit.ly/XjyVZM) as of March 2019\. The most interesting
    piece of data here is that 79% of all the surveyed websites use it, and yet version
    5.0 is still the most widely used. If you look at the methodology used in the
    [W3Techs surveys](https://bit.ly/36QtdEF), you will see that they select the top
    10 million sites (based on traffic; website popularity) in the world. As is evident,
    PHP has a very broad adoption indeed!'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: '[图 1-1](#php_usage_as_of_march_twozeroonenine) 显示了根据 W3Techs 编译的 [PHP 使用情况](http://bit.ly/XjyVZM)，截至
    2019 年 3 月。这里最有趣的数据是，在所有调查的网站中，79% 使用了它，但仍然最广泛使用的是版本 5.0。如果您查看 [W3Techs 调查](https://bit.ly/36QtdEF)
    中使用的方法，您将看到他们选择了全球排名前 1000 万的网站（基于流量；网站流行度）。显然，PHP 的广泛采用确实令人印象深刻！'
- en: '![PHP usage as of March 2019](Images/php4_0101.png)'
  id: totrans-34
  prefs: []
  type: TYPE_IMG
  zh: '![2019 年 3 月 PHP 使用情况](Images/php4_0101.png)'
- en: Figure 1-1\. PHP usage as of March 2019
  id: totrans-35
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 1-1 PHP 使用情况截至 2019 年 3 月
- en: Installing PHP
  id: totrans-36
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 安装 PHP
- en: As mentioned, PHP is available for many operating systems and platforms. Therefore,
    you are encouraged to consult the [PHP documentation](https://oreil.ly/FzRfm)
    to find the environment that most closely fits the one you will be using and follow
    the appropriate setup instructions.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 如前所述，PHP 可用于许多操作系统和平台。因此，建议您查阅 [PHP 文档](https://oreil.ly/FzRfm)，以找到最符合您将使用的环境，并遵循相应的设置说明。
- en: From time to time, you may also want to change the way PHP is configured. To
    do that, you will have to change the PHP configuration file and restart your web
    (Apache) server. Each time you make a change to PHP’s environment, you will have
    to restart the web (Apache) server in order for those changes to take effect.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 有时，您可能还想更改 PHP 配置的方式。要做到这一点，您将不得不更改 PHP 配置文件并重新启动您的 Web（Apache）服务器。每次您更改 PHP
    的环境时，都必须重新启动 Web（Apache）服务器，以使这些更改生效。
- en: PHP’s configuration settings are usually maintained in a file called *php.ini*.
    The settings in this file control the behavior of PHP features, such as session
    handling and form processing. Later chapters refer to some of the *php.ini* options,
    but in general the code in this book does not require a customized configuration.
    See the [PHP documentation](https://oreil.ly/hqVvL) for more information on configuring
    *php.ini*.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: PHP的配置设置通常保存在名为*php.ini*的文件中。该文件中的设置控制PHP特性的行为，比如会话处理和表单处理。本书后面的章节会提到一些*php.ini*选项，但通常情况下，本书中的代码不需要自定义配置。详细信息请参阅[PHP文档](https://oreil.ly/hqVvL)了解如何配置*php.ini*。
- en: A Walk Through PHP
  id: totrans-40
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: PHP简介
- en: PHP pages are generally HTML pages with PHP commands embedded in them. This
    is in contrast to many other dynamic web page solutions, which are scripts that
    generate HTML. The web server processes the PHP commands and sends their output
    (and any HTML from the file) to the browser. [Example 1-1](#example_one_onedot_hello_worlddotphp)
    shows a complete PHP page.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: PHP页面通常是带有嵌入PHP命令的HTML页面。这与许多其他动态网页解决方案形成对比，后者是生成HTML的脚本。Web服务器处理PHP命令，并将其输出（以及来自文件的任何HTML）发送到浏览器。[示例1-1](#example_one_onedot_hello_worlddotphp)展示了一个完整的PHP页面。
- en: Example 1-1\. hello_world.php
  id: totrans-42
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
  zh: 示例 1-1\. hello_world.php
- en: '[PRE3]'
  id: totrans-43
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: Save the contents of [Example 1-1](#example_one_onedot_hello_worlddotphp) to
    a file, *hello_world.php*, and point your browser to it. The results appear in
    [Figure 1-2](#output_of_hello_worlddotphp).
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 将[示例1-1](#example_one_onedot_hello_worlddotphp)的内容保存到文件*hello_world.php*中，并将浏览器指向它。结果显示在[图1-2](#output_of_hello_worlddotphp)中。
- en: '![Output of hello_world.php](Images/php4_0102.png)'
  id: totrans-45
  prefs: []
  type: TYPE_IMG
  zh: '![hello_world.php的输出](Images/php4_0102.png)'
- en: Figure 1-2\. Output of hello_world.php
  id: totrans-46
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图1-2\. hello_world.php的输出
- en: The PHP `echo` command produces output (the string “Hello, world!” in this case)
    inserted into the HTML file. In this example, the PHP code is placed between the
    `<?php` and `?>` tags. There are other ways to tag your PHP code—see [Chapter 2](ch02.xhtml#language_basics)
    for a full description.
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: PHP的`echo`命令会输出内容（本例中是字符串“Hello, world!”），并插入到HTML文件中。在这个例子中，PHP代码位于`<?php`和`?>`标签之间。还有其他标记PHP代码的方法，请参阅[第2章](ch02.xhtml#language_basics)获取完整说明。
- en: Configuration Page
  id: totrans-48
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 配置页面
- en: The PHP function `phpinfo()` creates an HTML page full of information on how
    PHP was installed and is currently configured. You can use it to see whether you
    have particular extensions installed, or whether the *php.ini* file has been customized.
    [Example 1-2](#example_one_twodot_using_phpinfoleft_pa) is a complete page that
    displays the `phpinfo()` page.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: PHP函数`phpinfo()`创建一个HTML页面，包含有关PHP安装和当前配置的详细信息。您可以使用它查看是否安装了特定扩展，或者*php.ini*文件是否已定制。[示例1-2](#example_one_twodot_using_phpinfoleft_pa)是显示`phpinfo()`页面的完整页面。
- en: Example 1-2\. Using phpinfo()
  id: totrans-50
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
  zh: 示例 1-2\. 使用phpinfo()
- en: '[PRE4]'
  id: totrans-51
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: '[Figure 1-3](#partial_output_of_phpinfoleft_parenthes) shows the first part
    of the output of [Example 1-2](#example_one_twodot_using_phpinfoleft_pa).'
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: '[图1-3](#partial_output_of_phpinfoleft_parenthes)展示了[示例1-2](#example_one_twodot_using_phpinfoleft_pa)输出的第一部分。'
- en: '![Partial output of phpinfo()](Images/php4_0103.png)'
  id: totrans-53
  prefs: []
  type: TYPE_IMG
  zh: '![phpinfo()的部分输出](Images/php4_0103.png)'
- en: Figure 1-3\. Partial output of phpinfo()
  id: totrans-54
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图1-3\. phpinfo()的部分输出
- en: Forms
  id: totrans-55
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 表单
- en: '[Example 1-3](#example_one_threedot_processing_a_form) creates and processes
    a form. When the user submits the form, the information typed into the name field
    is sent back to this page via the `$_SERVER[''PHP_SELF'']` form action. The PHP
    code tests for a name field and displays a greeting if it finds one.'
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: '[示例1-3](#example_one_threedot_processing_a_form)创建并处理表单。用户提交表单后，输入的名称字段信息通过`$_SERVER[''PHP_SELF'']`表单动作发送回该页面。PHP代码检查名称字段，并在找到时显示问候语。'
- en: Example 1-3\. Processing a form (form.php)
  id: totrans-57
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
  zh: 示例 1-3\. 处理表单（form.php）
- en: '[PRE5]'
  id: totrans-58
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: The form and the message are shown in [Figure 1-4](#form_and_greeting_page).
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 表单和消息显示在[图1-4](#form_and_greeting_page)中。
- en: '![Form and greeting page](Images/php4_0104.png)'
  id: totrans-60
  prefs: []
  type: TYPE_IMG
  zh: '![表单和问候页面](Images/php4_0104.png)'
- en: Figure 1-4\. Form and greeting page
  id: totrans-61
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图1-4\. 表单和问候页面
- en: PHP programs access form values primarily through the `$_POST` and `$_GET` array
    variables. [Chapter 8](ch08.xhtml#web_techniques) discusses forms and form processing
    in more detail.
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: PHP程序主要通过`$_POST`和`$_GET`数组变量访问表单值。[第8章](ch08.xhtml#web_techniques)详细讨论了表单和表单处理。
- en: Databases
  id: totrans-63
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 数据库
- en: PHP supports all the popular database systems, including MySQL, PostgreSQL,
    Oracle, Sybase, SQLite, and ODBC-compliant databases. [Figure 1-5](#a_mysql_book_list_query_run_through_a_p)
    shows part of a MySQL database query run through a PHP script, displaying the
    results of a book search on a book review site. It lists the book title, the year
    the book was published, and the book’s ISBN.
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: PHP支持所有流行的数据库系统，包括MySQL、PostgreSQL、Oracle、Sybase、SQLite和兼容ODBC的数据库。[图1-5](#a_mysql_book_list_query_run_through_a_p)显示了通过PHP脚本运行的MySQL数据库查询的部分结果，显示了在图书评论站点上进行书籍搜索的结果。它列出了书名、出版年份和书籍的ISBN号。
- en: '![A MySQL book list query run through a PHP script](Images/php4_0105.png)'
  id: totrans-65
  prefs: []
  type: TYPE_IMG
  zh: '![通过PHP脚本运行的MySQL书籍列表查询](Images/php4_0105.png)'
- en: Figure 1-5\. A MySQL book list query run through a PHP script
  id: totrans-66
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图1-5\. 通过PHP脚本运行的MySQL书籍列表查询
- en: The code in [Example 1-4](#example_one_fourdot_querying_the_books) connects
    to the database, issues a query to retrieve all available books (with the `WHERE`
    clause), and produces a table as output for all returned results through a `while`
    loop.
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: '[示例1-4](#example_one_fourdot_querying_the_books)中的代码连接到数据库，发出查询以检索所有可用的书籍（带有`WHERE`子句），并通过`while`循环为所有返回的结果生成表格输出。'
- en: Note
  id: totrans-68
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 注意
- en: The SQL code for this sample database is in the provided file *library.sql*.
    You can drop this code into MySQL after you create the library database and have
    the sample database at your disposal for testing out the following code sample
    as well as the related samples in [Chapter 9](ch09.xhtml#databases-id00007).
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 此示例数据库的SQL代码在提供的文件*library.sql*中。在创建库数据库并准备好样本数据库后，您可以将此代码插入MySQL中，以测试以下代码示例及其在[第9章](ch09.xhtml#databases-id00007)中的相关示例。
- en: Example 1-4\. Querying the books database (booklist.php)
  id: totrans-70
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
  zh: 示例 1-4\. 查询图书数据库（booklist.php）
- en: '[PRE6]'
  id: totrans-71
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: Database-provided dynamic content drives the news, blog, and ecommerce sites
    at the heart of the web. More details on accessing databases from PHP are given
    in [Chapter 9](ch09.xhtml#databases-id00007).
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 数据库提供的动态内容推动了网络核心的新闻、博客和电子商务网站。关于如何从PHP访问数据库的更多详细信息，请参阅[第9章](ch09.xhtml#databases-id00007)。
- en: Graphics
  id: totrans-73
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 图形
- en: With PHP, you can easily create and manipulate images using the GD extension.
    [Example 1-5](#example_one_fivedot_dynamic_buttons_lef) provides a text entry
    field that lets the user specify the text for a button. It takes an empty button
    image file, and centers the text passed as the `GET` parameter `'message'` on
    it. The result is then sent back to the browser as a PNG image.
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 使用PHP，您可以轻松创建和操作图像，使用GD扩展。[示例1-5](#example_one_fivedot_dynamic_buttons_lef)提供了一个文本输入字段，允许用户指定按钮的文本。它获取一个空按钮图像文件，并将传递为GET参数`'message'`的文本居中放置在上面。然后将结果作为PNG图像发送回浏览器。
- en: Example 1-5\. Dynamic buttons (graphic_example.php)
  id: totrans-75
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
  zh: 示例 1-5\. 动态按钮（graphic_example.php）
- en: '[PRE7]'
  id: totrans-76
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: The form generated by [Example 1-5](#example_one_fivedot_dynamic_buttons_lef)
    is shown in [Figure 1-6](#button_creation_form). The button created is shown in
    [Figure 1-7](#button_created).
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 由[示例1-5](#example_one_fivedot_dynamic_buttons_lef)生成的表单显示在[图1-6](#button_creation_form)中。创建的按钮显示在[图1-7](#button_created)中。
- en: '![Button creation form](Images/php4_0106.png)'
  id: totrans-78
  prefs: []
  type: TYPE_IMG
  zh: '![按钮创建表单](Images/php4_0106.png)'
- en: Figure 1-6\. Button creation form
  id: totrans-79
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图1-6\. 按钮创建表单
- en: '![Button created](Images/php4_0107.png)'
  id: totrans-80
  prefs: []
  type: TYPE_IMG
  zh: '![创建的按钮](Images/php4_0107.png)'
- en: Figure 1-7\. Button created
  id: totrans-81
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图1-7\. 创建的按钮
- en: You can use GD to dynamically resize images, produce graphs, and much more.
    PHP also has several extensions to generate documents in Adobe’s popular PDF format.
    [Chapter 10](ch10.xhtml#graphic) covers dynamic image generation in depth, while
    [Chapter 11](ch11.xhtml#pdf) provides instruction on how to create Adobe PDF files.
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以使用GD动态调整图像大小、生成图表等。PHP还有几个扩展可以生成Adobe流行的PDF文档。在[第10章](ch10.xhtml#graphic)中深入讨论了动态图像生成，而[第11章](ch11.xhtml#pdf)则介绍了如何创建Adobe
    PDF文件。
- en: What’s Next
  id: totrans-83
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 下一步
- en: Now that you’ve had a taste of what is possible with PHP, you are ready to learn
    how to program in the language. We start with its basic structure, with special
    focus given to user-defined functions, string manipulation, and object-oriented
    programming. Then we move to specific application areas, such as the web, databases,
    graphics, XML, and security. We finish with quick references to the built-in functions
    and extensions. Master these chapters, and you will have mastered PHP!
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 现在您已经体验了PHP的可能性，可以开始学习如何使用这种语言。我们从其基本结构开始，特别关注用户定义的函数、字符串操作和面向对象编程。然后我们转向特定的应用领域，如网络、数据库、图形、XML和安全性。最后，我们提供内置函数和扩展的快速参考。掌握这些章节，您将掌握PHP！
