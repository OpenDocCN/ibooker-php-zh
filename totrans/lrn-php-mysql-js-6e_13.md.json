["```php\nstr_contains(needle: 'ian', haystack: 'Antidisestablishmentarianism');\n```", "```php\nclass newRecord\n{\n`    public` `string` `$username``;`\n`    public` `string` `$email``;`\n\n     public function __construct(\n        string $username,\n        string $email,\n    ) {\n        $this->username = $username;\n        $this->email    = $email;\n    }\n}\n\n```", "```php\nclass newRecord\n{\n     public function __construct(\n`        public` `string` `$username``,`\n`        public` `string` `$email``,`\n    ){}\n}\n```", "```php\nopcache.enable          = 1\nopcache.jit_buffer_size = 100M\nopcache.jit             = tracing\n\n```", "```php\nfunction parse_value(`string``|``int``|``float`): string|null {}\n\n```", "```php\nreturn $user->getAddress()?->getCountry()?->isoCode;\n```", "```php\n`switch` ($country)\n{\n  case \"UK\":\n  case \"USA\":\n  case \"Australia\":\n  default:\n      $lang = \"English\";\n      break;\n  case \"Spain\":\n      $lang = \"Spanish\";\n      break;\n  case \"Germany\":\n  case \"Austria\":\n      $lang = \"German\";\n      break;\n}\n\n```", "```php\n$lang = `match`($country)\n{\n  \"UK\", \"USA\", \"Australia\", default => \"English\",\n  \"Spain\"                           => \"Spanish\",\n  \"Germany\", \"Austria\"              => \"German\",\n};\n```", "```php\n$a = '0e0';\n\nswitch ($a)\n{\n  case    0 : echo 'null'; break;\n  case '0e0': echo 'a';    break;\n}\n```", "```php\nif (`strpos`('Once upon a time', 'Once') !== false)\n  echo 'Found';\n```", "```php\nif (`str_contains`('Once upon a time', 'Once'))\n  echo 'Found';\n```", "```php\nif (str_contains(`strtolower`('Once upon a time'),\n                 `strtolower`('`o`nce')))\n  echo 'Found';\n```", "```php\nif (!function_exists('str_contains'))\n{\n  function str_contains(string $haystack, string $needle): bool\n  {\n    return $needle === '' || strpos($haystack, $needle) !== false;\n  }\n}\n```", "```php\nif (`str_starts_with`('In the beginning', 'In'))\n  echo 'Found';\n```", "```php\nif (!function_exists('str_starts_with'))\n{\n  function str_starts_with(string $haystack, string $needle): bool\n  {\n    return $needle === '' || strpos($haystack, $needle) === 0;\n  }\n}\n```", "```php\nif (`str_ends_with`('In the end', 'end'))\n  echo 'Found';\n```", "```php\nif (!function_exists('str_ends_with'))\n{\n  function str_ends_with(string $haystack, string $needle): bool\n  {\n    return $needle === '' ||\n           $needle === substr($haystack, `-`strlen($needle));\n  }\n}\n```", "```php\nif (!function_exists('fdiv'))\n{\n  function fdiv(float $dividend, float $divisor): float\n  {\n    return @($dividend / $divisor);\n  }\n}\n```"]