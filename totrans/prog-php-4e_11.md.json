["```php\n<html>\n <head>\n <title>Example Page</title>\n </head>\n\n <body>\n This page contains two images.\n <img src=\"image1.png\" alt=\"Image 1\" />\n <img src=\"image2.png\" alt=\"Image 2\" />\n </body>\n</html>\n```", "```php\nGET /page.html HTTP/1.0\nGET /image1.png HTTP/1.0\nGET /image2.png HTTP/1.0\n```", "```php\nContent-Type: text/html\nContent-Type: image/png\nContent-Type: image/png\n```", "```php\n<html>\n <head>\n <title>Example Page</title>\n </head>\n\n <body>\n This page contains two images.\n <img src=\"image1.php\" alt=\"Image 1\" />\n <img src=\"image2.php\" alt=\"Image 2\" />\n </body>\n</html>\n```", "```php\n<img src=\"image.php?num=1\" alt=\"Image 1\" />\n<img src=\"image.php?num=2\" alt=\"Image 2\" />\n```", "```php\n<?php\n$image = imagecreate(200, 200);\n\n$white = imagecolorallocate($image, 0xFF, 0xFF, 0xFF);\n$black = imagecolorallocate($image, 0x00, 0x00, 0x00);\nimagefilledrectangle($image, 50, 50, 150, 150, $black);\n\nheader(\"Content-Type: image/png\");\nimagepng($image);\n```", "```php\n<img src=\"black.php\" />\n```", "```php\n$image = imagecreate(*`width`*, *`height`*);\n```", "```php\n$color = imagecolorallocate(*`image`*, *`red`*, *`green`*, *`blue`*);\n```", "```php\nimagefilledrectangle(*`image`*, *`tlx`*, *`tly`*, *`brx`*, *`bry`*, *`color`*);\n```", "```php\nimagegif(*`image`* [, *`filename`* ]);\nimagejpeg(*`image`* [, *`filename`* [, *`quality`* ]]);\nimagepng(*`image`* [, *`filename`* ]);\nimagewbmp(*`image`* [, *`filename`* ]);\n```", "```php\n<?php\n$image = imagecreate(200, 200);\n$white = imagecolorallocate($image, 0xFF, 0xFF, 0xFF);\n$black = imagecolorallocate($image, 0x00, 0x00, 0x00);\n\nimagefilledrectangle($image, 50, 50, 150, 150, $black);\n\nheader(\"Content-Type: image/jpeg\");\nimagejpeg($image);\n```", "```php\n<?php\n$image = imagecreate(200, 200);\n$white = imagecolorallocate($image, 0xFF, 0xFF, 0xFF);\n$black = imagecolorallocate($image, 0x00, 0x00, 0x00);\n\nimagefilledrectangle($image, 50, 50, 150, 150, $black);\n\nif (imagetypes() & IMG_PNG) {\n header(\"Content-Type: image/png\");\n imagepng($image);\n}\nelse if (imagetypes() & IMG_JPG) {\n header(\"Content-Type: image/jpeg\");\n imagejpeg($image);\n}\nelse if (imagetypes() & IMG_GIF) {\n header(\"Content-Type: image/gif\");\n imagegif($image);\n}\n```", "```php\n$image = imagecreatefromgif(*`filename`*);\n$image = imagecreatefromjpeg(*`filename`*);\n$image = imagecreatefrompng(*`filename`*);\n```", "```php\nimagesetpixel(*`image`*, *`x`*, *`y`*, *`color`*);\n```", "```php\nimageline(*`image`*, *`start_x`*, *`start_` `y`*, *`end_x`*, *`end_` `y`*, *`color`*);\nimagedashedline(*`image`*, *`start_x`*, *`start_` `y`*, *`end_x`*, *`end_` `y`*, *`color`*);\n```", "```php\nimagerectangle(*`image`*, *`tlx`*, *`tly`*, *`brx`*, *`bry`*, *`color`*);\nimagefilledrectangle(*`image`*, *`tlx`*, *`tly`*, *`brx`*, *`bry`*, *`color`*);\n```", "```php\nimagepolygon(*`image`*, *`points`*, *`number`*, *`color`*);\nimagefilledpolygon(*`image`*, *`points`*, *`number`*, *`color`*);\n```", "```php\nimagearc(*`image`*, *`center_x`*, *`center_y`*, *`width`*, *`height`*, *`start`*, *`end`*, *`color`*);\n```", "```php\nimagefill(*`image`*, *`x`*, *`y`*, *`color`*);\nimagefilltoborder(*`image`*, *`x`*, *`y`*, *`border_color`*, *`color`*);\n```", "```php\nimagerotate(*`image`*, *`angle`*, *`background_color`*);\n```", "```php\n<?php\n$image = imagecreate(200, 200);\n$white = imagecolorallocate($image, 0xFF, 0xFF, 0xFF);\n$black = imagecolorallocate($image, 0x00, 0x00, 0x00);\nimagefilledrectangle($image, 50, 50, 150, 150, $black);\n\n$rotated = imagerotate($image, 45, 1);\n\nheader(\"Content-Type: image/png\");\nimagepng($rotated);\n```", "```php\n<?php\n$image = imagecreate(200, 200);\n$white = imagecolorallocate($image, 0xFF, 0xFF, 0xFF);\n$black = imagecolorallocate($image, 0x00, 0x00, 0x00);\n\nimagefilledrectangle($image, 50, 50, 150, 150, $black);\nimagestring($image, 5, 50, 160, \"A Black Box\", $black);\n\nheader(\"Content-Type: image/png\");\nimagepng($image);\n```", "```php\nimagestring(*`image`*, *`font_id`*, *`x`*, *`y`*, *`text`*, *`color`*);\n```", "```php\n<?php\n$image = imagecreate(200, 200);\n$white = imagecolorallocate($image, 0xFF, 0xFF, 0xFF);\n$black = imagecolorallocate($image, 0x00, 0x00, 0x00);\n\nimagestring($image, 1, 10, 10, \"Font 1: ABCDEfghij\", $black);\nimagestring($image, 2, 10, 30, \"Font 2: ABCDEfghij\", $black);\nimagestring($image, 3, 10, 50, \"Font 3: ABCDEfghij\", $black);\nimagestring($image, 4, 10, 70, \"Font 4: ABCDEfghij\", $black);\nimagestring($image, 5, 10, 90, \"Font 5: ABCDEfghij\", $black);\n\nheader(\"Content-Type: image/png\");\nimagepng($image);\n```", "```php\nimagettftext(*`image`*, *`size`*, *`angle`*, *`x`*, *`y`*, *`color`*, *`font`*, *`text`*);\n```", "```php\n<?php\n$image = imagecreate(350, 70);\n$white = imagecolorallocate($image, 0xFF, 0xFF, 0xFF);\n$black = imagecolorallocate($image, 0x00, 0x00, 0x00);\n\n$fontname = \"c:/wamp64/www/bookcode/chapter_10/IndieFlower.ttf\";\n\n*`imagettftext`*($image, 20, 0, 10, 40, $black, $fontname, \"The Quick Brown Fox\");\n\nheader(\"Content-Type: image/png\");\nimagepng($image);\n```", "```php\n<?php\n$image = *`imagecreate`*(70, 350);\n$white = *`imagecolorallocate`*($image, 255, 255, 255);\n$black = *`imagecolorallocate`*($image, 0, 0, 0);\n\n$fontname = \"c:/wamp64/www/bookcode/chapter_10/IndieFlower.ttf\";\n\n*`imagettftext`*($image, 20, 270, 28, 10, $black, $fontname, \"The Quick Brown Fox\");\n\n*`header`*(\"Content-Type: image/png\");\n*`imagepng`*($image);\n```", "```php\n<?php\n$font = \"c:/wamp64/www/bookcode/chapter_10/IndieFlower.ttf\" ;\n$size = *`isset`*(`$_GET`['size']) ? `$_GET`['size'] : 12;\n$text = *`isset`*(`$_GET`['text']) ? `$_GET`['text'] : 'some text';\n\n$image = *`imagecreatefrompng`*(\"button.png\");\n$black = *`imagecolorallocate`*($image, 0, 0, 0);\n\n`if` ($text) {\n // calculate position of text\n $tsize = *`imagettfbbox`*($size, 0, $font, $text);\n $dx = *`abs`*($tsize[2] - $tsize[0]);\n $dy = *`abs`*($tsize[5] - $tsize[3]);\n $x = (*`imagesx`*($image) - $dx ) / 2;\n $y = (*`imagesy`*($image) - $dy ) / 2 + $dy;\n\n // draw text\n *`imagettftext`*($image, $size, 0, $x, $y, $black, $font, $text);\n}\n\n*`header`*(\"Content-Type: image/png\");\n*`imagepng`*($image);\n```", "```php\n<img src=\"button.php?text=PHP+Button\" />\n```", "```php\n<img src=\"button.php?text=<?= urlencode(\"PHP Button\"); ?>\" />\n```", "```php\n<?php\n\n$font = \"c:/wamp64/www/bookcode/chapter_10/IndieFlower.ttf\";\n$size = isset($_GET['size']) ? $_GET['size'] : 12;\n$text = isset($_GET['text']) ? $_GET['text'] : 'some text';\n\n$path = \"/tmp/buttons\"; // button cache directory\n\n// send cached version\n\nif ($bytes = @filesize(\"{$path}/button.png\")) {\n header(\"Content-Type: image/png\");\n header(\"Content-Length: {$bytes}\");\n readfile(\"{$path}/button.png\");\n\n exit;\n}\n\n// otherwise, we have to build it, cache it, and return it\n$image = imagecreatefrompng(\"button.png\");\n$black = imagecolorallocate($image, 0, 0, 0);\n\nif ($text) {\n // calculate position of text\n $tsize = imagettfbbox($size, 0, $font, $text);\n $dx = abs($tsize[2] - $tsize[0]);\n $dy = abs($tsize[5] - $tsize[3]);\n $x = (imagesx($image) - $dx ) / 2;\n $y = (imagesy($image) - $dy ) / 2 + $dy;\n\n // draw text\n imagettftext($image, $size, 0, $x, $y, $black, $font, $text);\n\n // save image to file\n imagepng($image, \"{$path}/{$text}.png\");\n}\n\nheader(\"Content-Type: image/png\");\nimagepng($image);\n```", "```php\n<Location /buttons/>\n ErrorDocument 404 /button.php\n</Location>\n```", "```php\n<?php\n// bring in redirected URL parameters, if any\nparse_str($_SERVER['REDIRECT_QUERY_STRING']);\n\n$cacheDir = \"/buttons/\";\n$url = $_SERVER['REDIRECT_URL'];\n\n// pick out the extension\n$extension = substr($url, strrpos($url, '.'));\n\n// remove directory and extension from $url string\n$file = substr($url, strlen($cacheDir), -strlen($extension));\n\n// security - don't allow '..' in filename\n$file = str_replace('..', '', $file);\n\n// text to display in button\n$text = urldecode($file);\n\n$font = \"c:/wamp64/www/bookcode/chapter_10/IndieFlower.ttf\" ;\n\n// build it, cache it, and return it\n$image = imagecreatefrompng(\"button.png\");\n$black = imagecolorallocate($image, 0, 0, 0);\n\nif ($text) {\n // calculate position of text\n $tsize = imagettfbbox($size, 0, $font, $text);\n $dx = abs($tsize[2] - $tsize[0]);\n $dy = abs($tsize[5] - $tsize[3]);\n $x = (imagesx($image) - $dx ) / 2;\n $y = (imagesy($image) - $dy ) / 2 + $dy;\n\n // draw text\n imagettftext($image, $size, 0, $x, $y, $black, $font, $text);\n\n // save image to file\n imagepng($image, \"{$_SERVER['DOCUMENT_ROOT']}{$cacheDir}{$file}.png\");\n}\n\nheader(\"Content-Type: image/png\");\nimagepng($image);\n```", "```php\nimagecopyresized(*`dest`*, *`src`*, *`dx`*, *`dy`*, *`sx`*, *`sy`*, *`dw`*, *`dh`*, *`sw`*, *`sh`*);\nimagecopyresampled(*`dest`*, *`src`*, *`dx`*, *`dy`*, *`sx`*, *`sy`*, *`dw`*, *`dh`*, *`sw`*, *`sh`*);\n```", "```php\n<?php\n$source = imagecreatefromjpeg(\"php_logo_big.jpg\");\n\n$width = imagesx($source);\n$height = imagesy($source);\n$x = $width / 2;\n$y = $height / 2;\n\n$destination = imagecreatetruecolor($x, $y);\nimagecopyresampled($destination, $source, 0, 0, 0, 0, $x, $y, $width, $height);\n\nheader(\"Content-Type: image/png\");\nimagepng($destination);\n```", "```php\n$width = 128;\n$height = 256;\n\n$image = imagecreate($width, $height);\n$white = imagecolorallocate($image, 0xFF, 0xFF, 0xFF);\n```", "```php\n$image = imagecreatetruecolor(*`width`*, *`height`*);\n```", "```php\n$color = imagecolorallocatealpha(*`image`*, *`red`*, *`green`*, *`blue`*, *`alpha`*);\n```", "```php\nHigh Byte Low Byte\n{Alpha Channel} {Red} {Green} {Blue}\n```", "```php\n<?php\n$image = imagecreatetruecolor(150, 150);\n$white = imagecolorallocate($image, 255, 255, 255);\n\nimagealphablending($image, false);\nimagefilledrectangle($image, 0, 0, 150, 150, $white);\n\n$red = imagecolorallocatealpha($image, 255, 50, 0, 50);\nimagefilledellipse($image, 75, 75, 80, 63, $red);\n\nheader(\"Content-Type: image/png\");\nimagepng($image);\n```", "```php\n<?php\n$image = imagecreatetruecolor(150, 150);\nimagealphablending($image, false);\n\n$white = imagecolorallocate($image, 255, 255, 255);\nimagefilledrectangle($image, 0, 0, 150, 150, $white);\n\n$red = imagecolorallocatealpha($image, 255, 50, 0, 63);\nimagefilledellipse($image, 75, 75, 80, 50, $red);\n\nimagealphablending($image, false);\n\n$gray = imagecolorallocatealpha($image, 70, 70, 70, 63);\nimagefilledrectangle($image, 60, 60, 120, 120, $gray);\n\nheader(\"Content-Type: image/png\");\nimagepng($image);\n```", "```php\n$color = imagecolorat(*`image`*, *`x`*, *`y`*);\n```", "```php\n$values = imagecolorsforindex(*`image`*, *`index`*);\n```", "```php\n$green = imagecolorallocatealpha($image, 0, 0, 255, 127);\n```", "```php\n$green = (127 << 24) | (0 << 16) | (255 << 8) | 0;\n```", "```php\n$green = (127 << 24) | (255 << 8);\n```", "```php\n$a = ($col & 0x7F000000) >> 24;\n$r = ($col & 0x00FF0000) >> 16;\n$g = ($col & 0x0000FF00) >> 8;\n$b = ($col & 0x000000FF);\n```", "```php\n$image = imagecreatetruecolor(256, 60);\n\nfor ($x = 0; $x < 256; $x++) {\n imageline($image, $x, 0, $x, 19, $x);\n imageline($image, 255 - $x, 20, 255 - $x, 39, $x << 8);\n imageline($image, $x, 40, $x, 59, $x<<16);\n}\n\nheader(\"Content-Type: image/png\");\nimagepng($image);\n```", "```php\n<html><body bgcolor=\"#000000\">\n\n<tt><?php\n$image = imagecreatefromjpeg(\"php_logo_tiny.jpg\");\n\n$dx = imagesx($image);\n$dy = imagesy($image);\n\nfor ($y = 0; $y < $dy; $y++) {\n for ($x = 0; $x < $dx; $x++) {\n $colorIndex = imagecolorat($image, $x, $y);\n $rgb = imagecolorsforindex($image, $colorIndex);\n\n printf('<font color=#%02x%02x%02x>#</font>',\n $rgb['red'], $rgb['green'], $rgb['blue']);\n }\n\n echo \"<br>\\n\";\n} ?></tt>\n\n</body></html>\n```"]