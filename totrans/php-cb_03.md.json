["```php\n$str = \"this is an example\";\n\nif (ord($str[0]) >= 97 && ord($str[0]) <= 122) {\n    $str[0] = chr(ord($str[0]) - 32);\n}\n\necho $str . PHP_EOL; // This is an example\n\n$str = \"and this is another\";\n\nif (ord($str[0]) >= 97 && ord($str[0]) <= 122) {\n    $str[0] = chr(ord($str[0]) - 32);\n}\n\necho $str . PHP_EOL; // And this is another\n\n$str = \"3 examples in total\";\n\nif (ord($str[0]) >= 97 && ord($str[0]) <= 122) {\n    $str[0] = chr(ord($str[0]) - 32);\n}\n\necho $str . PHP_EOL; // 3 examples in total\n```", "```php\nfunction capitalize_string($str)\n{\n    if (ord($str[0]) >= 97 && ord($str[0]) <= 122) {\n        $str[0] = chr(ord($str[0]) - 32);\n    }\n\n    return $str;\n}\n\n$str = \"this is an example\";\n\necho capitalize_string($str) . PHP_EOL; // This is an example\n\n$str = \"and this is another\";\n\necho capitalize_string($str) . PHP_EOL; // And this is another\n\n$str = \"3 examples in total\";\n\necho capitalize_string($str) . PHP_EOL; // 3 examples in total\n```", "```php\n$out = capitalize_string(25); // 25\n\n$out = capitalize_string(['a', 'b']); // ['A', 'b']\n```", "```php\nfunction multiply($first, $second)\n{\n    return $first * $second;\n}\n\nmultiply(5, 2); // 10\n\n$one = 7;\n$two = 5;\n\nmultiply($one, $two); // 35\n```", "```php\nfunction increment($number)\n{\n    $number += 1;\n\n    return $number;\n}\n\n$number = 6;\n\necho increment($number); // 7\necho $number; // 6\n```", "```php\nfunction increment(&$number)\n{\n    $number += 1;\n\n    return $number;\n}\n\n$number = 6;\n\necho increment($number); // 7\necho $number; // 7\n```", "```php\nfunction get_book_title($isbn, $error = 'Unable to query')\n{\n    try {\n        $connection = get_database_connection();\n        $book = query_isbn($connection, $isbn);\n\n        return $book->title;\n    } catch {\n        return $error;\n    }\n}\n\nget_book_title('978-1-098-12132-7');\n```", "```php\nfunction brew_latte($flavor = 'unflavored', $shots)\n{\n    return \"Brewing a {$shots}-shot, {$flavor} latte!\";\n}\n\nbrew_latte('vanilla', 2); ![1](assets/1.png)\nbrew_latte(3); ![2](assets/2.png)\n```", "```php\narray_fill(start_index: 0, count: 100, value: 50);\n```", "```php\narray_fill(int $start_index, int $count, mixed $value): array\n```", "```php\narray_fill(0, 100, 50);\n```", "```php\nactivity_log(\n    string    $update_reason,\n    string    $note           = '',\n    string    $sql_statement  = '',\n    string    $user_name      = 'anonymous',\n    string    $ip_address     = '127.0.0.1',\n    ?DateTime $time           = null\n): void\n```", "```php\nactivity_log(\n    'Testing a new system',\n    '',\n    '',\n    'anonymous',\n    '127.0.0.1',\n    new DateTime('2021-12-20')\n);\n```", "```php\nactivity_log('Testing a new system', time: new DateTime('2021-12-20'));\n```", "```php\ndeclare(strict_types=1);\n\nfunction add_numbers(int $left, int $right): int\n{\n    return $left + $right;\n}\n\nadd_numbers(2, 3); ![1](assets/1.png)\nadd_numbers(2, '3'); ![2](assets/2.png)\n```", "```php\nfunction name(type $parameter): return_type\n{\n    // ...\n}\n```", "```php\nfunction say_hello(?string $message): void\n{\n    echo 'Hello, ';\n\n    if ($message === null) {\n        echo 'world!';\n    } else {\n        echo $message . '!';\n    }\n}\n\nsay_hello('Reader'); // Hello, Reader!\nsay_hello(null); // Hello, world!\n```", "```php\nfunction add_numbers(int|string $left, int|string $right): int\n{\n    return $left + $right;\n}\n\nadd_numbers(2, '3'); // 5\n```", "```php\nfunction greatest(int ...$numbers): int\n{\n    $greatest = 0;\n    foreach ($numbers as $number) {\n        if ($number > $greatest) {\n            $greatest = $number;\n        }\n    }\n\n    return $greatest;\n}\n\ngreatest(7, 5, 12, 2, 99, 1, 415, 3, 7, 4);\n// 415\n```", "```php\nfunction greet(string $greeting, string ...$names): void\n{\n    foreach($names as $name) {\n        echo $greeting . ', ' . $name . PHP_EOL;\n    }\n}\n\ngreet('Hello', 'Tony', 'Steve', 'Wanda', 'Peter');\n// Hello, Tony\n// Hello, Steve\n// Hello, Wanda\n// Hello, Peter\n\ngreet('Welcome', 'Alice', 'Bob');\n// Welcome, Alice\n// Welcome, Bob\n```", "```php\nfunction greet(string $greeting, string $name): void\n{\n    echo $greeting . ', ' . $name  . PHP_EOL;\n}\n\n$params = ['Hello', 'world'];\ngreet(...$params);\n// Hello, world\n```", "```php\nfunction describe(float ...$values): array\n{\n    $min = min($values);\n    $max = max($values);\n    $mean = array_sum($values) / count($values);\n\n    $variance = 0.0;\n    foreach($values as $val) {\n        $variance += pow(($val - $mean), 2);\n    }\n    $std_dev = (float) sqrt($variance/count($values));\n\n    return [$min, $max, $mean, $std_dev];\n}\n\n$values = [1.0, 9.2, 7.3, 12.0];\nlist($min, $max, $mean, $std) = describe(...$values);\n```", "```php\n$jwt_parts = explode('.', $jwt);\n$header = base64_decode($jwt_parts[0]);\n$payload = base64_decode($jwt_parts[1]);\n$signature = base64_decode($jwt_parts[2]);\n```", "```php\nfunction decode_jwt(string $jwt): array\n{\n    $parts = explode('.', $jwt);\n\n    return array_map('base64_decode', $parts);\n}\n\nlist($header, $payload, $signature) = decode_jwt($jwt);\n```", "```php\n$counter = 0;\n\nfunction increment_counter()\n{\n    global $counter;\n\n    $counter += 1;\n}\n\nincrement_counter();\n\necho $counter; // 1\n```", "```php\n$apple = 'honeycrisp';\n\ninclude 'someotherscript.php'; ![1](assets/1.png)\n```", "```php\n$a = 1; ![1](assets/1.png)\n\nfunction example(): void\n{\n    echo $a . PHP_EOL; ![2](assets/2.png)\n    $a = 2; ![3](assets/3.png)\n\n    $b = 3; ![4](assets/4.png)\n}\n\nexample();\n\necho $a . PHP_EOL; ![5](assets/5.png)\necho $b . PHP_EOL; ![6](assets/6.png)\n```", "```php\n$a = 1;\n\nfunction example(): void\n{\n    global $a, $b; ![1](assets/1.png)\n\n    echo $a . PHP_EOL; ![2](assets/2.png)\n    $a = 2; ![3](assets/3.png)\n\n    $b = 3; ![4](assets/4.png)\n}\n\nexample();\n\necho $a . PHP_EOL; ![5](assets/5.png)\necho $b . PHP_EOL; ![6](assets/6.png)\n```", "```php\n$var = 'global';\n\nfunction example(): void\n{\n    $var = 'local';\n\n    echo 'Local variable: ' . $var . PHP_EOL;\n    echo 'Global variable: ' . $GLOBALS['var'] . PHP_EOL;\n}\n\nexample();\n// Local variable: local\n// Global variable: global\n```", "```php\nfunction increment()\n{\n    static $count = 0;\n\n    return $count++;\n}\n\necho increment(); // 0\necho increment(); // 1\necho increment(); // 2\n```", "```php\nfunction example(): void\n{\n    static $count = 0;\n\n    if ($count >= 3) {\n        $count = 0;\n        return;\n    }\n\n    $count += 1;\n\n    echo 'Running for loop number ' . $count . PHP_EOL;\n    example();\n}\n```", "```php\nfunction logger(string $message): void\n{\n    static $dbh = null;\n    if ($dbh === null) {\n        $dbh = new PDO(DATABASE_DSN, DATABASE_USER, DATABASE_PASSWORD);\n    }\n\n    $sql = 'INSERT INTO messages (message) VALUES (:message)';\n    $statement = $dbh->prepare($sql);\n\n    $statement->execute([':message', $message]);\n}\n\nlogger('This is a test'); ![1](assets/1.png)\nlogger('This is another message');![2](assets/2.png)\n```", "```php\n$greet = function($name) {\n    echo 'Hello, ' . $name . PHP_EOL;\n};\n\n$greet('World!');\n// Hello, World!\n```", "```php\n$some_value = 42;\n\n$foo = function() {\n    echo $some_value;\n};\n\n$bar = function() use ($some_value) {\n    echo $some_value;\n};\n\n$foo(); // Warning: Undefined variable\n\n$bar(); // 42\n```", "```php\n$reducer = function(?int $carry, int $item): int {\n    return $carry + $item;\n};\n\nfunction reduce(array $array, callable $callback, ?int $initial = null): ?int\n{\n    $acc = $initial;\n    foreach ($array as $item) {\n        $acc = $callback($acc, $item);\n    }\n\n    return $acc;\n}\n\n$list = [1, 2, 3, 4, 5];\n$sum = reduce($list, $reducer); // 15\n```", "```php\n$sum = array_reduce($list, $reducer); // 15\n```", "```php\nfunction multiplier(int $base): callable\n{\n    return function(int $subject) use ($base): int {\n        return $base * $subject;\n    };\n}\n\n$double = multiplier(2);\n$triple = multiplier(3);\n\n$double(6);  // 12\n$double(10); // 20\n$triple(3);  // 9\n$triple(12); // 36\n```", "```php\nfunction multiply(int $x, int $y): int ![1](assets/1.png)\n{\n    return $x * $y;\n}\n\nmultiply(7, 3); // 21 \nfunction curried_multiply(int $x): callable ![2](assets/2.png)\n{\n    return function(int $y) use ($x): int { ![3](assets/3.png)\n        return $x * $y; ![4](assets/4.png)\n    };\n}\n\ncurried_multiply(7)(3); // 21 ![5](assets/5.png)\n```", "```php\n$double = curried_multiply(2);\n$triple = curried_multiply(3);\n```", "```php\n$outer = 42;\n\n$anon = fn($add) => $outer + $add;\n\n$anon(5); // 47\n```", "```php\n$outer = 42;\n\n$anon = function($add) use ($outer) {\n    return $outer + $add;\n};\n\n$anon(5);\n```", "```php\n$input = ['5', '22', '1093', '2022'];\n\n$output = array_map(fn($x) => intval($x), $input);\n// $output = [5, 22, 1093, 2022]\n```", "```php\n$modulo = fn($x) => fn($y) => $y % $x;\n\n$mod_2 = $modulo(2);\n$mod_5 = $modulo(5);\n\n$mod_2(15); // 1\n$mod_2(20); // 0\n$mod_5(12); // 2\n$mod_5(15); // 0\n```", "```php\n$eq = fn($x, $y) => $x == $y;\n\n$eq(42, '42'); // true\n```", "```php\nconst MAIL_SENDER = 'wizard@oz.example';\nconst MAIL_SUBJECT = 'Incoming from the Wonderful Wizard';\n\nfunction send_email(string $to, string $message): void\n{\n    $headers = ['From' => MAIL_SENDER];\n\n    $success = mail($to, MAIL_SUBJECT, $message, $headers);\n\n    if (!$success) {\n        throw new Exception('The man behind the curtain is on break.');\n    }\n}\n\nsend_email('dorothy@kansas.example', 'Welcome to the Emerald City!');\n```", "```php\nfunction returns_scalar(): void\n{\n    return 1; ![1](assets/1.png)\n}\n\nfunction no_return(): void\n{\n    ![2](assets/2.png)\n}\n\nfunction empty_return(): void\n{\n    return; ![3](assets/3.png)\n}\n\nfunction returns_null(): void\n{\n    return null; ![4](assets/4.png)\n}\n```", "```php\nfunction redirect(string $url): never\n{\n    header(\"Location: $url\");\n    exit();\n}\n```", "```php\nfunction log_to_screen(string $message): never\n{\n    echo $message;\n}\n```"]