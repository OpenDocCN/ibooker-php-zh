["```php\nprint 'Hello, world!';\n// Hello, world!\n\nprint 'You\\'ve only got to escape single quotes and the \\\\ character.';\n// You've only got to escape single quotes and the \\ character.\n\nprint 'Variables like $blue are printed as literals.';\n// Variables like $blue are printed as literals.\n\nprint '\\110\\145\\154\\154\\157\\40\\127\\157\\162\\154\\144\\41';\n// \\110\\145\\154\\154\\157\\40\\127\\157\\162\\154\\144\\41\n```", "```php\nprint \"The value of \\$var is $var\"; ![1](assets/1.png)\nprint \"Properties of objects can be interpolated, too. {$obj->value}\"; ![2](assets/2.png)\nprint \"Prints the value of the variable returned by getVar(): {${getVar()}}\"; ![3](assets/3.png)\n```", "```php\n$poem = <<<POEM\nTo be or not to be,\nThat is the question\nPOEM;\n```", "```php\n$poem = <<<'POEM'\nTo be or not to be,\nThat is the question\nPOEM;\n```", "```php\nif (strpos($url, '/secret/') !== false) {\n    // A secret fragment was detected, run additional logic\n    // ...\n}\n```", "```php\nfunction count_occurrences($haystack, $needle)\n{\n    $occurrences = 0;\n    $offset = 0;\n    $pos = 0; ![1](assets/1.png)\n\n    do {\n        $pos = strpos($haystack, $needle, $offset);\n\n        if ($pos !== false) { ![2](assets/2.png)\n            $occurrences += 1;\n            $offset = $pos + 1; ![3](assets/3.png)\n        }\n    } while ($pos !== false); ![4](assets/4.png)\n\n    return $occurrences;\n}\n\n$str = 'How much wood would a woodchuck chuck if a woodchuck could chuck wood?';\n\nprint count_occurrences($str, 'wood'); // 4 print count_occurrences($str, 'nutria'); // 0\n```", "```php\n$string = 'eric.mann@cookbook.php';\n$start = strpos($string, '@');\n\n$domain = substr($string, $start + 1);\n```", "```php\nfunction substr(string $string, int $offset, ?int $length = null): string\n```", "```php\n$substring = substr('phpcookbook', -3); ![1](assets/1.png)\n$substring = substr('phpcookbook', -2); ![2](assets/2.png)\n$substring = substr('phpcookbook', -8, 4); ![3](assets/3.png)\n```", "```php\n$substring = substr('Four score and twenty', 11, 3); ![1](assets/1.png)\n$substring = substr('Four score and twenty', 99, 3); ![2](assets/2.png)\n$substring = substr('Four score and twenty', 20, 3); ![3](assets/3.png)\n```", "```php\n$substring = substr('Four score and twenty', 5); ![1](assets/1.png)\n$substring = substr('Four score and twenty', 5, -11); ![2](assets/2.png)\n```", "```php\n$string = '555-123-4567';\n$replace = 'xxx-xxx'\n\n$obfuscated = substr_replace($string, $replace, 0, strlen($replace));\n// xxx-xxx-4567\n```", "```php\nfunction substr_replace(\n    array|string $string,\n    array|string $replace,\n    array|int $offset,\n    array|int|null $length = null\n): string\n```", "```php\n$phones = [\n    '555-555-5555',\n    '555-123-1234',\n    '555-991-9955'\n];\n\n$obfuscated = substr_replace($phones, 'xxx-xxx', 0, 7);\n\n// xxx-xxx-5555\n// xxx-xxx-1234\n// xxx-xxx-9955\n```", "```php\n$phones = [\n    '555-555-5555',\n    '555-123-1234',\n    '555-991-9955'\n];\n\n$offsets = [0, 0, 4];\n\n$replace = [\n    'xxx-xxx',\n    'xxx-xxx',\n    'xxx-xxxx'\n];\n\n$lengths = [7, 7, 8];\n\n$obfuscated = substr_replace($phones, $replace, $offsets, $lengths);\n\n// xxx-xxx-5555\n// xxx-xxx-1234\n// 555-xxx-xxxx\n```", "```php\n$string = 'How much wood could a Woodchuck chuck if a woodchuck could chuck wood?';\n\n$beaver = str_replace('woodchuck', 'beaver', $string); ![1](assets/1.png)\n$ibeaver = str_ireplace('woodchuck', 'beaver', $string); ![2](assets/2.png)\n```", "```php\n$capitals = 0;\n\n$string = 'The Carriage held but just Ourselves - And Immortality';\nfor ($i = 0; $i < strlen($string); $i++) {\n    if (ctype_upper($string[$i])) {\n        $capitals += 1;\n    }\n}\n\n// $capitals = 5\n```", "```php\n$string = 'A new recipe made my coffee stronger this morning';\n$string[31] = 'a';\n\n// A new recipe made my coffee stranger this morning\n```", "```php\n$capitals = 0;\n\n$string = 'The Carriage held but just Ourselves - And Immortality';\n$stringArray = str_split($string);\nforeach ($stringArray as $char) {\n    if (ctype_upper($char)) {\n        $capitals += 1;\n    }\n}\n\n// $capitals = 5\n```", "```php\n$str = 'The Carriage held but just Ourselves - And Immortality';\n\n$caps = array_reduce(str_split($str), fn($c, $i) => ctype_upper($i) ? $c+1: $c, 0);\n```", "```php\nfunction random_string($length = 16)\n{\n    $characters = '0123456789abcdefghijklmnopqrstuvwxyz';\n\n    $string = '';\n    while (strlen($string) < $length) {\n        $string .= $characters[random_int(0, strlen($characters) - 1)];\n    }\n    return $string;\n}\n```", "```php\n$string = random_bytes(16); ![1](assets/1.png)\n\n$hex = bin2hex($string); ![2](assets/2.png)\n$base64 = base64_encode($string); ![3](assets/3.png)\n```", "```php\necho \"There are {$_POST['cats']} cats and {$_POST['dogs']} outside.\";\necho \"Your username is {strlen($username)} characters long.\";\necho \"The car is painted {$car->color}.\";\n```", "```php\necho sprintf('There are %d cats and %d dogs.', $_POST['cats'], $_POST['dogs']);\n```", "```php\n$first = 'To be or not to be';\n$second = 'That is the question';\n\n$line = $first . ' ' . $second;\n```", "```php\nprint 'String ' . 2; ![1](assets/1.png)\nprint 2 . ' number'; ![2](assets/2.png)\nprint 'Boolean ' . true; ![3](assets/3.png)\nprint 2 . 3; ![4](assets/4.png)\n```", "```php\n$words = [\n    'Whose',\n    'woods',\n    'these',\n    'are',\n    'I',\n    'think',\n    'I',\n    'know'\n];\n\n$option1 = $words[0] . ' ' . $words[1] . ' ' . $words[2] . ' ' . $words[3] .\n         ' ' . $words[4] . ' ' . $words[5] . ' ' . $words[6] .\n         ' ' . $words[7]; ![1](assets/1.png)\n\n$option2 = '';\nforeach ($words as $word) {\n    $option2 .= ' ' . $word; ![2](assets/2.png)\n}\n$option2 = ltrim($option2); ![3](assets/3.png)\n```", "```php\n$words = [\n    'Whose',\n    'woods',\n    'these',\n    'are',\n    'I',\n    'think',\n    'I',\n    'know'\n];\n\n$string = implode(' ', $words);\n```", "```php\n$unpacked = unpack('S1', 'Hi'); // [1 => 26952]\n```", "```php\n$packed = pack('S13', 72, 101, 108, 108, 111, 44, 32, 119, 111,\n               114, 108, 100, 33); // 'Hello, world!'\n```", "```php\n$unpacked = unpack('S*', 'Hi'); // [1 => 26952]\n$packed = pack('S*', 72, 101, 108, 108, 111, 44, 32, 119, 111,\n               114, 108, 100, 33); // 'Hello, world!'\n```", "```php\n$ascii = 'PHP Cookbook';\n\n$chars = [];\nfor ($i = 0; $i < strlen($ascii); $i++) {\n    $chars[] = ord($ascii[$i]);\n}\n\nvar_dump($chars);\n```", "```php\n$ascii = 'PHP Cookbook';\n$chars = unpack('C*', $ascii);\n\nvar_dump($chars);\n```", "```php\narray(12) {\n  [1]=>\n  int(80)\n  [2]=>\n  int(72)\n  [3]=>\n  int(80)\n  [4]=>\n  int(32)\n  [5]=>\n  int(67)\n  [6]=>\n  int(111)\n  [7]=>\n  int(111)\n  [8]=>\n  int(107)\n  [9]=>\n  int(98)\n  [10]=>\n  int(111)\n  [11]=>\n  int(111)\n  [12]=>\n  int(107)\n}\n```"]