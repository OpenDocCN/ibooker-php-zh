["```php\n<html>\n <head>\n <title>User Information</title>\n </head>\n\n <body>\n <?php if (!empty($_GET['name'])) {\n // do something with the supplied values ?>\n\n <p><font face=\"helvetica,arial\">Thank you for filling out the form,\n <?php echo $_GET['name'] ?>.</font></p>\n <?php }\nelse { ?>\n <p><font face=\"helvetica,arial\">Please enter the following information:\n </font></p>\n\n <form action=\"<?php echo $_SERVER['PHP_SELF'] ?>\">\n <table>\n <tr>\n <td>Name:</td>\n <td>\n <input type=\"text\" name=\"name\" />\n <input type=\"submit\" />\n </td>\n </tr>\n </table>\n </form>\n<?php } ?>\n</body>\n</html>\n```", "```php\n<html>\n <head>\n <title>User Information</title>\n </head>\n\n <body>\n <p>Please enter the following information:</p>\n\n <form action=\"{DESTINATION}\">\n <table>\n <tr>\n <td>Name:</td>\n <td><input type=\"text\" name=\"name\" /></td>\n </tr>\n </table>\n </form>\n </body>\n</html>\n```", "```php\n<html>\n <head>\n <title>Thank You</title>\n </head>\n\n <body>\n <p>Thank you for filling out the form, {NAME}.</p>\n </body>\n</html>\n```", "```php\n<?php\n$bindings[\"DESTINATION\"] = $_SERVER[\"PHP_SELF\"];\n$name = $_GET[\"name\"];\n\nif (!empty($name)) {\n // do something with the supplied values\n $template = \"thankyou.template\";\n $bindings[\"NAME\"] = $name;\n}\nelse {\n $template = \"user.template\";\n}\n\necho fillTemplate($template, $bindings);\n```", "```php\n<?php\nfunction fillTemplate($name, $values = array(), $unhandled = \"delete\") {\n $templateFile = \"{$_SERVER['DOCUMENT_ROOT']}/templates/{$name}\";\n\n if ($file = fopen($templateFile, 'r')) {\n $template = fread($file, filesize($templateFile));\n fclose($file);\n }\n\n $keys = array_keys($values);\n\n foreach ($keys as $key) {\n // look for and replace the key everywhere it occurs in the template\n $template = str_replace(\"{{$key}}\", $values[$key], $template);\n }\n\n if ($unhandled == \"delete\") {\n // remove remaining keys\n $template = preg_replace(\"/{[^ }]*}/i\", \"\", $template);\n }\n else if ($unhandled == \"comment\") {\n // comment remaining keys\n $template = preg_replace(\"/{([^ }]*)}/i\", \"<!-- \\\\1 undefined -->\", $template);\n }\n\n return $template;\n}\n```", "```php\nob_start([*`callback`*]);\n```", "```php\n$len = ob_get_length();\n$contents = ob_get_contents();\n```", "```php\nob_start();\n phpinfo();\n $phpinfo = ob_get_contents();\nob_end_clean();\n\nif (strpos($phpinfo, \"module_gd\") === false) {\n echo \"You do not have GD Graphics support in your PHP, sorry.\";\n}\nelse {\n echo \"Congratulations, you have GD Graphics support!\";\n}\n```", "```php\nif (function_exists(\"imagecreate\")) {\n // do something useful\n}\n```", "```php\nob_start(); ?>\n\nVisit <a href=\"http://www.yoursite.com/foo/bar\">our site</a> now!\n\n<?php $contents = ob_get_contents();\nob_end_clean();\n\n```", "```php\necho str_replace(\"`http://www.yoursite.com/`\",\n\"`http://www.mysite.com/`\", $contents);\n```", "```php\n?>\n\nVisit <a href=\"http://www.mysite.com/foo/bar\">our site</a> now!\n```", "```php\nfunction rewrite($text) {\n```", "```php\n return str_replace(\"`http://www.yoursite.com/`\",\n\"`http://www.mysite.com/`\", $text);\n```", "```php\n}\n\nob_start(\"rewrite\"); ?>\n\nVisit <a href=\"http://www.yoursite.com/foo/bar\">our site</a> now!\nVisit <a href=\"http://www.mysite.com/foo/bar\">our site</a> now!\n```", "```php\nob_start(\"ob_gzhandler\");\n```", "```php\n$ /usr/local/apache/bin/ab -c 10 -n 1000 http://localhost/info.php\n```", "```php\nThis is ApacheBench, Version 1.3d <$Revision: 1.2 $> apache-1.3\nCopyright (c) 1996 Adam Twiss, Zeus Technology Ltd,\nhttp://www.zeustech.net/\nCopyright (c) 1998-2001 The Apache Group, http://www.apache.org/\n\nBenchmarking localhost (be patient)\nCompleted 100 requests\nCompleted 200 requests\nCompleted 300 requests\nCompleted 400 requests\nCompleted 500 requests\nCompleted 600 requests\nCompleted 700 requests\nCompleted 800 requests\nCompleted 900 requests\nFinished 1000 requests\nServer Software: Apache/1.3.22\nServer Hostname: localhost\nServer Port: 80\n\nDocument Path: /info.php\nDocument Length: 49414 bytes\n\nConcurrency Level: 10\nTime taken for tests: 8.198 seconds\nComplete requests: 1000\nFailed requests: 0\nBroken pipe errors: 0\nTotal transferred: 49900378 bytes\nHTML transferred: 49679845 bytes\nRequests per second: 121.98 [#/sec] (mean)\nTime per request: 81.98 [ms] (mean)\nTime per request: 8.20 [ms] (mean, across all concurrent requests)\nTransfer rate: 6086.90 [Kbytes/sec] received\n\nConnnection Times (ms)\n min mean[+/-sd] median max\nConnect: 0 12 16.9 1 72\nProcessing: 7 69 68.5 58 596\nWaiting: 0 64 69.4 50 596\nTotal: 7 81 66.5 79 596\n\nPercentage of the requests served within a certain time (ms)\n 50% 79\n 66% 80\n 75% 83\n 80% 84\n 90% 158\n 95% 221\n 98% 268\n 99% 288\n 100% 596 (last request)\n```", "```php\nob_start();\n$start = microtime(true);\n\nphpinfo();\n\n$end = microtime(true);\nob_end_clean();\n\necho \"phpinfo() took \" . ($end - $start) . \" seconds to run.\\n\";\n```", "```php\nrequire_once 'Benchmark/Timer.php';\n\n$timer = new Benchmark_Timer;\n\n$timer->start();\n sleep(1);\n $timer->setMarker('Marker 1');\n sleep(2);\n$timer->stop();\n\n$profiling = $timer->getProfiling();\n\nforeach ($profiling as $time) {\n echo $time[\"name\"] . \": \" . $time[\"diff\"] . \"<br>\\n\";\n}\n\necho \"Total: \" . $time[\"total\"] . \"<br>\\n\";\n```", "```php\nStart: -\nMarker 1: 1.0006979703903\nStop: 2.0100029706955\nTotal: 3.0107009410858\n```", "```php\n     for ($i = 0; $i < count($array); $i++) { /* do something */ }\n    ```", "```php\n     $num = count($array);\n     for ($i = 0; $i < $num; $i++) { /* do something */ }\n    ```", "```php\n    for ($i = \"0\"; $i < \"10\"; $i++) // bad\n    for ($i = 0; $i < 10; $i++) // good\n    ```"]