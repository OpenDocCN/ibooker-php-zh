["```php\n<?php\n```", "```php\n?>\n```", "```php\n<?php\n  echo \"Hello world\";\n?>\n```", "```php\n<?\n  echo \"Hello world\";\n?>\n```", "```php\n// This is a comment\n```", "```php\n// echo \"X equals $x\";\n```", "```php\n$x += 10; // Increment $x by 10\n```", "```php\n<?php\n/* This is a section\n of multiline comments\n which will not be\n interpreted */\n?>\n```", "```php\n$x += 10;\n```", "```php\n<?php\n  $mycounter = 1;\n  $mystring  = \"Hello\";\n  $myarray   = array(\"One\", \"Two\", \"Three\");\n?>\n```", "```php\n$username = \"Fred Smith\";\n```", "```php\necho $username;\n```", "```php\n$current_user = $username;\n```", "```php\n<?php // test1.php\n  $username = \"Fred Smith\";\n  echo $username;\n  echo \"<br>\";\n  $current_user = $username;\n  echo $current_user;\n?>\n```", "```php\nhttp://localhost/test1.php\n```", "```php\nhttp://localhost:8080/test1.php\n```", "```php\n$count = 17;\n```", "```php\n$count = 17.5;\n```", "```php\n$team = array('Bill', 'Mary', 'Mike', 'Chris', 'Anne');\n```", "```php\narray();\n```", "```php\necho $team[3]; // Displays the name Chris\n```", "```php\n<?php\n  $oxo = array(array('x', ' ', 'o'),\n               array('o', 'o', 'x'),\n               array('x', 'o', ' '));\n?>\n```", "```php\necho $oxo[1][2];\n```", "```php\necho 6 + 2;\n```", "```php\n$count += 1;\n```", "```php\n$count = $count + 1;\n\n```", "```php\nif ($hour > 12 && $hour < 14) dolunch();\n```", "```php\n$html = file_get_contents($site) `or` die(\"Cannot download from $site\");\n```", "```php\n$ingredient = $ammonia xor $bleach;\n```", "```php\n$x += 10;\n```", "```php\n$y â€“= 10;\n```", "```php\n++$x;\n--$y;\n```", "```php\nif (++$x == 10) echo $x;\n```", "```php\nif ($y-- == 0) echo $y;\n```", "```php\necho \"You have \" . $msgs . \" messages.\";\n```", "```php\nYou have 5 messages.\n```", "```php\n$bulletin .= $newsflash;\n```", "```php\n$info = 'Preface variables with a $ like this: $variable';\n```", "```php\necho \"This week $count people have viewed your profile\";\n```", "```php\n$text = 'My spelling's atroshus'; // Erroneous syntax\n```", "```php\n$text = 'My spelling\\'s still atroshus';\n```", "```php\n$text = \"She wrote upon it, \\\"Return to sender\\\".\";\n```", "```php\n$heading = \"Date\\tName\\tPayment\";\n```", "```php\n<?php\n  $author = \"Steve Ballmer\";\n\n  echo \"Developers, developers, developers, developers, developers,\n developers, developers, developers, developers!\n\n - $author.\";\n?>\n```", "```php\n<?php\n  $author = \"Bill Gates\";\n\n  $text = \"Measuring programming progress by lines of code is like\n Measuring aircraft building progress by weight.\n\n - $author.\";\n?>\n```", "```php\n<?php\n  $author = \"Brian W. Kernighan\";\n\n  echo <<<_END\n Debugging is twice as hard as writing the code in the first place.\n Therefore, if you write the code as cleverly as possible, you are,\n by definition, not smart enough to debug it.\n\n - $author.\n_END;\n?>\n```", "```php\n<?php\n  $author = \"Scott Adams\";\n\n  $out = <<<_END\n Normal people believe that if it ain't broke, don't fix it.\n Engineers believe that if it ain't broke, it doesn't have enough\n features yet.\n\n - $author.\n_END;\necho $out;\n?>\n```", "```php\n<?php\n  $number = 12345 * 67890;\n  echo substr($number, 3, 1);\n?>\n```", "```php\n<?php\n  $pi     = \"3.1415927\";\n  $radius = 5;\n  echo $pi * ($radius * $radius);\n?>\n```", "```php\ndefine(\"ROOT_LOCATION\", \"/usr/local/www/\");\n```", "```php\n$directory = ROOT_LOCATION;\n```", "```php\necho \"This is line \" . __LINE__ . \" of file \" . __FILE__;\n```", "```php\n$b ? print \"TRUE\" : print \"FALSE\";\n```", "```php\n<?php\n  function longdate($timestamp)\n  {\n    return date(\"l F jS Y\", $timestamp);\n  }\n?>\n```", "```php\necho longdate(time());\n```", "```php\necho longdate(time() - 17 * 24 * 60 * 60);\n```", "```php\n<?php\n  function longdate($timestamp)\n  {\n    $temp = date(\"l F jS Y\", $timestamp);\n    return \"The date is $temp\";\n  }\n?>\n```", "```php\n<?php\n  $temp = \"The date is \";\n  echo longdate(time());\n\n  function longdate($timestamp)\n  {\n    return $temp . date(\"l F jS Y\", $timestamp);\n  }\n?>\n```", "```php\n<?php\n  $temp = \"The date is \";\n  echo $temp . longdate(time());\n\n  function longdate($timestamp)\n  {\n    return date(\"l F jS Y\", $timestamp);\n  }\n?>\n```", "```php\n<?php\n  $temp = \"The date is \";\n  echo longdate($temp, time());\n\n  function longdate($text, $timestamp)\n  {\n    return $text . date(\"l F jS Y\", $timestamp);\n  }\n?>\n```", "```php\nglobal $is_logged_in;\n```", "```php\n<?php\n  function test()\n  {\n    static $count = 0;\n    echo $count;\n    $count++;\n  }\n?>\n```", "```php\n<?php\n  static $int = 0;         // Allowed\n  static $int = 1+2;       // Correct (as of PHP 5.6)\n  static $int = sqrt(144); // Disallowed\n?>\n```", "```php\n$came_from = $_SERVER['HTTP_REFERER'];\n```", "```php\n$came_from = htmlentities($_SERVER['HTTP_REFERER']);\n```"]