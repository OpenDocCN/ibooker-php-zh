["```php\n<?php\nif ($argc !== 2) {\n    die('Invalid number of arguments.');\n}\n\n$name = htmlspecialchars($argv[1]);\n\necho \"Hello, {$name}!\" . PHP_EOL;\n```", "```php\n% php script.php World\n```", "```php\n% php script.php \"dear reader\"\n```", "```php\n<?php\n$optionIndex = 0;\n\n$options = getopt('c', ['name:'], $optionIndex); ![1](assets/1.png)\n\n$firstLine = \"Hello, {$options['name']}!\" . PHP_EOL; ![2](assets/2.png)\n\n$rest = implode(' ', array_slice($argv, $optionIndex)); ![3](assets/3.png)\n\nif (array_key_exists('c', $options)) { ![4](assets/4.png)\n    $firstLine = strtoupper($firstLine);\n    $rest = strtoupper($rest);\n}\n\necho $firstLine;\necho $rest . PHP_EOL;\n```", "```php\n% php getopt.php -c --name Reader This is fun\nHELLO, READER!\nTHIS IS FUN\n%\n```", "```php\necho 'Enter your name: ';\n\n$name = trim(fgets(STDIN, 1024));\n\necho \"Welcome, {$name}!\" . PHP_EOL;\n```", "```php\necho 'Enter your name: ';\n\n$name = trim(fgets(fopen('php://stdin', 'r'), 1024));\n\necho \"Welcome, {$name}!\" . PHP_EOL;\n```", "```php\n$name = readline('Enter your name: ');\n\necho \"Welcome, {$name}!\" . PHP_EOL;\n```", "```php\necho \"\\e[0;34;41mHappy Independence Day!\\e[0m\" . PHP_EOL;\n```", "```php\n\\e[{foreground};{background}m\n```", "```php\nnamespace App\\Command;\n\nuse Symfony\\Component\\Console\\Attribute\\AsCommand;\nuse Symfony\\Component\\Console\\Command\\Command;\nuse Symfony\\Component\\Console\\Input\\InputArgument;\nuse Symfony\\Component\\Console\\Input\\InputInterface;\nuse Symfony\\Component\\Console\\Output\\OutputInterface;\n\n#[AsCommand(name: 'app:hello-world')]\nclass HelloWorldCommand extends Command\n{\n    protected static $defaultDescription = 'Greets the user.';\n\n    // ...\n    protected function configure(): void\n    {\n        $this\n            ->setHelp('This command greets a user...')\n            ->addArgument('name', InputArgument::REQUIRED, 'User name');\n    }\n\n    protected function execute(InputInterface $input, OutputInterface $output): int\n    {\n        $output->writeln(\"Hello, {$input->getArgument('name')}\");\n        return Command::SUCCESS;\n    }\n}\n```", "```php\n#!/usr/bin/env php\n<?php\n// application.php\n\nrequire __DIR__.'/vendor/autoload.php';\n\nuse Symfony\\Component\\Console\\Application;\n\n$application = new Application();\n\n$application->add(new App\\Command\\HelloWorldCommand());\n\n$application->run();\n```", "```php\n% ./application.php app:hello-world User\n```", "```php\n% composer require symfony/console\n```", "```php\n// ...\n\n#[AsCommand(name: 'app:book')]\nclass BookCommand extends Command\n{\n    public function execute(InputInterface $input, OutputInterface $output): int\n    {\n        $table = new Table($output);\n        $table\n            ->setHeaders(['ISBN', 'Title', 'Author'])\n            ->setRows([\n                [\n                    '978-1-940111-61-2',\n                    'Security Principles for PHP Applications',\n                    'Eric Mann'\n                ],\n                ['978-1-098-12132-7', 'PHP Cookbook', 'Eric Mann'],\n            ])\n        ;\n        $table->render();\n\n        return Command::SUCCESS;\n    }\n}\n```", "```php\n+-------------------+------------------------------------------+-----------+\n| ISBN              | Title                                    | Author    |\n+-------------------+------------------------------------------+-----------+\n| 978-1-940111-61-2 | Security Principles for PHP Applications | Eric Mann |\n| 978-1-098-12132-7 | PHP Cookbook                             | Eric Mann |\n+-------------------+------------------------------------------+-----------+\n```", "```php\n% php -a\n```", "```php\n% php -a ![1](assets/1.png)\n\nphp > #cli.prompt=repl ~> ![2](assets/2.png)\nrepl ~> ![3](assets/3.png)\n```", "```php\nphp > #cli.prompt=\\e[032m\\v \\e[031m\\b \\e[34m\\> \\e[0m\n```"]