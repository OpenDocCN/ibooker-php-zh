["```php\necho(\"hello, world\");\nECHO(\"hello, world\");\nEcHo(\"hello, world\");\n```", "```php\necho \"Hello, world\";\nmyFunction(42, \"O'Reilly\");\n$a = 1;\n$name = \"Elphaba\";\n$b = $a / 25.0;\nif ($a == $b) {\n echo \"Rhyme? And Reason?\";\n}\n```", "```php\nif ($needed) {\n echo \"We must have it!\"; // semicolon required here\n} // no semicolon required here after the brace\n```", "```php\n<?php\nif ($a == $b) {\n echo \"Rhyme? And Reason?\";\n}\necho \"Hello, world\" // no semicolon required before closing tag\n?>\n```", "```php\nraisePrices($inventory, $inflation, $costOfLiving, $greed);\n```", "```php\nraisePrices (\n $inventory ,\n $inflation ,\n $costOfLiving ,\n $greed\n) ;\n```", "```php\nraisePrices($inventory,$inflation,$costOfLiving,$greed);\n```", "```php\n$x = 17; // store 17 into the variable $x\n```", "```php\n// convert &#nnn; entities into characters\n\n$text = preg_replace('/&#([0-9])+;/', \"chr('\\\\1')\", $text);\n```", "```php\n#######################\n## Cookie functions\n#######################\n```", "```php\nif ($doubleCheck) {\n # create an HTML form requesting that the user confirm the action\n echo confirmationForm();\n}\n```", "```php\n$value = $p * exp($r * $t); # calculate compounded interest\n```", "```php\n<?php $d = 4; # Set $d to 4\\. ?> Then another <?php echo $d; ?>\nThen another 4\n```", "```php\n////////////////////////\n// Cookie functions\n////////////////////////\n\nif ($doubleCheck) {\n // create an HTML form requesting that the user confirm the action\n echo confirmationForm();\n}\n\n$value = $p * exp($r * $t); // calculate compounded interest\n\n<?php $d = 4; // Set $d to 4\\. ?> Then another <?php echo $d; ?>\nThen another 4\n```", "```php\n/* In this section, we take a bunch of variables and\n assign numbers to them. There is no real reason to\n do this, we're just having fun.\n*/\n$a = 1;\n$b = 2;\n$c = 3;\n$d = 4;\n```", "```php\n/* These comments can be mixed with code too,\nsee? */ $e = 5; /* This works just fine. */\n```", "```php\n<?php\n$l = 12;\n$m = 13;\n/* A comment begins here\n?>\n<p>Some stuff you want to be HTML.</p>\n<?= $n = 14; ?>\n*/\necho(\"l=$l m=$m n=$n\\n\");\n?><p>Now <b>this</b> is regular HTML...</p>\n`l=12 m=13 n=`\n`<p``>``Now` `<b``>``this``</b>` `is regular HTML...``</p>`\n```", "```php\n/* There are no\n special indenting or spacing\n rules that have to be followed, either.\n\n */\n```", "```php\n$f = 6;\n/*\n$g = 7; # This is a different style of comment\n$h = 8;\n*/\n```", "```php\n$i = 9;\n/*\n$j = 10; /* This is a comment */\n$k = 11;\nHere is some comment text.\n*/\n```", "```php\n2001\n0xFE\n1.4142\n\"Hello World\"\n'Hi'\ntrue\nnull\n```", "```php\n$bill\n$head_count\n$MaximumForce\n$I_HEART_PHP\n$_underscore\n$_int\n```", "```php\n$not valid\n$|\n$3wa\n```", "```php\n$hot_stuff $Hot_stuff $hot_Stuff $HOT_STUFF\n```", "```php\ntally\nlist_all_users\ndeleteTclFiles\nLOWERCASE_IS_FOR_WIMPS\n_hide\n```", "```php\nhowdy HoWdY HOWDY HOWdy howdy\n```", "```php\nPerson\naccount\n```", "```php\ndefine('PUBLISHER', \"O'Reilly Media\");\necho PUBLISHER;\n```", "```php\n1998\n−641\n+33\n```", "```php\n0755 // decimal 493\n+010 // decimal 8\n```", "```php\n0xFF // decimal 255\n0x10 // decimal 16\n–0xDAD1 // decimal −56017\n```", "```php\n0b01100000 // decimal 96\n0b00000010 // decimal 2\n-0b10 // decimal -2\n```", "```php\nif (is_int($x)) {\n // $x is an integer\n}\n```", "```php\n3.14\n0.017\n-7.1\n```", "```php\n0.314E1 // 0.314*10^1, or 3.14\n17.0E-3 // 17.0*10^(-3), or 0.017\n```", "```php\nif (intval($a * 1000) == intval($b * 1000)) {\n // numbers equal to three decimal places\n}\n```", "```php\nif (is_float($x)) {\n // $x is a floating-point number\n}\n```", "```php\n'big dog'\n\"fat hog\"\n```", "```php\n$name = \"Guido\";\necho \"Hi, $name <br/>\";\necho 'Hi, $name';\n`Hi``,` `Guido`\n`Hi``,` `$name`\n```", "```php\n$dosPath = 'C:\\\\WINDOWS\\\\SYSTEM';\n$publisher = 'Tim O\\'Reilly';\necho \"$dosPath $publisher\";\nC:\\WINDOWS\\SYSTEM Tim O'Reilly\n```", "```php\nif ($a == $b) {\n echo \"a and b are equal\";\n}\n```", "```php\nif (is_string($x)) {\n // $x is a string\n}\n```", "```php\nif ($alive) { ... }\n```", "```php\n$x = 5; // $x has a true value\n$x = true; // clearer way to write it\n$y = \"\"; // $y has a false value\n$y = false; // clearer way to write it\n```", "```php\nif (is_bool($x)) {\n // $x is a Boolean\n}\n```", "```php\n$person[0] = \"Edison\";\n$person[1] = \"Wankel\";\n$person[2] = \"Crapper\";\n\n$creator['Light bulb'] = \"Edison\";\n$creator['Rotary Engine'] = \"Wankel\";\n$creator['Toilet'] = \"Crapper\";\n```", "```php\n$person = array(\"Edison\", \"Wankel\", \"Crapper\");\n$creator = array('Light bulb' => \"Edison\",\n 'Rotary Engine' => \"Wankel\",\n 'Toilet' => \"Crapper\");\n```", "```php\nforeach ($person as $name) {\n echo \"Hello, {$name}<br/>\";\n}\n\nforeach ($creator as $invention => $inventor) {\n echo \"{$inventor} invented the {$invention}<br/>\";\n}\n`Hello``,` `Edison`\n`Hello``,` `Wankel`\n`Hello``,` `Crapper`\n`Edison` `created` `the` `Light` `bulb`\n`Wankel` `created` `the` `Rotary` `Engine`\n`Crapper` `created` `the` `Toilet`\n```", "```php\n sort($person);\n// $person is now array(\"Crapper\", \"Edison\", \"Wankel\") \n asort($creator);\n// $creator is now array('Toilet' => \"Crapper\", // 'Light bulb' => \"Edison\", // 'Rotary Engine' => \"Wankel\");\n```", "```php\nif (is_array($x)) {\n // $x is an array\n}\n```", "```php\nclass Person\n{\n public $name = '';\n\n function name ($newname = NULL)\n {\n if (!is_null($newname)) {\n $this->name = $newname;\n }\n\n return $this->name;\n }\n}\n```", "```php\n$ed = new Person;\n$ed->name('Edison');\necho \"Hello, {$ed->name} <br/>\";\n$tc = new Person;\n$tc->name('Crapper');\necho \"Look out below {$tc->name} <br/>\";\n`Hello``,` `Edison`\n`Look` `out` `below` `Crapper`\n```", "```php\nif (is_object($x)) {\n // $x is an object\n}\n```", "```php\n$res = database_connect(); // fictitious database connect function\ndatabase_query($res);\n\n$res = \"boo\";\n// database connection automatically closed because $res is redefined\n```", "```php\nfunction search() {\n $res = database_connect();\n database_query($res);\n}\n```", "```php\nif (is_resource($x)) {\n // $x is a resource\n}\n```", "```php\n$callback = function()\n{\n echo \"callback achieved\";\n};\n\ncall_user_func($callback);\n```", "```php\n$aleph = \"beta\";\n$aleph = null; // variable's value is gone\n$aleph = Null; // same\n$aleph = NULL; // same\n```", "```php\nif (is_null($x)) {\n // $x is NULL\n}\n```", "```php\n$name\n$Age\n$_debugging\n$MAXIMUM_IMPACT\n```", "```php\n$what = \"Fred\";\n$what = 35;\n$what = array(\"Fred\", 35, \"Wilma\");\n```", "```php\n$day = 60 * 60 * 24;\necho \"There are {$day} seconds in a day.\";\n`There` `are` `86400` `seconds` `in` `a` `day``.`\n```", "```php\nif ($uninitializedVariable === NULL) {\n echo \"Yes!\";\n}\n`Yes``!`\n```", "```php\n$foo = \"bar\";\n$$foo = \"baz\";\n```", "```php\n$black =& $white;\n```", "```php\n$bigLongVariableName = \"PHP\";\n$short =& $bigLongVariableName;\n$bigLongVariableName .= \" rocks!\";\nprint \"\\$short is $short <br/>\";\nprint \"Long is $bigLongVariableName\";\n`$short` `is` `PHP` `rocks``!`\n`Long` `is` `PHP` `rocks``!`\n\n$short = \"Programming $short\";\nprint \"\\$short is $short <br/>\";\nprint \"Long is $bigLongVariableName\";\n`$short` `is` `Programming` `PHP` `rocks``!`\n`Long` `is` `Programming` `PHP` `rocks``!`\n```", "```php\n$white = \"snow\";\n$black =& $white;\nunset($white);\nprint $black;\n`snow`\n```", "```php\nfunction &retRef() // note the &\n{\n $var = \"PHP\";\n\n return $var;\n}\n\n$v =& retRef(); // note the &\n```", "```php\nfunction updateCounter()\n{\n $counter++;\n}\n\n$counter = 10;\nupdateCounter();\n\necho $counter;\n`10`\n```", "```php\nfunction updateCounter()\n{\n global $counter;\n $counter++;\n}\n\n$counter = 10;\nupdateCounter();\necho $counter;\n`11`\n```", "```php\nfunction updateCounter()\n{\n $GLOBALS[‘counter’]++;\n}\n\n$counter = 10;\nupdateCounter();\necho $counter;\n`11`\n```", "```php\nfunction updateCounter()\n{\n static $counter = 0;\n $counter++;\n\n echo \"Static counter is now {$counter}<br/>\";\n}\n\n$counter = 10;\nupdateCounter();\nupdateCounter();\n\necho \"Global counter is {$counter}\";\n`Static` `counter` `is` `now` `1`\n`Static` `counter` `is` `now` `2`\n`Global` `counter` `is` `10`\n```", "```php\nfunction greet($name)\n{\n echo \"Hello, {$name}\";\n}\n\ngreet(\"Janet\");\n`Hello``,` `Janet`\n```", "```php\n$worker = array(\"Fred\", 35, \"Wilma\");\n$other = $worker; // array isn't duplicated in memory\n```", "```php\n$worker[1] = 36; // array is copied in memory, value changed\n```", "```php\n$s1 = isset($name); // $s1 is false\n$name = \"Fred\";\n$s2 = isset($name); // $s2 is true\n```", "```php\n$name = \"Fred\";\nunset($name); // $name is NULL\n```", "```php\n2 + 4 * 3\n```", "```php\n(2 + 4) * 3\n```", "```php\n$x + 2 / $y >= 4 ? $z : $x << $z\n```", "```php\n2 / 2 * 2\n```", "```php\n2 / (2 * 2) // 0.5\n(2 / 2) * 2 // 2\n```", "```php\n3 . 2.74 // gives the string 32.74\n```", "```php\n\"9 Lives\" - 1; // 8 (int)\n\"3.14 Pies\" * 2; // 6.28 (float)\n\"9\\. Lives\" - 1; // 8 (float / double)\n\"1E3 Points of Light\" + 1; // 1001 (float)\n```", "```php\n$var1 = 5;\n$var2 = 3;\necho $var1 ** $var2; // outputs 125\n```", "```php\n$n = 5;\n$s = 'There were ' . $n . ' ducks.';\n// $s is 'There were 5 ducks'\n```", "```php\n$var1 = 5;\n$var2 = 65;\n\n`echo` $var1 <=> $var2 ; // outputs -1 `echo` $var2 <=> $var1 ; // outputs 1\n```", "```php\n$var1 = null;\n$var2 = 31;\n\necho $var1 ?? $var2 ; //outputs 31\n```", "```php\n 111101101\n& 110111001\n ---------\n 110101001\n```", "```php\n$result = $flag and mysql_connect();\n```", "```php\n$result = fopen($filename) or exit();\n```", "```php\n$a = \"5\";\n$b = (int) $a;\n```", "```php\n$a = \"5\";\n$a = (int) $a; // now $a holds an integer\n```", "```php\nclass Person\n{\n var $name = \"Fred\";\n var $age = 35;\n}\n\n$o = new Person;\n$a = (array) $o;\n\nprint_r($a);\n`Array` `(` `[``name``]` `=>` `Fred` `[``age``]` `=>` `35``)`\n```", "```php\n$a = array('name' => \"Fred\", 'age' => 35, 'wife' => \"Wilma\");\n$o = (object) $a;\necho $o->name;\n`Fred`\n```", "```php\n$a = 5;\n$b = 10;\n$c = ($a = $b);\n```", "```php\n$listing = `ls -ls /tmp`;\necho $listing;\n```", "```php\n<a href=\"<? echo $url; ?>\"><? echo $linktext ? $linktext : $url; ?></a>\n```", "```php\n$a = new Foo;\n$isAFoo = $a instanceof Foo; // true\n$isABar = $a instanceof Bar; // false\n```", "```php\nif (*`expression`*)*`statement`*\n```", "```php\nif (*`expression`*)\n *`statement`*\nelse *`statement`*\n```", "```php\nif ($user_validated)\n echo \"Welcome!\";\nelse\n echo \"Access Forbidden!\";\n```", "```php\nif ($user_validated) {\n echo \"Welcome!\";\n $greeted = 1;\n}\nelse {\n echo \"Access Forbidden!\";\n exit;\n}\n```", "```php\nif ($user_validated):\n echo \"Welcome!\";\n $greeted = 1;\nelse:\n echo \"Access Forbidden!\";\n exit;\nendif;\n```", "```php\n<?php if ($user_validated) : ?>\n <table>\n <tr>\n <td>First Name:</td><td>Sophia</td>\n </tr>\n <tr>\n <td>Last Name:</td><td>Lee</td>\n </tr>\n </table>\n<?php else: ?>\n Please log in.\n<?php endif ?>\n```", "```php\nif ($good) {\n print(\"Dandy!\");\n}\nelse {\n if ($error) {\n print(\"Oh, no!\");\n }\n else {\n print(\"I'm ambivalent...\");\n }\n}\n```", "```php\nif ($good) {\n print(\"Dandy!\");\n}\nelseif ($error) {\n print(\"Oh, no!\");\n}\nelse {\n print(\"I'm ambivalent...\");\n}\n```", "```php\n<td><?php if($active) { echo \"yes\"; } else { echo \"no\"; } ?></td>\n```", "```php\n<td><?php echo $active ? \"yes\" : \"no\"; ?></td>\n```", "```php\nif (*`expression`*) { *`true_statement`* } else { *`false_statement`* }\n (*`expression`*) ? *`true_expression`* : *`false_expression`*\n```", "```php\nif ($name == 'ktatroe') {\n // do something\n}\nelse if ($name == 'dawn') {\n // do something\n}\nelse if ($name == 'petermac') {\n // do something\n}\nelse if ($name == 'bobk') {\n // do something\n}\n```", "```php\nswitch($name) {\n case 'ktatroe':\n // do something\n break;\n case 'dawn':\n // do something\n break;\n case 'petermac':\n // do something\n break;\n case 'bobk':\n // do something\n break;\n}\n```", "```php\nswitch($name):\n case 'ktatroe':\n // do something\n break;\n case 'dawn':\n // do something\n break;\n case 'petermac':\n // do something\n break;\n case 'bobk':\n // do something\n break;\nendswitch;\n```", "```php\nswitch ($name) {\n case 'sylvie': // fall-through\n case 'bruno':\n print(\"yes\");\n break;\n default:\n print(\"no\");\n break;\n}\n```", "```php\nwhile (*`expression`*)*`statement`*\n```", "```php\n$total = 0;\n$i = 1;\n\nwhile ($i <= 10) {\n $total += $i;\n $i++;\n}\n```", "```php\nwhile (*`expr`*):\n *`statement``;`*\n *`more` `statements`* ;\nendwhile;\n```", "```php\n$total = 0;\n$i = 1;\n\nwhile ($i <= 10):\n $total += $i;\n $i++;\nendwhile;\n```", "```php\n$total = 0;\n$i = 1;\n\nwhile ($i <= 10) {\n if ($i == 5) {\n break; // breaks out of the loop\n }\n\n $total += $i;\n $i++;\n}\n```", "```php\n$i = 0;\n$j = 0;\n\nwhile ($i < 10) {\n while ($j < 10) {\n if ($j == 5) {\n break 2; // breaks out of two while loops\n }\n\n $j++;\n }\n\n $i++;\n}\n\necho \"{$i}, {$j}\";\n`0``,` `5`\n```", "```php\nwhile ($i < 10) {\n $i++;\n\n while ($j < 10) {\n if ($j == 5) {\n continue 2; // continues through two levels\n }\n\n $j++;\n }\n}\n```", "```php\ndo\n *`statement`*\nwhile (*`expression`*)\n```", "```php\n$total = 0;\n$i = 1;\n\ndo {\n $total += $i++;\n} while ($i <= 10);\n```", "```php\ndo {\n // do some stuff\n\n if ($errorCondition) {\n break;\n }\n\n // do some other stuff\n} while (false);\n```", "```php\n$counter = 0;\n\nwhile ($counter < 10) {\n echo \"Counter is {$counter} <br/>\";\n $counter++;\n}\n```", "```php\nfor ($counter = 0; $counter < 10; $counter++) {\n echo \"Counter is $counter <br/>\";\n}\n```", "```php\nfor (*`start`*; *`condition`*; *`increment`*) { *`statement``(``s``);`* }\n```", "```php\nfor (*`expr1`*; *`expr2`*; *`expr3`*):\n *`statement``;`*\n *`...``;`*\nendfor;\n```", "```php\n$total = 0;\n\nfor ($i= 1; $i <= 10; $i++) {\n $total += $i;\n}\n```", "```php\n$total = 0;\n\nfor ($i = 1; $i <= 10; $i++):\n $total += $i;\nendfor;\n```", "```php\n$total = 0;\n\nfor ($i = 0, $j = 1; $i <= 10; $i++, $j *= 2) {\n $total += $j;\n}\n```", "```php\nfor (;;) {\n echo \"Can't stop me!<br />\";\n}\n```", "```php\nforeach (*`$array`* as *`$current`*) {\n // ... }\n```", "```php\nforeach (*`$array`* as *`$current`*):\n // ... endforeach;\n```", "```php\nforeach (*`$array`* as *`$key` `=>` `$value`*) {\n // ... }\n```", "```php\nforeach (*`$array`* as *`$key` `=>` `$value`*):\n // ... endforeach;\n```", "```php\ntry {\n $dbhandle = new PDO('mysql:host=localhost; dbname=library', $username, $pwd);\n doDB_Work($dbhandle); // call function on gaining a connection\n $dbhandle = null; // release handle when done\n}\ncatch (PDOException $error) {\n print \"Error!: \" . $error->getMessage() . \"<br/>\";\n die();\n}\n```", "```php\ndeclare (*`directive`*)*`statement`*\n```", "```php\nregister_tick_function(\"someFunction\");\n\ndeclare(ticks = 3) {\n for($i = 0; $i < 10; $i++) {\n // do something\n }\n}\n```", "```php\ndeclare(encoding = \"UTF-8\");\n```", "```php\n$db = mysql_connect(\"localhost\", $USERNAME, $PASSWORD);\n\nif (!$db) {\n die(\"Could not connect to database\");\n}\n```", "```php\n$db = mysql_connect(\"localhost\", $USERNAME, $PASSWORD)\n or die(\"Could not connect to database\");\n```", "```php\nfor ($i = 0; $i < $count; $i++) {\n // oops, found an error\n if ($error) {\n goto cleanup;\n }\n}\n\ncleanup:\n// do some cleanup\n```", "```php\n<?php include \"header.html\"; ?>\n*`content`*\n<?php include \"footer.html\"; ?>\n```", "```php\nrequire \"codelib.php\";\nmysub(); // defined in codelib.php\n```", "```php\n<?php require \"design.php\";\nheader(); ?>\n*`content`*\n<?php footer();\n```", "```php\ninclude \"http://www.example.com/codelib.php\";\n```", "```php\n// main page\ninclude \"userprefs.php\";\necho \"Hello, {$user}.\";\n```", "```php\nfor ($i = 0; $i < 10; $i++) {\n include \"repeated_element.html\";\n}\n```", "```php\n<?php echo \"Hello, world\"; ?>\n```", "```php\n<!doctype html>\n<html>\n<head>\n <title>This is my first PHP program!</title>\n</head>\n\n<body>\n<p>\n Look, ma! It's my first PHP program:<br />\n <?php echo \"Hello, world\"; ?><br />\n How cool is that?\n</p>\n</body>\n\n</html>\n```", "```php\n<!doctype html>\n<html>\n<head>\n <title>This is my first PHP program!</title>\n</head>\n\n<body>\n<p>\n Look, ma! It's my first PHP program:<br />\n Hello, world!<br />\n How cool is that?\n</p>\n</body>\n\n</html>\n```", "```php\n<input type=\"text\" name=\"first_name\" value=\"<?php echo \"Peter\"; ?>\" />\n```", "```php\n<input type=\"text\" name=\"first_name\" value=\"Peter\" />\n```", "```php\n<?php\necho \"Hello, world\"; ?>\n<br />\n```", "```php\n<? echo \"Hello, world\"; ?>\n```", "```php\n<input type=\"text\" name=\"first_name\" value=\"<?= \"Dawn\"; ?>\">\n```"]