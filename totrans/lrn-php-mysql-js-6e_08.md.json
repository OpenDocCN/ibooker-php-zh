["```php\necho date(\"l\"); // Displays the day of the week\n```", "```php\nphpinfo();\n```", "```php\n<?php\n  echo strrev(\" .dlrow olleH\"); // Reverse string\n  echo str_repeat(\"Hip \", 2);   // Repeat string\n  echo strtoupper(\"hooray!\");   // String to uppercase\n?>\n```", "```php\nfunction *`function_name`*([*`parameter`* [, ...]])\n{\n  // *`Statements`*\n}\n```", "```php\n$lowered = strtolower(\"aNY # of Letters and Punctuation you WANT\");\n```", "```php\necho $lowered;\n```", "```php\n$ucfixed = ucfirst(\"any # of letters and punctuation you want\");\n```", "```php\necho $ucfixed;\n```", "```php\nprint(5-8);\n```", "```php\nprint(abs(5-8));\n```", "```php\nucfirst(strtolower(\"aNY # of Letters and Punctuation you WANT\"))\n```", "```php\n<?php\n  echo fix_names(\"WILLIAM\", \"henry\", \"gatES\");\n\n  function fix_names($n1, $n2, $n3)\n  {\n    $n1 = ucfirst(strtolower($n1));\n    $n2 = ucfirst(strtolower($n2));\n    $n3 = ucfirst(strtolower($n3));\n\n    return $n1 . \" \" . $n2 . \" \" . $n3;\n  }\n?>\n```", "```php\n<?php\n  $names = fix_names(\"WILLIAM\", \"henry\", \"gatES\");\n  echo $names[0] . \" \" . $names[1] . \" \" . $names[2];\n\n  function fix_names($n1, $n2, $n3)\n  {\n    $n1 = ucfirst(strtolower($n1));\n    $n2 = ucfirst(strtolower($n2));\n    $n3 = ucfirst(strtolower($n3));\n\n    return array($n1, $n2, $n3);\n  }\n?>\n```", "```php\n<?php\n  $a1 = \"WILLIAM\";\n  $a2 = \"henry\";\n  $a3 = \"gatES\";\n\n  echo $a1 . \" \" . $a2 . \" \" . $a3 . \"<br>\";\n  fix_names($a1, $a2, $a3);\n  echo $a1 . \" \" . $a2 . \" \" . $a3;\n\n  function fix_names(&$n1, &$n2, &$n3)\n  {\n    $n1 = ucfirst(strtolower($n1));\n    $n2 = ucfirst(strtolower($n2));\n    $n3 = ucfirst(strtolower($n3));\n  }\n?>\n```", "```php\n<?php\n  $a1 = \"WILLIAM\";\n  $a2 = \"henry\";\n  $a3 = \"gatES\";\n\n  echo $a1 . \" \" . $a2 . \" \" . $a3 . \"<br>\";\n  fix_names();\n  echo $a1 . \" \" . $a2 . \" \" . $a3;\n\n  function fix_names()\n  {\n    global $a1; $a1 = ucfirst(strtolower($a1));\n    global $a2; $a2 = ucfirst(strtolower($a2));\n    global $a3; $a3 = ucfirst(strtolower($a3));\n  }\n?>\n```", "```php\n<?php\n  include \"library.php\";\n\n  // Your code goes here\n?>\n```", "```php\n<?php\n  include_once \"library.php\";\n\n  // Your code goes here\n?>\n```", "```php\n<?php\n  require_once \"library.php\";\n\n  // Your code goes here\n?>\n```", "```php\n<?php\n  if (function_exists(\"array_combine\"))\n  {\n    echo \"Function exists\";\n  }\n  else\n  {\n    echo \"Function does not exist - better write our own\";\n  }\n?>\n```", "```php\n<?php\n  $object = new User;\n  print_r($object);\n\n  class User\n  {\n    public $name, $password;\n\n    function save_user()\n    {\n      echo \"Save User code goes here\";\n    }\n  }\n?>\n```", "```php\n`User` `Object`\n`(`\n  `[``name``]`     `=>`\n  `[``password``]` `=>`\n`)`\n\n```", "```php\n$object = new User;\n$temp   = new User('name', 'password');\n```", "```php\n<?php\n  $object = new User;\n  print_r($object); echo \"<br>\";\n\n  $object->name     = \"Joe\";\n  $object->password = \"mypass\";\n  print_r($object); echo \"<br>\";\n\n  $object->save_user();\n\n  class User\n  {\n    public $name, $password;\n\n    function save_user()\n    {\n      echo \"Save User code goes here\";\n    }\n  }\n?>\n```", "```php\n`User` `Object`\n`(`\n  `[``name``]`     `=>`\n  `[``password``]` `=>`\n`)`\n`User` `Object`\n`(`\n  `[``name``]`     `=>` `Joe`\n  `[``password``]` `=>` `mypass`\n`)`\n`Save` `User` `code` `goes` `here`\n\n```", "```php\n<?php\n  $object1       = new User();\n  $object1->name = \"Alice\";\n  $object2       = $object1;\n  $object2->name = \"Amy\";\n\n  echo \"object1 name = \" . $object1->name . \"<br>\";\n  echo \"object2 name = \" . $object2->name;\n\n  class User\n  {\n    public $name;\n  }\n?>\n```", "```php\nobject1 name = Amy\nobject2 name = Amy\n\n```", "```php\n<?php\n  $object1       = new User();\n  $object1->name = \"Alice\";\n  $object2       = clone $object1;\n  $object2->name = \"Amy\";\n\n  echo \"object1 name = \" . $object1->name . \"<br>\";\n  echo \"object2 name = \" . $object2->name;\n\n  class User\n  {\n    public $name;\n  }\n?>\n```", "```php\nobject1 name = Alice\nobject2 name = Amy\n\n```", "```php\n<?php\n  class User\n  {\n    function __construct($param1, $param2)\n    {\n      // Constructor statements go here\n    }\n  }\n?>\n```", "```php\n<?php\n  class User\n  {\n    function __destruct()\n    {\n      // Destructor code goes here\n    }\n  }\n?>\n```", "```php\n<?php\n  class User\n  {\n    public $name, $password;\n\n    function get_password()\n    {\n      return $this->password;\n    }\n  }\n?>\n```", "```php\n$object           = new User;\n$object->password = \"secret\";\n\necho $object->get_password();\n```", "```php\n<?php\n  $object1       = new User();\n  $object1->name = \"Alice\";\n\n  echo $object1->name;\n\n  class User {}\n?>\n```", "```php\n<?php\n  class Test\n  {\n    public $name  = \"Paul Smith\"; // Valid\n    public $age   = 42;           // Valid\n    public $time  = time();       // Invalid - calls a function\n    public $score = $level * 2;   // Invalid - uses an expression\n  }\n?>\n```", "```php\n<?php\n  Translate::lookup();\n\n  class Translate\n  {\n    const ENGLISH = 0;\n    const SPANISH = 1;\n    const FRENCH  = 2;\n    const GERMAN  = 3;\n    // ...\n\n    static function lookup()\n    {\n      echo self::SPANISH;\n    }\n  }\n?>\n```", "```php\n<?php\n  class Example\n  {\n    var $name   = \"Michael\"; // Same as public but deprecated\n    public $age = 23;        // Public property\n    protected $usercount;    // Protected property\n\n    private function admin() // Private method\n    {\n      // Admin code goes here\n    }\n  }\n?>\n```", "```php\n<?php\n  User::pwd_string();\n\n  class User\n  {\n    static function pwd_string()\n    {\n      echo \"Please enter your password\";\n    }\n  }\n?>\n```", "```php\n<?php\n  $temp = new Test();\n\n  echo \"Test A: \" . Test::$static_property . \"<br>\";\n  echo \"Test B: \" . $temp->get_sp()        . \"<br>\";\n  echo \"Test C: \" . $temp->static_property . \"<br>\";\n\n  class Test\n  {\n    static $static_property = \"I'm static\";\n\n    function get_sp()\n    {\n       return self::$static_property;\n    }\n  }\n?>\n```", "```php\n Test A: I'm static\nTest B: I'm static\nNotice: Undefined property: Test::$static_property\nTest C: \n\n```", "```php\n<?php\n  $object           = new Subscriber;\n  $object->name     = \"Fred\";\n  $object->password = \"pword\";\n  $object->phone    = \"012 345 6789\";\n  $object->email    = \"fred@bloggs.com\";\n  $object->display();\n\n  class User\n  {\n    public $name, $password;\n\n    function save_user()\n    {\n      echo \"Save User code goes here\";\n    }\n  }\n\n  class Subscriber extends User\n  {\n    public $phone, $email;\n\n    function display()\n    {\n      echo \"Name:  \" . $this->name     . \"<br>\";\n      echo \"Pass:  \" . $this->password . \"<br>\";\n      echo \"Phone: \" . $this->phone    . \"<br>\";\n      echo \"Email: \" . $this->email;\n    }\n  }\n?>\n```", "```php\n<?php\n  $object = new Son;\n  $object->test();\n  $object->test2();\n\n  class Dad\n  {\n    function test()\n    {\n      echo \"[Class Dad] I am your Father<br>\";\n    }\n  }\n\n  class Son extends Dad\n  {\n    function test()\n    {\n      echo \"[Class Son] I am Luke<br>\";\n    }\n\n    function test2()\n    {\n      parent::test();\n    }\n  }\n?>\n```", "```php\nself::method();\n```", "```php\n<?php\n  $object = new Tiger();\n\n  echo \"Tigers have...<br>\";\n  echo \"Fur: \" . $object->fur . \"<br>\";\n  echo \"Stripes: \" . $object->stripes;\n\n  class Wildcat\n  {\n    public $fur; // Wildcats have fur\n\n    function __construct()\n    {\n      $this->fur = \"TRUE\";\n    }\n  }\n\n  class Tiger extends Wildcat\n  {\n    public $stripes; // Tigers have stripes\n\n    function __construct()\n    {\n      parent::__construct(); // Call parent constructor first\n      $this->stripes = \"TRUE\";\n    }\n  }\n?>\n```", "```php\n<?php\n  class User\n  {\n    final function copyright()\n    {\n      echo \"This class was written by Joe Smith\";\n    }\n  }\n?>\n```"]