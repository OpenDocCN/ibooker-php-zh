["```php\n<script\n  src=\"https://unpkg.com/react@17/umd/react.development.js\">\n</script>\n<script\n  src=\"https://unpkg.com/react-dom@17/umd/react-dom.development.js\">\n</script>\n```", "```php\n<script\n  src=\"https://unpkg.com/react@17/umd/react.production.min.js\">\n</script>\n<script\n  src=\"https://unpkg.com/react-dom@17/umd/react-dom.production.min.js\">\n</script>\n```", "```php\n<script src=\"react.development.js\"></script>\n<script src=\"react-dom.development.js\"></script>\n```", "```php\n<script src=\"https://unpkg.com/babel-standalone@6/babel.min.js\"></script>\n```", "```php\n<script src=\"babel.min.js\"></script>\n```", "```php\n<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"utf-8\">\n    <title>First React Project</title>\n\n    <script src='react.development.js'    ></script>\n    <script src='react-dom.development.js'></script>\n    <script src=\"babel.min.js\">            </script>\n\n    <script type=\"text/babel\">\n      `class` `One` `extends` `React``.``Component`\n      `{`\n        `render``(``)`\n        `{`\n          `return` `<``p``>``By` `Jeeves``,` `it` `works``!``<``/``p``>`\n        `}`\n      `}`\n\n      `ReactDOM``.``render``(``<``One` `/``>``,` `document``.``getElementById``(``'div1'``)``)`\n    </script>\n  </head>\n  <body>\n    <div id=\"div1\" style='font-family:monospace'></div>\n  </body>\n</html>\n\n```", "```php\n<p>By Jeeves, it works!</p>\n```", "```php\nBy Jeeves, it works!\n```", "```php\n<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"utf-8\">\n    <title>First React Project</title>\n\n    <script src='react.development.js'    ></script>\n    <script src='react-dom.development.js'></script>\n    <script src=\"babel.min.js\">            </script>\n\n    <script type=\"text/babel\">\n      `function` `Two``(``)`\n      `{`\n        `return` `<``p``>``And` `this``,` `by` `Jove``!``<``/``p``>`\n      `}`\n\n      ReactDOM.render(`<``Two` `/``>`, document.getElementById(`'div2'`))\n    </script>\n  </head>\n  <body>\n    <div id=\"div2\" style='font-family:monospace'></div>\n  </body>\n</html>\n\n```", "```php\nAnd this, by Jove!\n```", "```php\n<script type=\"text/babel\">\n  function Two()\n  {\n    return <p>And this, by Jove!</p>\n  }\n\n  ReactDOM.render(<Two />,\n  document.getElementById('div2'))\n</script>\n\n<div id=\"div2\"></div>\n\n```", "```php\nfunction mult(m1, m2)\n{\n  return m1 * m2\n}\n\n```", "```php\nfunction assign(obj, val)\n{\n  obj.value = val\n}\n\n```", "```php\n<script type=\"text/babel\">\n  class One extends React.Component\n  {\n    render()\n    {\n      return <p>By Jeeves, it works!</p>\n    }\n  }\n\n  function Two()\n  {\n    return <p>And this, by Jove!</p>\n  }\n\n  `doRender``(``<``One` `/``>``,` `'div1'``)`\n  `doRender``(``<``Two` `/``>``,` `'div2'``)`\n\n  `function` `doRender``(``elem``,` `dest``)`\n  {\n    ReactDOM.render(`elem`, document.getElementById(`dest`)) `}`\n</script>\n\n<div id=\"div1\" style=\"font-family:monospace\"></div>\n<div id=\"div2\" style=\"font-family:monospace\"></div>\n\n```", "```php\nBy Jeeves, it works!\n```", "```php\nAnd this, by Jove!\n```", "```php\n<script type=\"text/babel\">\n  function Welcome(props)\n  {\n    return <h1>Hello, {props.name}</h1>\n  }\n\n  doRender(<Welcome name='Robin' />, 'hello')\n</script>\n\n<div id=\"hello\" style='font-family:monospace'></div>\n```", "```php\nreturn <h1>Hello, {props.name}</h1>\n```", "```php\ndoRender(<Welcome name='Robin' />, 'hello')\n```", "```php\n  Hello, Robin\n```", "```php\nconst elem = <Welcome name='Robin' />\ndoRender(elem, 'hello')\n\n```", "```php\n<script type=\"text/babel\">\n  class Clock extends React.Component\n  {\n    constructor(props)\n    {\n      super(props)\n      this.state = {date: new Date()}\n    }\n\n    render()\n    {\n      return <span> {this.state.date.toLocaleTimeString()} </span>\n    }\n  }\n\n  doRender(<Clock />, 'the_time')\n</script>\n\n<p style='font-family:monospace'>The time is: <span id=\"the_time\"></span></p>\n\n```", "```php\ncomponentDidMount()\n{\n  this.timerID = setInterval(() => this.tick(), 1000)\n}\n\n```", "```php\ncomponentWillUnmount()\n{\n  clearInterval(this.timerID)\n}\n\n```", "```php\ntick()\n{\n  this.setState({date: new Date()})\n}\n```", "```php\n<script type=\"text/babel\">\n  class Clock extends React.Component\n  {\n    constructor(props)\n    {\n      super(props)\n      this.state = {date: new Date()}\n    }\n\n    componentDidMount()\n    {\n      this.timerID = setInterval(() => this.tick(), 1000)\n    }\n\n    componentWillUnmount()\n    {\n      clearInterval(this.timerID)\n    }\n\n    tick()\n    {\n      this.setState({date: new Date()})\n    }\n\n    render()\n    {\n      return <span> {this.state.date.toLocaleTimeString()} </span>\n    }\n  }\n\n  doRender(<Clock />, 'the_time')\n}\n</script>\n\n<p style='font-family:monospace'>The time is: <span id=\"the_time\"></span></p>\n\n```", "```php\nThe time is: 12:17:21\n```", "```php\n<script type=\"text/babel\">\n  class Toggle extends React.Component\n  {\n    constructor(props)\n    {\n      super(props)\n      this.state       = {isVisible: true}\n      this.handleClick = this.handleClick.bind(this)\n    }\n\n    handleClick()\n    {\n      this.setState(state => ({isVisible: !state.isVisible}))\n    }\n\n    render()\n    {\n      const show = this.state.isVisible\n\n      return (\n        <div>\n          <button onClick={this.handleClick}>\n            {show ? 'HIDE' : 'DISPLAY'}\n          </button>\n          <p>{show ? 'Here is some text' : ''}</p>\n        </div>\n      )\n    }\n  }\n\n  doRender(<Toggle />, 'display')\n</script>\n\n<div id=\"display\" style=\"font-family:monospace\"></div>\n\n```", "```php\nthis.state = {isVisible: true}\n```", "```php\nthis.handleClick = this.handleClick.bind(this)\n```", "```php\nthis.setState(state => ({isVisible: !state.isVisible}))\n```", "```php\n expression ? return this if true : or this if false.\n\n```", "```php\n[HIDE]\n```", "```php\nHere is some text\n```", "```php\n[DISPLAY]\n```", "```php\n<script type=\"text/babel\">\n  class Setup extends React.Component\n  {\n    constructor(props)\n    {\n      super(props)\n      this.highScore    = 90\n      this.currentScore = 100\n    }\n\n    render()\n    {\n      return (\n        <div>\n          {\n            `this``.``currentScore` `>` `this``.``highScore` `&&`\n              <h1>New High Score</h1>\n          }\n        </div>\n      )\n    }\n  }\n\n  doRender(<Setup />, 'display')\n</script>\n\n<div id='display' style='font-family:monospace'></div>\n\n```", "```php\n  New High Score\n```", "```php\n<script type=\"text/babel\">\n  const cats       = ['lion', 'tiger', 'cheetah', 'lynx']\n  const listofCats = `cats``.``map`((cat) => <li>{cat}</li>)\n\n  doRender(`<``ul``>``{``listofCats``}``<``/``ul``>`, 'display')\n</script>\n\n<div id='display' style='font-family:monospace'></div>\n\n```", "```php\n• lion\n• tiger\n• cheetah\n• lynx\n```", "```php\n<script type=\"text/babel\">\n  `var` `uniqueId`     `=` `0`\n  const cats       = ['lion', 'tiger', 'cheetah', 'lynx']\n  const listofCats = cats.map((cat) => <li `key``=``{``uniqueId``++``}`>{cat}</li>)\n\n  doRender(<ul>{listofCats}</ul>, 'display')\n</script>\n\n<div id='display' style='font-family:monospace'></div>\n\n```", "```php\n• 0 lion\n• 1 tiger\n• 2 cheetah\n• 3 lynx\n```", "```php\n<ul> // Cities In Europe\n  <li>Birmingham</li>\n  <li>Paris</li>\n  <li>Milan</li>\n  <li>Vienna</li>\n</ul>\n<ul> // Cities in the USA\n  <li>Cincinnati</li>\n  <li>Paris</li>\n  <li>Chicago</li>\n  <li>Birmingham</li>\n</ul>\n\n```", "```php\n<ul> // Cities In Europe\n  <li key = \"1\">Birmingham</li>\n  <li key = \"2\">Paris</li>\n  <li key = \"3\">Milan</li>\n  <li key = \"4\">Vienna</li>\n</ul>\n<ul> // Cities in the USA\n  <li key = \"5\">Cincinnati</li>\n  <li key = \"6\">Paris</li>\n  <li key = \"7\">Chicago</li>\n  <li key = \"8\">Birmingham</li>\n</ul>\n```", "```php\n<form>\n  Name: <input type='text' name='name'>\n  <input type='submit'>\n</form>\n\n```", "```php\n<script type=\"text/babel\">\n  class GetName extends React.Component\n  {\n    constructor(props)\n    {\n      super(props)\n      this.state    = {value: ''}\n      this.onChange = this.onChange.bind(this)\n      this.onSubmit = this.onSubmit.bind(this)\n    }\n\n    onChange(event)\n    {\n      this.setState({value: event.target.value})\n    }\n\n    onSubmit(event)\n    {\n      alert('You submitted: ' + this.state.value)\n      event.preventDefault()\n    }\n\n    render()\n    {\n      return (\n        <form onSubmit={this.onSubmit}>\n          <label>\n            Name:\n            <input type=\"text\" value={this.state.value}\n                            onChange={this.onChange} />\n          </label>\n          <input type=\"submit\" />\n        </form>\n      )\n    }\n  }\n\n  doRender(<GetName />, 'display')\n</script>\n\n<div id='display' style='font-family:monospace'></div>\n\n```", "```php\n<script type=\"text/babel\">\n  class `GetText` extends React.Component\n  {\n    constructor(props)\n    {\n      super(props)\n      this.state    = {value: ''}\n      this.onChange = this.onChange.bind(this)\n      this.onSubmit = this.onSubmit.bind(this)\n    }\n\n    onChange(event)\n    {\n      this.setState({value: event.target.value})\n    }\n\n    onSubmit(event)\n    {\n      alert('You submitted: ' + this.state.value)\n      event.preventDefault()\n    }\n\n    render()\n    {\n      return (\n        <form onSubmit={this.onSubmit}>\n          <label>\n            `Enter` `some` `text``:``<``br` `/``>`\n            `<``textarea` `rows``=``'5'` `cols``=``'40'` value={this.state.value}\n                                      onChange={this.onChange} />\n          </label>`<``br` `/``>`\n          <input type=\"submit\" />\n        </form>\n      )\n    }\n  }\n\n  doRender(<`GetText` />, 'display')\n\n  function doRender(elem, dest)\n  {\n    ReactDOM.render(elem, document.getElementById(dest))\n  }\n</script>\n\n<div id='display' style='font-family:monospace'></div>\n\n```", "```php\n<select>\n  <option          value=\"Australia\">Australia</option>\n  <option          value=\"Canada\"   >Canada</option>\n  <option          value=\"UK\"       >United Kingdom</option>\n  <option selected value=\"USA\"      >United States</option>\n</select>\n```", "```php\n<script type=\"text/babel\">\n  class `GetCountry` extends React.Component\n  {\n    constructor(props)\n    {\n      super(props)\n      this.state    = {`value``:` `'USA'`}\n      this.onChange = this.onChange.bind(this)\n      this.onSubmit = this.onSubmit.bind(this)\n    }\n\n    onChange(event)\n    {\n      this.setState({value: event.target.value})\n    }\n\n    onSubmit(event)\n    {\n      alert('You selected: ' + this.state.value)\n      event.preventDefault()\n    }\n\n    render()\n    {\n      return (\n        <form onSubmit={this.onSubmit}>\n          <label>\n            `Select` `a` `country`:\n            `<``select` `value``=``{``this``.``state``.``value``}`\n                 `onChange``=``{``this``.``onChange``}``>`\n              `<``option` `value``=``\"Australia\"``>``Australia``<``/``option``>`\n              `<``option` `value``=``\"Canada\"`   `>``Canada``<``/``option``>`\n              `<``option` `value``=``\"UK\"`       `>``United` `Kingdom``<``/``option``>`\n              `<``option` `value``=``\"USA\"`      `>``United` `States``<``/``option``>`\n            `<``/``select``>`\n          </label>\n          <input type=\"submit\" />\n        </form>\n      )\n    }\n  }\n\n  doRender(<`GetCountry` />, 'display')\n\n  function doRender(elem, dest)\n  {\n    ReactDOM.render(elem, document.getElementById(dest))\n  }\n</script>\n\n<div id='display' style='font-family:monospace'></div>\n\n```"]