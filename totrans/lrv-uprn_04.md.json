["```php\n<h1>{{ $group->title }}</h1>\n{!! $group->heroImageHtml() !!}\n\n@forelse ($users as $user)\n    • {{ $user->first_name }} {{ $user->last_name }}<br>\n@empty\n    No users in this group.\n@endforelse\n```", "```php\n@if (count($talks) === 1)\n    There is one talk at this time period.\n@elseif (count($talks) === 0)\n    There are no talks at this time period.\n@else\n    There are {{ count($talks) }} talks at this time period.\n@endif\n```", "```php\n@unless ($user->hasPaid())\n    You can complete your payment by switching to the payment tab.\n@endunless\n```", "```php\n@for ($i = 0; $i < $talk->slotsCount(); $i++)\n    The number is {{ $i }}<br>\n@endfor\n```", "```php\n@foreach ($talks as $talk)\n    • {{ $talk->title }} ({{ $talk->length }} minutes)<br>\n@endforeach\n```", "```php\n@while ($item = array_pop($items))\n    {{ $item->orSomething() }}<br>\n@endwhile\n```", "```php\n@forelse ($talks as $talk)\n    • {{ $talk->title }} ({{ $talk->length }} minutes)<br>\n@empty\n    No talks this day.\n@endforelse\n```", "```php\n<!-- resources/views/layouts/master.blade.php -->\n<html>\n    <head>\n        <title>My Site | @yield('title', 'Home Page')</title>\n    </head>\n    <body>\n        <div class=\"container\">\n            @yield('content')\n        </div>\n        @section('footerScripts')\n            <script src=\"app.js\"></script>\n        @show\n    </body>\n</html>\n```", "```php\n<!-- resources/views/dashboard.blade.php -->\n@extends('layouts.master')\n\n@section('title', 'Dashboard')\n\n@section('content')\n    Welcome to your application dashboard!\n@endsection\n\n@section('footerScripts')\n    @parent\n    <script src=\"dashboard.js\"></script>\n@endsection\n```", "```php\n<!-- resources/views/home.blade.php -->\n<div class=\"content\" data-page-name=\"{{ $pageName }}\">\n    <p>Here's why you should sign up for our app: <strong>It's Great.</strong></p>\n\n    @include('sign-up-button', ['text' => 'See just how great it is'])\n</div>\n\n<!-- resources/views/sign-up-button.blade.php -->\n<a class=\"button button--callout\" data-page-name=\"{{ $pageName }}\">\n    <i class=\"exclamation-icon\"></i> {{ $text }}\n</a>\n```", "```php\n{{-- Include a view if it exists --}}\n@includeIf('sidebars.admin', ['some' => 'data'])\n\n{{-- Include a view if a passed variable is truth-y --}}\n@includeWhen($user->isAdmin(), 'sidebars.admin', ['some' => 'data'])\n\n{{-- Include the first view that exists from a given array of views --}}\n@includeFirst(['customs.header', 'header'], ['some' => 'data'])\n```", "```php\n<!-- resources/views/sidebar.blade.php -->\n<div class=\"sidebar\">\n    @each('partials.module', $modules, 'module', 'partials.empty-module')\n</div>\n\n<!-- resources/views/partials/module.blade.php -->\n<div class=\"sidebar-module\">\n    <h1>{{ $module->title }}</h1>\n</div>\n\n<!-- resources/views/partials/empty-module.blade.php -->\n<div class=\"sidebar-module\">\n    No modules :(\n</div>\n```", "```php\n<!-- resources/views/partials/modal.blade.php -->\n<div class=\"modal\">\n    <h2>{{ $title }}</h2>\n    <div>{!! $content !!}</div>\n    <div class=\"close button etc\">...</div>\n</div>\n\n<!-- in another template -->\n@include('partials.modal', [\n    'title' => 'Insecure password',\n    'content' => '<p>The password you have provided is not valid. Here are the rules\n    for valid passwords: [...]</p><p><a href=\"#\">...</a></p>'\n])\n```", "```php\n<!-- resources/views/components/modal.blade.php -->\n<div class=\"modal\">\n    <h2>{{ $title }}</h2>\n    <div>{{ $slot }}</div>\n    <div class=\"close button etc\">...</div>\n</div>\n\n<!-- in another template -->\n<x-modal title=\"Insecure password\">\n    <p>The password you have provided is not valid.\n    Here are the rules for valid passwords: [...]</p>\n\n    <p><a href=\"#\">...</a></p>\n</x-modal>\n```", "```php\nphp artisan make:component modal --view\n```", "```php\nphp artisan make:component modal\n```", "```php\n# To create it:\nphp artisan make:component modals.cancellation\n```", "```php\n// To use it:\n<x-modals.cancellation />\n```", "```php\n<!-- Passing the data in -->\n<x-modal title=\"Title here yay\" :width=\"$width\" />\n```", "```php\n<!-- Accessing the data in the template -->\n<div style=\"width: {{ $width }}\">\n    <h1>{{ $title }}</h1>\n</div>\n```", "```php\nclass Modal extends Component\n{\n    public function __construct(\n        public string $title,\n        public string $width,\n    ) {}\n}\n```", "```php\n@props([\n    'width',\n    'title',\n])\n\n<div style=\"width: {{ $width }}\">\n    <h1>{{ $title }}</h1>\n</div>\n```", "```php\n<x-modal>\n    <x-slot:title>\n        <h2 class=\"uppercase\">Password requirements not met</h2>\n    </x-slot>\n\n    <p>The password you have provided is not valid.\n    Here are the rules for valid passwords: [...]</p>\n\n    <p><a href=\"#\">...</a></p>\n</x-modal>\n```", "```php\n// in the component definition\npublic function isPromoted($item)\n{\n    return $item->promoted_at !== null && ! $item->promoted_at->isPast();\n}\n```", "```php\n<!-- in the template -->\n<div>\n    @if ($isPromoted($item))\n        <!-- show promoted badge -->\n    @endif\n    <!-- ... -->\n</div>\n```", "```php\n<!-- Merge default classes with passed-in classes  -->\n<!-- Definition -->\n<div {{ $attributes->merge(['class' => 'p-4 m-4']) }}>\n    {{ $message }}\n</div>\n\n<!-- Usage -->\n<x-notice class=\"text-blue-200\">\n    Message here\n</x-notice>\n\n<!-- Outputs: -->\n<div class=\"p-4 m-4 text-blue-200\">\n    Message here\n</div>\n```", "```php\n<!-- resources/views/layouts/app.blade.php -->\n<html>\n<head>\n    <link href=\"/css/global.css\">\n    <!-- the placeholder where stack content will be placed -->\n    @stack('styles')\n</head>\n<body>\n    <!-- // -->\n</body>\n</html>\n\n<!-- resources/views/jobs.blade.php -->\n@extends('layouts.app')\n\n@push('styles')\n    <!-- push something to the bottom of the stack -->\n    <link href=\"/css/jobs.css\">\n@endpush\n\n<!-- resources/views/jobs/apply.blade.php -->\n@extends('jobs')\n\n@prepend('styles')\n    <!-- push something to the top of the stack -->\n    <link href=\"/css/jobs--apply.css\">\n@endprepend\n```", "```php\n<html>\n<head>\n    <link href=\"/css/global.css\">\n    <!-- the placeholder where stack content will be placed -->\n    <!-- push something to the top of the stack -->\n    <link href=\"/css/jobs--apply.css\">\n    <!-- push something to the bottom of the stack -->\n    <link href=\"/css/jobs.css\">\n</head>\n<body>\n    <!-- // -->\n</body>\n</html>\n```", "```php\nRoute::get('passing-data-to-views', function () {\n    return view('dashboard')\n        ->with('key', 'value');\n});\n```", "```php\nRoute::get('home', function () {\n    return view('home')\n        ->with('posts', Post::recent());\n});\n\nRoute::get('about', function () {\n    return view('about')\n        ->with('posts', Post::recent());\n});\n```", "```php\n// Some service provider\npublic function boot()\n{\n    ...\n    view()->share('recentPosts', Post::recent());\n}\n```", "```php\nview()->composer('partials.sidebar', function ($view) {\n    $view->with('recentPosts', Post::recent());\n});\n```", "```php\n<?php\n\nnamespace App\\Http\\ViewComposers;\n\nuse App\\Post;\nuse Illuminate\\Contracts\\View\\View;\n\nclass RecentPostsComposer\n{\n    public function compose(View $view)\n    {\n        $view->with('recentPosts', Post::recent());\n    }\n}\n```", "```php\npublic function boot(): void\n{\n    view()->composer(\n        'partials.sidebar',\n        \\App\\Http\\ViewComposers\\RecentPostsComposer::class\n    );\n}\n```", "```php\nRoute::get('backend/sales', function (AnalyticsService $analytics) {\n    return view('backend.sales-graphs')\n        ->with('analytics', $analytics);\n});\n```", "```php\n<div class=\"finances-display\">\n     {{ $analytics->getBalance() }} / {{ $analytics->getBudget() }}\n</div>\n```", "```php\n@inject('analytics', 'App\\Services\\Analytics')\n\n<div class=\"finances-display\">\n     {{ $analytics->getBalance() }} / {{ $analytics->getBudget() }}\n</div>\n```", "```php\npublic function boot(): void\n{\n    Blade::directive('ifGuest', function () {\n        return \"<?php if (auth()->guest()): ?>\";\n    });\n}\n```", "```php\nBlade::directive('ifGuest', function () {\n    // Antipattern! Do not copy.\n    $ifGuest = auth()->guest();\n    return \"<?php if ({$ifGuest}): ?>\";\n});\n```", "```php\n// Binding\nBlade::directive('newlinesToBr', function ($expression) {\n    return \"<?php echo nl2br({$expression}); ?>\";\n});\n\n// In use\n<p>@newlinesToBr($message->body)</p>\n```", "```php\n@if (app('context')->isPublic())\n    &copy; Copyright MyApp LLC\n@else\n    &copy; Copyright {{ app('context')->client->name }}\n@endif\n```", "```php\n// Binding\nBlade::directive('ifPublic', function () {\n    return \"<?php if (app('context')->isPublic()): ?>\";\n});\n\n// In use\n@ifPublic\n    &copy; Copyright MyApp LLC\n@else\n    &copy; Copyright {{ app('context')->client->name }}\n@endif\n```", "```php\n// Binding\nBlade::if('ifPublic', function () {\n    return (app('context'))->isPublic();\n});\n```", "```php\n// EventsTest.php\npublic function test_list_page_shows_all_events()\n{\n    $event1 = Event::factory()->create();\n    $event2 = Event::factory()->create();\n\n    $this->get('events')\n        ->assertSee($event1->title)\n        ->assertSee($event2->title);\n}\n```", "```php\n// EventsTest.php\npublic function test_list_page_shows_all_events()\n{\n    $event1 = Event::factory()->create();\n    $event2 = Event::factory()->create();\n\n    $response = $this->get('events');\n\n    $response->assertViewHas('events', Event::all());\n    $response->assertViewHasAll([\n        'events' => Event::all(),\n        'title' => 'Events Page',\n    ]);\n    $response->assertViewMissing('dogs');\n}\n```", "```php\n// EventsTest.php\npublic function test_list_page_shows_all_events()\n{\n    $event1 = Event::factory()->create();\n\n    $response = $this->get(\"events/{ $event1->id }\");\n\n    $response->assertViewHas('event', function ($event) use ($event1) {\n        return $event->id === $event1->id;\n    });\n}\n```"]