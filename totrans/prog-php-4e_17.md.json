["```php\nclass Book {\n public $id;\n public $name;\n public $edition;\n\n public function __construct($id) {\n $this->id = $id;\n }\n}\n\nclass Author {\n public $id;\n public $name;\n public $books = array();\n\n public function __construct($id) {\n $this->id = $id;\n }\n}\n```", "```php\n$authorID = \"ktatroe\";\n$url = \"http://example.com/api/authors/{$authorID}\";\n\n$ch = curl_init();\ncurl_setopt($ch, CURLOPT_URL, $url);\n\n$response = curl_exec($ch);\n$resultInfo = curl_getinfo($ch);\n\ncurl_close($ch);\n\n// decode the JSON and use a Factory to instantiate an Author object\n$authorJSON = json_decode($response);\n$author = ResourceFactory::authorFromJSON($authorJSON);\n```", "```php\n$bookID = \"ProgrammingPHP\";\n$url = \"http://example.com/api/books/{$bookID}\";\n\n$data = json_encode(array(\n 'edition' => 4,\n));\n\n$requestData = http_build_query($data, '', '&');\n\n$ch = curl_init();\ncurl_setopt($ch, CURLOPT_URL, $url);\n\n$fh = fopen(\"php://memory\", 'rw');\nfwrite($fh, $requestData);\nrewind($fh);\n\ncurl_setopt($ch, CURLOPT_INFILE, $fh);\ncurl_setopt($ch, CURLOPT_INFILESIZE, mb_strlen($requestData));\ncurl_setopt($ch, CURLOPT_PUT, true);\n\n$response = curl_exec($ch);\n$resultInfo = curl_getinfo($ch);\n\ncurl_close($ch);\nfclose($fh);\n```", "```php\n<?php $newAuthor = new Author('pbmacintyre');\n$newAuthor->name = \"Peter Macintyre\";\n\n$url = \"http://example.com/api/authors\";\n\n$data = array(\n 'data' => json_encode($newAuthor)\n);\n\n$requestData = http_build_query($data, '', '&');\n\n$ch = curl_init();\ncurl_setopt($ch, CURLOPT_URL, $url);\n\ncurl_setopt($ch, CURLOPT_POSTFIELDS, $requestData);\ncurl_setopt($ch, CURLOPT_POST, true);\n\n$response = curl_exec($ch);\n$resultInfo = curl_getinfo($ch);\n\ncurl_close($ch);\n```", "```php\n<?php $authorID = \"ktatroe\";\n$bookID = \"ProgrammingPHP\";\n$url = \"http://example.com/api/authors/{$authorID}/books/{$bookID}\";\n\n$ch = curl_init();\ncurl_setopt($ch, CURLOPT_URL, $url);\n\ncurl_setopt($ch, CURLOPT_CUSTOMREQUEST, 'DELETE');\n\n$result = curl_exec($ch);\n$resultInfo = curl_getinfo($ch);\n\ncurl_close($ch);\n```", "```php\n<?php\n// expose this function via RPC as \"multiply()\"\nfunction times ($method, $args) {\n return $args[0] * $args[1];\n}\n\n$request = $HTTP_RAW_POST_DATA;\n\nif (!$request) {\n $requestXml = $_POST['xml'];\n}\n\n$server = xmlrpc_server_create() or die(\"Couldn't create server\");\nxmlrpc_server_register_method($server, \"multiply\", \"times\");\n\n$options = array(\n 'output_type' => 'xml',\n 'version' => 'auto',\n);\n\necho xmlrpc_server_call_method($server, $request, null, $options);\n\nxmlrpc_server_destroy($server);\n```", "```php\n$server = xmlrpc_server_create();\n```", "```php\nxmlrpc_server_register_method(*`server`*, *`method`*, *`function`*);\n```", "```php\n$response = xmlrpc_server_call_method(*`server`*, *`request`*, *`user_data`* [, *`options`*]);\n```", "```php\n$retval = exposedFunction(*`method`*, *`args`* [, *`user_data`*]);\n```", "```php\n<?php\nrequire_once(\"utils.php\");\n\n$options = array('output_type' => \"xml\", 'version' => \"xmlrpc\");\n\n$result = xu_rpc_http_concise(\n array(\n 'method' => \"multiply\",\n 'args' => array(5, 6),\n 'host' => \"192.168.0.1\",\n 'uri' => \"/~gnat/test/ch11/xmlrpc-server.php\",\n 'options' => $options,\n )\n);\n\necho \"5 * 6 is {$result}\";\n```", "```php\n$response = xu_rpc_http_concise(*`hash`*);\n```"]