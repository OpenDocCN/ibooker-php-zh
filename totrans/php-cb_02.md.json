["```php\n$value = 1;\n\n$bool = (bool) $value;\n$float = (float) $value;\n$string = (string) $value;\n\nvar_dump([$bool, $float, $string]);\n\n// array(3) {\n//   [0]=>\n//   bool(true)\n//   [1]=>\n//   float(1)\n//   [2]=>\n//   string(1) \"1\"\n// }\n```", "```php\n$username = isset($_GET['username']) ? $_GET['username'] : 'default';\n```", "```php\n$_value_ = (_expression to evaluate_) ? (if true) : (if false);\n```", "```php\n<h1>Welcome, <?php echo is_logged_in() ? $_SESSION['user'] : 'Guest'; ?>!</h1>\n```", "```php\n$username = $_GET['username'] ?: 'default';\n```", "```php\n$val = isset($_GET['username']) ? $_GET['username'] : (isset($_GET['userid'])\n       ? $_GET['user_id'] : null);\n```", "```php\nif (isset($_GET['username'])) {\n    $val = $_GET['username'];\n} elseif (isset($_GET['userid'])) {\n    $val = $_GET['userid'];\n} else {\n    $val = null;\n}\n```", "```php\n$username = $_GET['username'] ?? 'not logged in';\n```", "```php\n$a = $b ?: $c;\n$a = $b ?? $c;\n```", "```php\n$username = $_GET['username'] ?? 'anonymous';\n$username = $_GET['username'] ?: 'anonymous'; // Notice: undefined index ...\n```", "```php\nif ($a === $b) {\n    // ...\n}\n```", "```php\nfunction count_books_of_type($category)\n{\n    $sql = \"SELECT COUNT(*) FROM books WHERE category = :category\";\n\n    try {\n        $dbh = new PDO(DB_CONNECTION_STRING, DB_LOGIN, DB_PASS);\n        $statement = $dbh->prepare($sql);\n\n        $statement->execute(array(':category' => $category));\n        return $statement->fetchColumn();\n    } catch (PDOException $e) {\n        return false;\n    }\n}\n```", "```php\n$books_found = count_books_of_type('fiction');\n\nswitch ($books_found) {\n    case 0:\n        echo 'No fiction books found';\n        break;\n    case 1:\n        echo 'Found one fiction book';\n        break;\n    default:\n        echo 'Found ' . $books_found . ' fiction books';\n}\n```", "```php\nclass Person {\n    public $firstName;\n    public $lastName;\n\n    public function __construct($first, $last)\n    {\n        $this->firstName = $first;\n        $this->lastName = $last;\n    }\n};\n```", "```php\n$presidents = [];\n\n$presidents[] = new Person('George', 'Washington');\n$presidents[] = new Person('John', 'Adams');\n$presidents[] = new Person('Thomas', 'Jefferson');\n// ...\n$presidents[] = new Person('Barack', 'Obama');\n$presidents[] = new Person('Donald', 'Trump');\n$presidents[] = new Person('Joseph', 'Biden');\n```", "```php\nfunction presidential_sorter($left, $right)\n{\n    return [$left->lastName, $left->firstName]\n        <=>\n        [$right->lastName, $right->firstName];\n}\n\nusort($presidents, 'presidential_sorter');\n```", "```php\nfunction sorter($a, $b) {\n    return ($a < $b) ? -1 : (($a > $b) ? 1 : 0);\n}\n```", "```php\n$fp = @fopen('file_that_does_not_exist.txt', 'r');\n```", "```php\n$filename = @$_GET['filename'];\n```", "```php\nconst FLAG_A = 0b0001; // 1\nconst FLAG_B = 0b0010; // 2\nconst FLAG_C = 0b0100; // 4\nconst FLAG_D = 0b1000; // 8\n\n// Set a composite flag for an application\n$application = FLAG_A | FLAG_B; // 0b0011 or 3\n\n// Set a composite flag for a user\n$user = FLAG_B | FLAG_C | FLAG_D; // 0b1110 or 14\n\n// Switch based on the user's applied flags\nif ($user & FLAG_B) {\n    // ...\n} else {\n    // ...\n}\n```", "```php\nconst VIEW_ARTICLES   = 0b0001;\nconst CREATE_ARTICLES = 0b0010;\nconst EDIT_ARTICLES   = 0b0100;\nconst DELETE_ARTICLES = 0b1000;\n```", "```php\nconst ROLE_ANONYMOUS = VIEW_ARTICLES;\nconst ROLE_AUTHOR    = VIEW_ARTICLES | CREATE_ARTICLES;\nconst ROLE_EDITOR    = VIEW_ARTICLES | EDIT_ARTICLES | DELETE_ARTICLES;\nconst ROLE_ADMIN     = VIEW_ARTICLES | CREATE_ARTICLES | EDIT_ARTICLES\n                       | DELETE_ARTICLES;\n```", "```php\nfunction get_article($article_id)\n{\n    $role = get_user_role();\n\n    if ($role & VIEW_ARTICLES) {\n        // ...\n    } else {\n        throw new UnauthorizedException();\n    }\n}\n\nfunction create_article($content)\n{\n    $role = get_user_role();\n\n    if ($role & CREATE_ARTICLES) {\n        // ...\n    } else {\n        throw new UnauthorizedException();\n    }\n}\n\nfunction edit_article($article_id, $content)\n{\n    $role = get_user_role();\n\n    if ($role & EDIT_ARTICLES) {\n        // ...\n    } else {\n        throw new UnauthorizedException();\n    }\n}\n\nfunction delete_article($article_id)\n{\n    $role = get_user_role();\n\n    if ($role & DELETE_ARTICLES) {\n        // ...\n    } else {\n        throw new UnauthorizedException();\n    }\n}\n```"]