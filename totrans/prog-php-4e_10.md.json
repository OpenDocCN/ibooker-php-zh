["```php\nINSERT INTO books VALUES (null, 4, 'I, Robot', '0-553-29438-5', 1950, 1);\n```", "```php\nINSERT INTO books (authorid, title, ISBN, pub_year, available)\n VALUES (4, 'I, Robot', '0-553-29438-5', 1950, 1);\n```", "```php\nDELETE FROM books WHERE pub_year = 1979;\n```", "```php\nUPDATE books SET pub_year=1983 WHERE title='Roots';\n```", "```php\nSELECT * FROM books WHERE pub_year > 1979 AND pub_year < 1990;\n```", "```php\nSELECT title, pub_year FROM books WHERE pub_year > 1979 AND pub_year < 1990;\n```", "```php\nSELECT authors.name, books.title FROM books, authors\n WHERE authors.authorid = books.authorid;\n```", "```php\nSELECT a.name, b.title FROM books b, authors a WHERE a.authorid = b.authorid;\n```", "```php\nextension=php_pdo.dll\nextension=php_pdo_mysql.dll\n```", "```php\n$db = new PDO($*`dsn`*, $*`username`*, $*`password`*);\n```", "```php\n$db = new PDO(\"mysql:host=localhost;dbname=library\", \"petermac\", \"abc123\");\n```", "```php\n$db->query(\"UPDATE books SET authorid=4 WHERE pub_year=1982\");\n```", "```php\n$statement = $db->prepare(\"SELECT * FROM books\");\n$statement->execute();\n\n// handle row results, one at a time\nwhile($row = $statement->fetch()) {\n print_r($row);\n // ... or probably do something more meaningful with each returned row\n}\n\n$statement = null;\n```", "```php\n$statement = $db->prepare(\"INSERT INTO books (authorid, title, ISBN, pub_year)\"\n . \"VALUES (:authorid, :title, :ISBN, :pub_year)\");\n\n$statement->execute(array(\n 'authorid' => 4,\n 'title' => \"Foundation\",\n 'ISBN' => \"0-553-80371-9\",\n 'pub_year' => 1951),\n);\n```", "```php\n$statement = $db->prepare(\"INSERT INTO books (authorid, title, ISBN, pub_year)\"\n . \"VALUES (?, ?, ?, ?)\");\n\n$statement->execute(array(4, \"Foundation\", \"0-553-80371-9\", 1951));\n```", "```php\ntry {\n // connection successful\n $db = new PDO(\"mysql:host=localhost;dbname=banking_sys\", \"petermac\", \"abc123\");\n} catch (Exception $error) {\n die(\"Connection failed: \" . $error->getMessage());\n}\n\ntry {\n $db->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);\n $db->beginTransaction();\n\n $db->exec(\"insert into accounts (account_id, amount) values (23, '5000')\" );\n $db->exec(\"insert into accounts (account_id, amount) values (27, '-5000')\" );\n\n $db->commit();\n} catch (Exception $error) {\n $db->rollback();\n echo \"Transaction not completed: \" . $error->getMessage();\n}\n```", "```php\n$statement = $db->prepare(\"SELECT title FROM books WHERE authorid = ?)\";\n\n$statement->bindParam(1, \"12345678\", PDO::PARAM_STR);\n$statement->execute();\n\n$statement->debugDumpParams();\n```", "```php\nSQL: [35] SELECT title\n FROM books\n WHERE authorID = ?\nSent SQL: [44] SELECT title\n FROM books\n WHERE authorid = \"12345678\"\nParams: 1\nKey: Position #0:\nparamno=0\nname[0] \"\"\nis_param=1\nparam_type=2\n```", "```php\n$db = new mysqli(*`host`*, *`user`*, *`password`*, *`databaseName`*);\n```", "```php\n$db = new mysqli(\"localhost\", \"petermac\", \"1q2w3e9i8u7y\", \"library\");\n```", "```php\n$db = new mysqli(\"localhost\", \"petermac\", \"1q2w3e9i8u7y\", \"library\");\n\n$sql = \"INSERT INTO books (authorid, title, ISBN, pub_year, available)\n VALUES (4, 'I, Robot', '0-553-29438-5', 1950, 1)\";\n\nif ($db->query($sql)) {\n echo \"Book data saved successfully.\";\n} else {\n echo \"INSERT attempt failed, please try again later, or call tech support\" ;\n}\n\n$db->close();\n```", "```php\n$db = new mysqli(\"localhost\", \"petermac\", \"1q2w3e9i8u7y\", \"library\");\n$sql = \"SELECT a.name, b.title FROM books b, authors a WHERE \na.authorid=b.authorid\";\n$result = $db->query($sql);\n\nwhile ($row = $result->fetch_assoc()) {\n echo \"{$row['name']} is the author of: {$row['title']}<br />\";\n}\n\n$result->close();\n$db->close();\n```", "```php\nJ.R.R. Tolkien is the author of: The Two Towers\nJ.R.R. Tolkien is the author of: The Return of The King\nJ.R.R. Tolkien is the author of: The Hobbit\nAlex Haley is the author of: Roots\nTom Clancy is the author of: Rainbow Six\nTom Clancy is the author of: Teeth of the Tiger\nTom Clancy is the author of: Executive Orders...\n```", "```php\n$db = new SQLiteDatabase(\"library.sqlite\");\n```", "```php\n$sql = \"CREATE TABLE 'authors' ('authorid' INTEGER PRIMARY KEY, 'name' TEXT)\";\n\nif (!$database->queryExec($sql, $error)) {\n echo \"Create Failure - {$error}<br />\";\n} else {\n echo \"Table Authors was created <br />\";\n}\n\n$sql = <<<SQL\nINSERT INTO 'authors' ('name') VALUES ('J.R.R. Tolkien');\nINSERT INTO 'authors' ('name') VALUES ('Alex Haley');\nINSERT INTO 'authors' ('name') VALUES ('Tom Clancy');\nINSERT INTO 'authors' ('name') VALUES ('Isaac Asimov');\nSQL; \nif (!$database->queryExec($sql, $error)) {\n echo \"Insert Failure - {$error}<br />\";\n} else {\n echo \"INSERT to Authors - OK<br />\";\n}\n`Table` `Authors` `was` `createdINSERT` `to` `Authors` `-` `OK`\n```", "```php\n$db = new SQLiteDatabase(\"library.sqlite\");\n\n$sql = \"CREATE TABLE 'books' ('bookid' INTEGER PRIMARY KEY,\n 'authorid' INTEGER,\n 'title' TEXT,\n 'ISBN' TEXT,\n 'pub_year' INTEGER,\n 'available' INTEGER,\n)\";\n\nif ($db->queryExec($sql, $error) == FALSE) {\n echo \"Create Failure - {$error}<br />\";\n} else {\n echo \"Table Books was created<br />\";\n}\n\n$sql = <<<SQL\nINSERT INTO books ('authorid', 'title', 'ISBN', 'pub_year', 'available')\nVALUES (1, 'The Two Towers', '0-261-10236-2', 1954, 1);\n\nINSERT INTO books ('authorid', 'title', 'ISBN', 'pub_year', 'available')\nVALUES (1, 'The Return of The King', '0-261-10237-0', 1955, 1);\n\nINSERT INTO books ('authorid', 'title', 'ISBN', 'pub_year', 'available')\nVALUES (2, 'Roots', '0-440-17464-3', 1974, 1);\n\nINSERT INTO books ('authorid', 'title', 'ISBN', 'pub_year', 'available')\nVALUES (4, 'I, Robot', '0-553-29438-5', 1950, 1);\n\nINSERT INTO books ('authorid', 'title', 'ISBN', 'pub_year', 'available')\nVALUES (4, 'Foundation', '0-553-80371-9', 1951, 1);\nSQL;\n\nif (!$db->queryExec($sql, $error)) {\n echo \"Insert Failure - {$error}<br />\";\n} else {\n echo \"INSERT to Books - OK<br />\";\n}\n```", "```php\n$db = new SQLiteDatabase(\"c:/copy/library.sqlite\");\n\n$sql = \"SELECT a.name, b.title FROM books b, authors a WHERE a.authorid=b.authorid\";\n$result = $db->query($sql);\n\nwhile ($row = $result->fetch()) {\n echo \"{$row['a.name']} is the author of: {$row['b.title']}<br/>\";\n}\n```", "```php\nJ.R.R. Tolkien is the author of: The Two Towers\nJ.R.R. Tolkien is the author of: The Return of The King\nAlex Haley is the author of: Roots\nIsaac Asimov is the author of: I, Robot\nIsaac Asimov is the author of: Foundation\n```", "```php\nsession_start();\n\nif (!empty($_POST['posted']) && !empty($_POST['email'])) {\n $folder = \"surveys/\" . strtolower($_POST['email']);\n\n // send path information to the session\n $_SESSION['folder'] = $folder;\n\n if (!file_exists($folder)) {\n // make the directory and then add the empty files\n mkdir($folder, 0777, true);\n }\n\n header(\"Location: 08_6.php\");\n} else { ?>\n```", "```php\n<html>\n <head>\n <title>Files & folders - On-line Survey</title>\n </head>\n\n <body bgcolor=\"white\" text=\"black\">\n <h2>Survey Form</h2>\n\n <p>Please enter your e-mail address to start recording your comments</p>\n\n <form action=\"<?php echo $_SERVER['PHP_SELF']; ?>\" method=\"POST\">\n <input type=\"hidden\" name=\"posted\" value=\"1\">\n <p>Email address: <input type=\"text\" name=\"email\" size=\"45\" /><br />\n <input type=\"submit\" name=\"submit\" value=\"Submit\"></p>\n </form>\n </body>\n </html>\n<?php }\n```", "```php\n<?php\nsession_start();\n$folder = $_SESSION['folder'];\n$filename = $folder . \"/question1.txt\";\n\n// open file for reading then clean it out\n$file_handle = fopen($filename, \"a+\");\n\n// pick up any text in the file that may already be there\n$comments = file_get_contents($filename) ;\nfclose($file_handle); // close this handle\n\nif (!empty($_POST['posted'])) {\n // create file if first time and then\n //save text that is in $_POST['question1']\n $question1 = $_POST['question1'];\n $file_handle = fopen($filename, \"w+\");\n\n // open file for total overwrite\n if (flock($file_handle, LOCK_EX)) {\n // do an exclusive lock\n if (fwrite($file_handle, $question1) == FALSE) {\n echo \"Cannot write to file ($filename)\";\n }\n\n // release the lock\n flock($file_handle, LOCK_UN);\n }\n\n // close the file handle and redirect to next page ?\n fclose($file_handle);\n header( \"Location: page2.php\" );\n} else { ?>\n <html>\n <head>\n <title>Files & folders - On-line Survey</title>\n </head>\n\n <body>\n <table border=\"0\">\n <tr>\n <td>Please enter your response to the following survey question:</td>\n </tr>\n <tr bgcolor=lightblue>\n <td>\n What is your opinion on the state of the world economy?<br/>\n Can you help us fix it ?\n </td>\n </tr>\n <tr>\n <td>\n <form action=\"<?php echo $_SERVER['PHP_SELF']; ?>\" method=\"POST\">\n <input type=\"hidden\" name=\"posted\" value=\"1\"><br/>\n <textarea name=\"question1\" rows=12 cols=35><?= $comments ?></textarea>\n </td>\n </tr>\n\n <tr>\n <td><input type=\"submit\" name=\"submit\" value=\"Submit\"></form></td>\n </tr>\n </table>\n<?php } ?>\n```", "```php\n$file_handle = fopen($filename, \"a+\");\n```", "```php\n$comments = file_get_contents($filename);\nfclose($file_handle);\n```", "```php\n// do an exclusive lock\nif (flock($file_handle, LOCK_EX)) {\n if (fwrite($file_handle, $question1) == FALSE){\n echo \"Cannot write to file ($filename)\";\n }\n // release the lock\n flock($file_handle, LOCK_UN);\n}\n```", "```php\n<?php\nsession_start();\n$folder = $_SESSION['folder'];\n$filename = $folder . \"/question2.txt\" ;\n\n// open file for reading then clean it out\n$file_handle = fopen($filename, \"a+\");\n\n// pick up any text in the file that may already be there\n$comments = fread($file_handle, filesize($filename));\nfclose($file_handle); // close this handle\n\nif ($_POST['posted']) {\n // create file if first time and then save\n //text that is in $_POST['question2']\n $question2 = $_POST['question2'];\n\n // open file for total overwrite\n $file_handle = fopen($filename, \"w+\");\n\n if(flock($file_handle, LOCK_EX)) { // do an exclusive lock\n if(fwrite($file_handle, $question2) == FALSE) {\n echo \"Cannot write to file ($filename)\";\n }\n\n flock($file_handle, LOCK_UN); // release the lock\n }\n\n // close the file handle and redirect to next page ?\n fclose($file_handle);\n\n header( \"Location: last_page.php\" );\n} else { ?>\n <html>\n <head>\n <title>Files & folders - On-line Survey</title>\n </head>\n\n <body>\n <table border=\"0\">\n <tr>\n <td>Please enter your comments to the following survey statement:</td>\n </tr>\n\n <tr bgcolor=\"lightblue\">\n <td>It's a funny thing freedom. I mean how can any of us <br/>\n be really free when we still have personal possessions.\n How do you respond to the previous statement?</td>\n </tr>\n\n <tr>\n <td>\n <form action=\"<?php echo $_SERVER['PHP_SELF']; ?>\" method=POST>\n <input type=\"hidden\" name=\"posted\" value=\"1\"><br/>\n <textarea name=\"question2\" rows=\"12\" cols=\"35\"><?= $comments ?></textarea>\n </td>\n </tr>\n\n <tr>\n <td><input type=\"submit\" name=\"submit\" value=\"Submit\"></form></td>\n </tr>\n</table>\n<?php } ?>\n```", "```php\n$mongo = new Mongo();\n$db = $mongo->library;\n$authors = $db->authors;\n\n$author = array('authorid' => 1, 'name' => \"J.R.R. Tolkien\");\n$authors->insert($author);\n\n$author = array('authorid' => 2, 'name' => \"Alex Haley\");\n$authors->insert($author);\n\n$author = array('authorid' => 3, 'name' => \"Tom Clancy\");\n$authors->save($author);\n\n$author = array('authorid' => 4, 'name' => \"Isaac Asimov\");\n$authors->save($author);\n```", "```php\n$mongo = new Mongo();\n$db = $mongo->library;\n$authors = $db->authors;\n\n$data = $authors->findone(array('authorid' => 4));\n\necho \"Generated Primary Key: {$data['_id']}<br />\";\necho \"Author name: {$data['name']}\";\n```", "```php\nGenerated Primary Key: 4ff43ef45b9e7d300c000007\nAuthor name: Isaac Asimov\n```", "```php\n$mongo = new Mongo();\n$db = $mongo->library;\n$authors = $db->authors;\n\n$authors->update(\n array('name' => \"Isaac Asimov\"),\n array('$set' =>\n array('books' =>\n array(\n \"0-425-17034-9\" => \"Foundation\",\n \"0-261-10236-2\" => \"I, Robot\",\n \"0-440-17464-3\" => \"Second Foundation\",\n \"0-425-13354-0\" => \"Pebble In The Sky\",\n )\n )\n )\n);\n```", "```php\n$mongo = new Mongo();\n$db = $mongo->library;\n$authors = $db->authors;\n\n$data = $authors->findone(array('name' => \"Isaac Asimov\"));\n\n$bookData = array(\n array(\n \"ISBN\" => \"0-553-29337-0\",\n \"title\" => \"Foundation\",\n \"pub_year\" => 1951,\n \"available\" => 1,\n ),\n array(\n \"ISBN\" => \"0-553-29438-5\",\n \"title\" => \"I, Robot\",\n \"pub_year\" => 1950,\n \"available\" => 1,\n ),\n array(\n \"ISBN\" => \"0-517-546671\",\n \"title\" => \"Exploring the Earth and the Cosmos\",\n \"pub_year\" => 1982,\n \"available\" => 1,\n ),\n array(\n \"ISBN' => \"0-553-29336-2\",\n 'title\" => \"Second Foundation\",\n \"pub_year\" => 1953,\n \"available\" => 1,\n ),\n);\n\n$authors->update(\n array(\"_id\" => $data[\"_id\"]),\n array(\"$set\" => array(\"books\" => $bookData))\n);\n```", "```php\n$mongo = new Mongo();\n$db = $mongo->library;\n$authors = $db->authors;\n\n$data = $authors->findone(array(\"authorid\" => 4));\n\necho \"Generated Primary Key: {$data['_id']}<br />\";\necho \"Author name: {$data['name']}<br />\";\necho \"2nd Book info - ISBN: {$data['books'][1]['ISBN']}<br />\";\necho \"2nd Book info - Title: {$data['books'][1]['title']<br />\";\n```", "```php\nGenerated Primary Key: 4ff43ef45b9e7d300c000007\nAuthor name: Isaac Asimov\n2nd Book info - ISBN: 0-553-29438-5\n2nd Book info - Title: I, Robot\n```"]